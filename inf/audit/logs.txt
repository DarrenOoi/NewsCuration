test[2023-09-09 14:00:42.019480] [SUCCESS] [Established connection <pymysql.cursors.DictCursor object at 0x000001D6FBE01130>] 
[2023-09-09 14:02:02.325292] [SUCCESS] [Established connection <pymysql.cursors.DictCursor object at 0x0000024E2D3C20A0>] 
[2023-09-09 14:02:12.573786] [SUCCESS] [Established connection <pymysql.cursors.DictCursor object at 0x00000261E7EF3040>] 
[2023-09-09 14:05:03.995468] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000019E0E7118E0>] 
[2023-09-09 14:05:03.997104] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000019E0E711310>] 
[2023-09-09 14:07:23.895673] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000119DED613A0>]
[2023-09-09 14:07:23.899282] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000119DED61400>]
[2023-09-09 14:07:24.731139] [SUCCESS] [Established connection to database <pymysql.cursors.DictCursor object at 0x00000119DED61400>]
[2023-09-09 14:07:25.222195] [FAIL] [Unable to execute sql 
 0]
[2023-09-09 14:07:46.139329] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021E462B13A0>]
[2023-09-09 14:07:46.141338] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021E462B1400>]
[2023-09-09 14:07:46.974304] [SUCCESS] [Established connection to database <pymysql.cursors.DictCursor object at 0x0000021E462B1400>]
[2023-09-09 14:10:26.277532] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002D4674413A0>]
[2023-09-09 14:10:26.278523] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002D467441400>]
[2023-09-09 14:10:27.121948] [SUCCESS] [Established connection to database <pymysql.cursors.DictCursor object at 0x000002D467441400>]
[2023-09-09 14:13:20.864869] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C11E30D280>]
[2023-09-09 14:13:20.866912] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C11E30DB80>]
[2023-09-09 14:13:21.728004] [SUCCESS] [Established connection to database <pymysql.cursors.DictCursor object at 0x000001C11E30DB80>]
[2023-09-09 14:13:22.162009] [FAIL] [an exception occured in the execution statement: 
 (1050, "Table 'article' already exists")]
[2023-09-09 14:13:22.164008] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C11E30D280>]
[2023-09-09 14:13:22.164008] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C11E30DB80>]
[2023-09-09 15:03:37.445591] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000207C031B460>]
[2023-09-09 15:03:37.447595] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000207C031BD60>]
[2023-09-09 15:03:38.271544] [SUCCESS] [Established connection to database <pymysql.cursors.DictCursor object at 0x00000207C031BD60>]
[2023-09-09 15:03:38.681445] [FAIL] [an exception occured in the execution statement: 
 (1050, "Table 'article' already exists")]
[2023-09-09 15:03:38.682547] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000207C031B460>]
[2023-09-09 15:03:38.683525] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000207C031BD60>]
[2023-09-09 15:12:51.659856] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000019A9C67B460>]
[2023-09-09 15:12:51.660851] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000019A9C67BD60>]
[2023-09-09 15:12:52.486824] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:12:52.905248] [FAIL] [an exception occured in the execution statement: 
 (1054, "Unknown column 'InsertedDateTime' in 'field list'")]
[2023-09-09 15:12:52.907239] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000019A9C67B460>]
[2023-09-09 15:12:52.908239] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000019A9C67BD60>]
[2023-09-09 15:13:20.923287] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000264AA0BB460>]
[2023-09-09 15:13:20.924947] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000264AA0BBD60>]
[2023-09-09 15:13:21.776644] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:13:22.203942] [FAIL] [Unable to execute sql 
 1 with error object of type 'int' has no len()]
[2023-09-09 15:13:22.630630] [SUCCESS] [<_io.TextIOWrapper name='sql/article.sql' mode='r' encoding='cp1252'>]
[2023-09-09 15:14:09.590348] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001132A079640>]
[2023-09-09 15:14:09.591349] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001132A079F40>]
[2023-09-09 15:14:10.395313] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:14:10.798085] [FAIL] [Unable to execute sql 
 1 with error object of type 'int' has no len()]
[2023-09-09 15:14:11.205995] [SUCCESS] [<_io.TextIOWrapper name='sql/article.sql' mode='r' encoding='cp1252'>]
[2023-09-09 15:15:12.582102] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001EFB8C69610>]
[2023-09-09 15:15:12.583102] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001EFB8C69F10>]
[2023-09-09 15:15:13.386695] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:15:13.788320] [FAIL] [Unable to execute sql 
 1 with error object of type 'int' has no len()]
[2023-09-09 15:15:14.196388] [SUCCESS] [<_io.TextIOWrapper name='sql/article.sql' mode='r' encoding='cp1252'>]
[2023-09-09 15:18:13.849817] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000029F566656A0>]
[2023-09-09 15:18:13.851822] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000029F56665FA0>]
[2023-09-09 15:18:14.683149] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:18:15.941919] [SUCCESS] [<_io.TextIOWrapper name='sql/article.sql' mode='r' encoding='cp1252'>]
[2023-09-09 15:20:17.108184] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000191DFCA5700>]
[2023-09-09 15:20:17.111267] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000191DFCA5B50>]
[2023-09-09 15:20:17.944519] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:20:19.202057] [SUCCESS] [<_io.TextIOWrapper name='sql/article.sql' mode='r' encoding='cp1252'>]
[2023-09-09 15:20:34.183851] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002D9343A5730>]
[2023-09-09 15:20:34.185856] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002D9343A5B80>]
[2023-09-09 15:20:35.006446] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:20:36.251327] [SUCCESS] [<_io.TextIOWrapper name='sql/article.sql' mode='r' encoding='cp1252'>]
[2023-09-09 15:22:24.431921] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002C6E88AFF70>]
[2023-09-09 15:22:24.433609] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002C6E8855640>]
[2023-09-09 15:22:25.274099] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 15:22:26.117498] [SUCCESS] [-- CREATE TABLE article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     Score DECIMAL(5,2), -- 5 total digits with 2 decimal places
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAT DATETIME
-- );

-- INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
-- VALUES (
--     'https://www.example.com/sample-article',
--     87.75,
--     'This is a sample article summary. It contains some dummy text to demonstrate inserting data into the database.',
--     1, -- Assuming 1 means true for 'InProduction'
--     NOW() -- Inserts the current date and time
-- );

SELECT * FROM article]
[2023-09-09 15:22:26.122964] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002C6E88AFF70>]
[2023-09-09 15:22:26.122964] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002C6E8855640>]
[2023-09-09 17:35:43.975056] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020FF49E7730>]
[2023-09-09 17:35:43.976049] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020FF49E71F0>]
[2023-09-09 17:35:44.818963] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 17:36:23.330246] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002D06B0C8670>]
[2023-09-09 17:36:23.331332] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002D06B0C8130>]
[2023-09-09 17:36:24.156693] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 17:37:59.131293] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000017459B58610>]
[2023-09-09 17:37:59.132294] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000017459B580D0>]
[2023-09-09 17:37:59.970305] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 17:38:00.816137] [SUCCESS] [committed query: 
    SELECT * 
    FROM article
    WHERE 1=1
    ]
[2023-09-09 17:38:00.817137] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000017459B58610>]
[2023-09-09 17:38:00.818137] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000017459B580D0>]
[2023-09-09 17:39:15.790432] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001B142FA8670>]
[2023-09-09 17:39:15.791445] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001B142FA8130>]
[2023-09-09 17:39:16.607884] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 17:39:17.426164] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM article
    WHERE 1=1
    ]
[2023-09-09 17:39:17.430157] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001B142FA8670>]
[2023-09-09 17:39:17.431157] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001B142FA8130>]
[2023-09-09 18:07:42.297221] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C0D7939640>]
[2023-09-09 18:07:42.299223] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C0D7939100>]
[2023-09-09 18:07:43.134648] [SUCCESS] [Established connection to database newscuration]
[2023-09-09 18:07:43.973461] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM article
    WHERE 1=1
    ]
[2023-09-09 18:07:43.977460] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C0D7939640>]
[2023-09-09 18:07:43.978470] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C0D7939100>]
[2023-09-10 09:42:29.123022] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001932735FD90>]
[2023-09-10 09:42:29.125049] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001932735FEE0>]
[2023-09-10 09:42:29.965796] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 09:42:30.822840] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW()
    );
    ]
[2023-09-10 09:44:09.306946] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001EC42B4FDC0>]
[2023-09-10 09:44:09.308026] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001EC42B4FF10>]
[2023-09-10 09:44:10.139562] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 09:44:10.977865] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW()
    );
    ]
[2023-09-10 09:44:11.813907] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) FROM article;
    ]
[2023-09-10 09:44:31.258546] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000028B83EFEDF0>]
[2023-09-10 09:44:31.260542] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000028B83EFEF40>]
[2023-09-10 09:44:32.119453] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 09:44:32.981186] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW()
    );
    ]
[2023-09-10 09:44:33.839353] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) FROM article;
    ]
[2023-09-10 09:45:01.596072] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020F12FCEDF0>]
[2023-09-10 09:45:01.597081] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020F12FCEF40>]
[2023-09-10 09:45:02.440596] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 09:45:03.287840] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW()
    );
    ]
[2023-09-10 09:45:04.133379] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 09:45:04.136689] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020F12FCEDF0>]
[2023-09-10 09:45:04.137689] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020F12FCEF40>]
[2023-09-10 09:54:41.158857] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E0CA44EDF0>]
[2023-09-10 09:54:41.160859] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E0CA44EF40>]
[2023-09-10 09:54:42.001308] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 09:54:42.837717] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW()
    );
    ]
[2023-09-10 09:54:43.671924] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 09:54:43.673923] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001E0CA44EDF0>]
[2023-09-10 09:54:43.674923] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001E0CA44EF40>]
[2023-09-10 10:09:46.113015] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002367F35EB20>]
[2023-09-10 10:09:46.114016] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002367F35EAC0>]
[2023-09-10 10:09:46.946120] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:09:47.781343] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW()
    );
    ]
[2023-09-10 10:09:48.617361] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 10:09:48.619356] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002367F35EB20>]
[2023-09-10 10:09:48.620355] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002367F35EAC0>]
[2023-09-10 10:17:43.535160] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002371780EB20>]
[2023-09-10 10:17:43.536082] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002371780EAC0>]
[2023-09-10 10:17:44.354584] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:17:45.224531] [Daniel Ciccotosto-Camp] [SUCCESS] [-- CREATE TABLE article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     Score DECIMAL(5,2), -- 5 total digits with 2 decimal places
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAT DATETIME
-- );

DROP TABLE article]
[2023-09-10 10:17:45.227526] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002371780EB20>]
[2023-09-10 10:17:45.228525] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002371780EAC0>]
[2023-09-10 10:18:01.871990] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D39617EB20>]
[2023-09-10 10:18:01.873982] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D39617EAC0>]
[2023-09-10 10:18:02.727242] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:18:03.157726] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-10 10:18:03.585536] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM article
    WHERE 1=1
    ]
[2023-09-10 10:18:03.587528] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D39617EB20>]
[2023-09-10 10:18:03.588528] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D39617EAC0>]
[2023-09-10 10:19:21.241060] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001BA0017EB20>]
[2023-09-10 10:19:21.243055] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001BA0017EAC0>]
[2023-09-10 10:19:22.057651] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:19:22.468691] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-10 10:19:22.876433] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM article
    WHERE 1=1
    ]
[2023-09-10 10:19:22.879428] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001BA0017EB20>]
[2023-09-10 10:19:22.879428] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001BA0017EAC0>]
[2023-09-10 10:19:34.221263] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002032B97EB20>]
[2023-09-10 10:19:34.223353] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002032B97EAC0>]
[2023-09-10 10:19:35.056612] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:19:35.937846] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    Score DECIMAL(5,2), -- 5 total digits with 2 decimal places
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- DROP TABLE article]
[2023-09-10 10:19:35.940928] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002032B97EB20>]
[2023-09-10 10:19:35.942932] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002032B97EAC0>]
[2023-09-10 10:22:20.789429] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001559BA8EC10>]
[2023-09-10 10:22:20.791422] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001559BA8EBB0>]
[2023-09-10 10:22:21.629239] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:22:22.047985] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    Daniel Ciccotosto-Camp
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Ciccotosto-Camp\n    )' at line 8")]
[2023-09-10 10:22:22.468003] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    Daniel Ciccotosto-Camp
    );
    ]
[2023-09-10 10:22:23.305786] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 10:22:23.309342] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001559BA8EC10>]
[2023-09-10 10:22:23.310384] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001559BA8EBB0>]
[2023-09-10 10:22:50.990091] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C1A4D4EC10>]
[2023-09-10 10:22:50.993119] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C1A4D4EBB0>]
[2023-09-10 10:22:51.805664] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:22:52.212541] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-10 10:22:52.622119] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAT)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-10 10:22:53.439733] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 10:22:53.442642] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C1A4D4EC10>]
[2023-09-10 10:22:53.443642] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C1A4D4EBB0>]
[2023-09-10 10:23:12.919545] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002858CAFEC10>]
[2023-09-10 10:23:12.920539] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002858CAFEBB0>]
[2023-09-10 10:23:13.765726] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 10:23:14.616887] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-10 10:23:15.462276] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 10:23:15.464297] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002858CAFEC10>]
[2023-09-10 10:23:15.464297] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002858CAFEBB0>]
[2023-09-10 17:03:13.399360] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000023104EEEC10>]
[2023-09-10 17:03:13.401351] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000023104EEEBB0>]
[2023-09-10 17:03:14.228456] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-10 17:03:15.073006] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-10 17:03:15.914878] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-10 17:03:15.917569] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000023104EEEC10>]
[2023-09-10 17:03:15.917569] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000023104EEEBB0>]
[2023-09-12 12:26:03.547707] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001B27F1FEC10>]
[2023-09-12 12:26:03.548692] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001B27F1FEBB0>]
[2023-09-12 12:26:04.014678] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-12 12:26:04.492486] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-12 12:26:04.958977] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-12 12:26:04.959937] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001B27F1FEC10>]
[2023-09-12 12:26:04.960919] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001B27F1FEBB0>]
[2023-09-13 11:02:21.958204] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000165633FEC10>]
[2023-09-13 11:02:21.959204] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000165633FEBB0>]
[2023-09-13 11:02:22.404656] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:02:22.874143] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-13 11:02:23.340951] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-13 11:02:23.342990] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000165633FEC10>]
[2023-09-13 11:02:23.343915] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000165633FEBB0>]
[2023-09-13 11:03:02.681279] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000241A073EC10>]
[2023-09-13 11:03:02.682280] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000241A073EBB0>]
[2023-09-13 11:03:03.118014] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:03:03.595388] [Daniel Ciccotosto-Camp] [SUCCESS] [-- CREATE TABLE article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     Score DECIMAL(5,2), -- 5 total digits with 2 decimal places
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

DROP TABLE article]
[2023-09-13 11:03:03.595388] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000241A073EC10>]
[2023-09-13 11:03:03.595388] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000241A073EBB0>]
[2023-09-13 11:03:12.754325] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001797E58EC10>]
[2023-09-13 11:03:12.754325] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001797E58EBB0>]
[2023-09-13 11:03:13.192441] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:03:13.413342] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-13 11:03:13.633628] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-13 11:03:13.861010] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM article;
    : 
 error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-13 11:03:14.081789] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-13 11:05:56.057576] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020BEB8FDD90>]
[2023-09-13 11:05:56.057576] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020BEB8FDD30>]
[2023-09-13 11:05:56.500134] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:05:56.723165] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-13 11:05:56.947795] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-13 11:05:57.164900] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM article;
    : 
 error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-13 11:05:57.384067] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-13 11:06:41.150370] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002896F19DDF0>]
[2023-09-13 11:06:41.150370] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002896F19DD90>]
[2023-09-13 11:06:41.581658] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:06:41.795033] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-13 11:06:42.027944] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO article (URL, Score, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-13 11:06:42.245438] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM article;
    : 
 error (1146, "Table 'newscuration.article' doesn't exist")]
[2023-09-13 11:06:42.470773] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM article;
    ]
[2023-09-13 11:06:42.470773] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-13 11:06:42.470773] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002896F19DDF0>]
[2023-09-13 11:06:42.470773] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002896F19DD90>]
[2023-09-13 11:40:52.085867] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002881736DDF0>]
[2023-09-13 11:40:52.086872] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002881736DD90>]
[2023-09-13 11:40:52.522211] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:40:52.523211] [Daniel Ciccotosto-Camp] [FAIL] [Unable to find file path: article.sql]
[2023-09-13 11:40:52.524211] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002881736DDF0>]
[2023-09-13 11:40:52.524211] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002881736DD90>]
[2023-09-13 11:45:03.249710] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020F1B55DDF0>]
[2023-09-13 11:45:03.249710] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020F1B55DD90>]
[2023-09-13 11:45:03.743869] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:45:03.975474] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_NameCodes (
    NameCode VARCHAR(255) NOT NULL UNIQUE
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_NameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-13 11:45:04.199332] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_NameCodes (
    NameCode VARCHAR(255) NOT NULL UNIQUE
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_NameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-13 11:45:04.208719] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020F1B55DDF0>]
[2023-09-13 11:45:04.209716] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020F1B55DD90>]
[2023-09-13 11:45:39.658276] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020B619CDDF0>]
[2023-09-13 11:45:39.659275] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020B619CDD90>]
[2023-09-13 11:45:40.094977] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:45:40.315206] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    NameCode VARCHAR(255) NOT NULL UNIQUE
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-13 11:45:40.538343] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    NameCode VARCHAR(255) NOT NULL UNIQUE
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-13 11:45:40.544343] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020B619CDDF0>]
[2023-09-13 11:45:40.545342] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020B619CDD90>]
[2023-09-13 11:46:08.023981] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001DEDFC9DDF0>]
[2023-09-13 11:46:08.023981] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001DEDFC9DD90>]
[2023-09-13 11:46:08.460426] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 11:46:08.679843] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    NameCode VARCHAR(255) NOT NULL UNIQUE
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-13 11:46:08.906524] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    NameCode VARCHAR(255) NOT NULL UNIQUE
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-13 11:46:08.914522] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001DEDFC9DDF0>]
[2023-09-13 11:46:08.915524] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001DEDFC9DD90>]
[2023-09-13 12:38:12.455319] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000213EBF8DDF0>]
[2023-09-13 12:38:12.455319] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000213EBF8DD90>]
[2023-09-13 12:38:13.040420] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-13 12:38:13.255153] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-13 12:38:13.485762] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-13 12:38:13.502158] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000213EBF8DDF0>]
[2023-09-13 12:38:13.510716] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000213EBF8DD90>]
[2023-09-15 09:30:04.095773] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000214D0729F40>]
[2023-09-15 09:30:04.095773] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000214D0729EE0>]
[2023-09-15 09:30:04.954036] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:30:05.379107] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-15 09:30:05.809313] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:30:06.238274] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Article;
    : 
 error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-15 09:30:06.661047] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 09:30:06.661047] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:30:07.083904] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO  (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(NameCode, InProduction, InsertedAt, InsertedBy)\n    VALUES (\n    'Prime Ministe' at line 1")]
[2023-09-15 09:30:07.499897] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO  (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:30:07.935883] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:30:08.352682] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:30:08.352682] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:30:08.775753] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO  (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)\n    VAL' at line 1")]
[2023-09-15 09:30:09.204524] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO  (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:30:09.619711] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:30:10.039240] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:30:10.039240] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:30:10.054875] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement None: 
 error object of type 'NoneType' has no len()]
[2023-09-15 09:30:10.475868] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: None]
[2023-09-15 09:30:10.881590] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:30:11.319680] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:30:11.319680] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:30:11.319680] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement None: 
 error object of type 'NoneType' has no len()]
[2023-09-15 09:30:11.741796] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: None]
[2023-09-15 09:30:12.154874] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:30:12.578073] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:30:12.578073] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:30:12.578073] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000214D0729F40>]
[2023-09-15 09:30:12.578073] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000214D0729EE0>]
[2023-09-15 09:31:30.058924] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002A3AC959F40>]
[2023-09-15 09:31:30.058924] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002A3AC959EE0>]
[2023-09-15 09:31:30.889770] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:31:31.317506] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-15 09:31:31.738233] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-15 09:31:31.752999] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002A3AC959F40>]
[2023-09-15 09:31:31.755005] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002A3AC959EE0>]
[2023-09-15 09:32:19.268496] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020EE5157F40>]
[2023-09-15 09:32:19.269488] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020EE5157EE0>]
[2023-09-15 09:32:20.095304] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:32:20.510504] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Article (\n    ID INT AUTO_INCREMENT PRIMARY KEY,\n    URL VARCHAR(25' at line 16")]
[2023-09-15 09:32:20.936655] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-15 09:32:20.947914] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020EE5157F40>]
[2023-09-15 09:32:20.947914] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020EE5157EE0>]
[2023-09-15 09:33:34.075155] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000023B01998F40>]
[2023-09-15 09:33:34.075155] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000023B01998EE0>]
[2023-09-15 09:33:34.905388] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:33:35.315564] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-15 09:33:35.724384] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-15 09:33:35.724384] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000023B01998F40>]
[2023-09-15 09:33:35.724384] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000023B01998EE0>]
[2023-09-15 09:33:47.656330] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000174EDB69F40>]
[2023-09-15 09:33:47.656330] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000174EDB69EE0>]
[2023-09-15 09:33:48.496347] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:33:48.908275] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Articl' doesn't exist")]
[2023-09-15 09:33:49.321139] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Articl
    WHERE 1=1
    ]
[2023-09-15 09:33:49.336809] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000174EDB69F40>]
[2023-09-15 09:33:49.336809] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000174EDB69EE0>]
[2023-09-15 09:35:00.864370] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000019AB69B7D90>]
[2023-09-15 09:35:00.864370] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000019AB69B7EB0>]
[2023-09-15 09:35:01.691540] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:35:02.127187] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-15 09:35:02.537107] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-15 09:35:02.959810] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-15 09:35:03.389959] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-15 09:35:03.799532] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_positionNameCodes' doesn't exist")]
[2023-09-15 09:35:04.222224] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Politician_positionNameCodes
    WHERE 1=1
    ]
[2023-09-15 09:35:04.222224] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000019AB69B7D90>]
[2023-09-15 09:35:04.222224] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000019AB69B7EB0>]
[2023-09-15 09:35:40.897640] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002063A728D90>]
[2023-09-15 09:35:40.897640] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002063A728FD0>]
[2023-09-15 09:35:41.728692] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:35:42.652433] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- /* A unique store of the politician's positions,
-- such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
-- etc.
-- */
-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-15 09:35:42.672357] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002063A728D90>]
[2023-09-15 09:35:42.673354] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002063A728FD0>]
[2023-09-15 09:35:55.019073] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000156AD7B8D90>]
[2023-09-15 09:35:55.034695] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000156AD7B8EB0>]
[2023-09-15 09:35:55.868408] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:35:56.283722] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-15 09:35:56.704985] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-15 09:35:57.115667] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-15 09:35:57.533083] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-15 09:35:57.953089] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_positionNameCodes' doesn't exist")]
[2023-09-15 09:35:58.378231] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Politician_positionNameCodes
    WHERE 1=1
    ]
[2023-09-15 09:35:58.380373] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000156AD7B8D90>]
[2023-09-15 09:35:58.380955] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000156AD7B8EB0>]
[2023-09-15 09:36:37.704424] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000018585717D90>]
[2023-09-15 09:36:37.704424] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000018585717FD0>]
[2023-09-15 09:36:38.531788] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:36:39.401186] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- /* A unique store of the politician's positions,
-- such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
-- etc.
-- */
-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-15 09:36:39.413773] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000018585717D90>]
[2023-09-15 09:36:39.414343] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000018585717FD0>]
[2023-09-15 09:36:52.003453] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000014DBFD27D90>]
[2023-09-15 09:36:52.003453] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000014DBFD27EB0>]
[2023-09-15 09:36:52.852299] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:36:53.695558] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-15 09:36:54.114782] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-15 09:36:54.546193] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-15 09:36:54.956339] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_positionNameCodes' doesn't exist")]
[2023-09-15 09:36:55.377805] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT * 
    FROM Politician_positionNameCodes
    WHERE 1=1
    ]
[2023-09-15 09:36:55.393446] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000014DBFD27D90>]
[2023-09-15 09:36:55.393446] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000014DBFD27EB0>]
[2023-09-15 09:40:50.579122] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021B168F8D90>]
[2023-09-15 09:40:50.579122] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021B168F8FD0>]
[2023-09-15 09:40:51.404144] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:40:52.261737] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- /* A unique store of the politician's positions,
-- such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
-- etc.
-- */
-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-15 09:40:52.283768] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021B168F8D90>]
[2023-09-15 09:40:52.283768] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021B168F8FD0>]
[2023-09-15 09:41:09.237799] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000246D14487F0>]
[2023-09-15 09:41:09.237799] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000246D1448FD0>]
[2023-09-15 09:41:10.062521] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:41:10.939610] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-15 09:41:10.944701] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000246D14487F0>]
[2023-09-15 09:41:10.944701] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000246D1448FD0>]
[2023-09-15 09:41:29.823886] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000210D7B78D90>]
[2023-09-15 09:41:29.824999] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000210D7B78FD0>]
[2023-09-15 09:41:30.641487] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:41:31.503154] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- /* A unique store of the politician's positions,
-- such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
-- etc.
-- */
-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-15 09:41:31.514084] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000210D7B78D90>]
[2023-09-15 09:41:31.515084] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000210D7B78FD0>]
[2023-09-15 09:41:59.750637] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FDC24C8B80>]
[2023-09-15 09:41:59.750637] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FDC24C8FD0>]
[2023-09-15 09:42:00.583710] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:42:01.438730] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:42:02.283123] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 09:42:02.714001] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO  (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(NameCode, InProduction, InsertedAt, InsertedBy)\n    VALUES (\n    'Prime Ministe' at line 1")]
[2023-09-15 09:42:03.132400] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO  (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:42:03.558621] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:42:03.986214] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:42:03.986214] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:42:04.410468] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO  (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)\n    VAL' at line 1")]
[2023-09-15 09:42:04.840918] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO  (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:42:05.259523] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:42:05.684012] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:42:05.684012] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:42:05.684012] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement None: 
 error object of type 'NoneType' has no len()]
[2023-09-15 09:42:06.109692] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: None]
[2023-09-15 09:42:06.535279] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:42:06.955251] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:42:06.955251] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:42:06.955251] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement None: 
 error object of type 'NoneType' has no len()]
[2023-09-15 09:42:07.377040] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: None]
[2023-09-15 09:42:07.792909] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM ;
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1")]
[2023-09-15 09:42:08.231328] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM ;
    ]
[2023-09-15 09:42:08.233720] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:42:08.233720] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001FDC24C8B80>]
[2023-09-15 09:42:08.233720] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001FDC24C8FD0>]
[2023-09-15 09:56:44.483043] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002C43B228B20>]
[2023-09-15 09:56:44.483043] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002C43B228FD0>]
[2023-09-15 09:56:45.335820] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:56:46.179537] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:56:47.015764] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 09:56:47.862253] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:56:48.299852] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-15 09:56:48.720217] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-15 09:56:48.720217] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:56:49.563860] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:58:45.062951] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025E34EE3F40>]
[2023-09-15 09:58:45.062951] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000025E34EE3C40>]
[2023-09-15 09:58:45.921985] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 09:58:46.787589] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:58:47.649259] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 09:58:48.093890] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-15 09:58:48.528548] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:58:48.954708] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-15 09:58:49.391894] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-15 09:58:49.391894] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 09:58:50.267833] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:58:51.127376] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-15 09:58:51.990756] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:58:52.864026] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-15 09:58:53.728529] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    2,
    3,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 09:58:54.585309] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-15 09:58:54.585309] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000025E34EE3F40>]
[2023-09-15 09:58:54.585309] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000025E34EE3C40>]
[2023-09-15 10:11:40.344690] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002C66DD508B0>]
[2023-09-15 10:11:40.345682] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002C66DD50850>]
[2023-09-15 10:11:41.176106] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 10:11:42.010979] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:11:42.838427] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 10:11:43.265323] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-15 10:11:43.680007] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:11:44.102043] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-15 10:11:44.520515] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-15 10:11:44.520515] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 10:11:45.359008] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:11:46.192659] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-15 10:11:47.021086] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:11:47.869675] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-15 10:11:48.706935] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    3,
    4,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:11:49.530921] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-15 10:11:49.530921] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002C66DD508B0>]
[2023-09-15 10:11:49.530921] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002C66DD50850>]
[2023-09-15 10:12:17.576727] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001517C00F8E0>]
[2023-09-15 10:12:17.577730] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001517C00F880>]
[2023-09-15 10:12:18.407037] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 10:12:19.278206] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:20.133894] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 10:12:20.544823] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-15 10:12:20.972293] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:21.402658] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-15 10:12:21.819408] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-15 10:12:21.836806] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 10:12:22.668057] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:23.521060] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-15 10:12:24.364238] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:25.209277] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-15 10:12:26.059036] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    4,
    5,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:26.903747] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-15 10:12:26.903747] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001517C00F8E0>]
[2023-09-15 10:12:26.903747] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001517C00F880>]
[2023-09-15 10:12:41.226844] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C7F61F0850>]
[2023-09-15 10:12:41.242921] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C7F61F07C0>]
[2023-09-15 10:12:42.077479] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 10:12:42.904077] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:43.748698] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-15 10:12:44.173213] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-15 10:12:44.594081] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:45.013688] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-15 10:12:45.432842] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-15 10:12:45.432842] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-15 10:12:46.279512] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:47.111238] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-15 10:12:47.945287] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:48.791997] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-15 10:12:49.626028] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    5,
    6,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-15 10:12:50.471675] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-15 10:12:50.479959] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C7F61F0850>]
[2023-09-15 10:12:50.479959] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C7F61F07C0>]
[2023-09-15 10:20:48.310739] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020CE1F1F850>]
[2023-09-15 10:20:48.311732] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020CE1F1F610>]
[2023-09-15 10:20:49.146154] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-15 10:20:49.983001] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_PositionNameCodes
    WHERE 1=1
    ]
[2023-09-15 10:20:50.820913] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-15 10:20:51.659909] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-15 10:20:52.500132] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_Position
    WHERE 1=1
    ]
[2023-09-15 10:20:53.339695] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE 1=1
    ]
[2023-09-15 10:20:53.342618] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020CE1F1F850>]
[2023-09-15 10:20:53.343629] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020CE1F1F610>]
[2023-09-22 14:56:14.678403] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002407B33FD00>]
[2023-09-22 14:56:14.683423] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002407B33FC40>]
[2023-09-22 14:56:15.289555] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 14:58:58.410961] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001CB3B36E4A0>]
[2023-09-22 14:58:58.413992] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001CB3B36E560>]
[2023-09-22 14:58:59.042283] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 14:59:08.317686] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001CB3B36E4A0>]
[2023-09-22 14:59:08.320686] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001CB3B36E560>]
[2023-09-22 15:08:19.522569] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001AC9742A6E0>]
[2023-09-22 15:08:19.527566] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001AC9742BB20>]
[2023-09-22 15:08:20.139350] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 15:08:20.149340] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001AC9742A6E0>]
[2023-09-22 15:08:20.160352] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001AC9742BB20>]
[2023-09-22 15:32:10.056504] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000029C0219FD60>]
[2023-09-22 15:32:10.060519] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000029C0219D240>]
[2023-09-22 15:32:10.670211] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 15:32:10.982893] [Ron-Ash] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '://theconversation.com/justin-trudeaus-india-accusation-complicates-western-effo' at line 3")]
[2023-09-22 15:32:11.299306] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922
    ]
[2023-09-22 15:32:17.829130] [Ron-Ash] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '://theconversation.com/justin-trudeaus-india-accusation-complicates-western-effo' at line 3")]
[2023-09-22 15:32:18.239322] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922
    ]
[2023-09-22 15:32:18.740995] [Ron-Ash] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954' at line 3")]
[2023-09-22 15:32:19.180233] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954
    ]
[2023-09-22 15:32:29.446955] [Ron-Ash] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '://www.9news.com.au/national/victoria-news-officers-injured-in-police-chase-arme' at line 3")]
[2023-09-22 15:32:29.871068] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = https://www.9news.com.au/national/victoria-news-officers-injured-in-police-chase-armed-man-on-the-run-in-katandra-west-in-northern-victoria/6ee1eb85-b5a6-45ef-a991-a3292490ba98
    ]
[2023-09-22 15:32:34.762730] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000029C0219FD60>]
[2023-09-22 15:32:34.765735] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000029C0219D240>]
[2023-09-22 15:34:40.836412] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000263CE39FC70>]
[2023-09-22 15:34:40.839413] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000263CE39F430>]
[2023-09-22 15:34:41.482863] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 15:35:10.847319] [Ron-Ash] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '://theconversation.com/justin-trudeaus-india-accusation-complicates-western-effo' at line 3")]
[2023-09-22 15:35:11.206669] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922
    ]
[2023-09-22 15:35:31.483105] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000263CE39FC70>]
[2023-09-22 15:35:31.488115] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000263CE39F430>]
[2023-09-22 15:35:46.230669] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001CD55A6A740>]
[2023-09-22 15:35:46.233669] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001CD55A6BB80>]
[2023-09-22 15:35:46.849083] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 15:35:47.467312] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-22 15:36:06.662607] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001CD55A6A740>]
[2023-09-22 15:36:06.666606] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001CD55A6BB80>]
[2023-09-22 15:36:41.891078] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000231B11FA9B0>]
[2023-09-22 15:36:41.895087] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000231B11FBDF0>]
[2023-09-22 15:36:42.583258] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-22 15:36:43.211083] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-22 15:37:10.349782] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000231B11FA9B0>]
[2023-09-22 15:37:10.355781] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000231B11FBDF0>]
[2023-09-24 13:20:13.199254] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000018575063D90>]
[2023-09-24 13:20:13.204254] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000018575063A60>]
[2023-09-24 13:20:13.849218] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-24 13:20:14.511438] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-24 13:20:23.973059] [Ron-Ash] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000018575063D90>]
[2023-09-24 13:20:23.977522] [Ron-Ash] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000018575063A60>]
[2023-09-24 13:20:26.216354] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001857513EF20>]
[2023-09-24 13:20:26.221355] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000018575178130>]
[2023-09-24 13:20:26.847300] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-24 13:20:53.069863] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-24 13:20:54.081697] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-24 13:20:55.018256] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-24 13:22:15.129145] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-09-24 13:22:16.479732] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-09-24 13:22:17.311699] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]

[2023-09-24 14:34:27.481172] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002472914A950>]
[2023-09-24 14:34:27.484007] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000024729149180>]
[2023-09-24 14:34:28.140833] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]

[2023-09-23 17:01:31.471010] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C9D0D327C0>]
[2023-09-23 17:01:31.473010] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C9D0D32400>]
[2023-09-23 18:21:09.221620] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000270B5FE2850>]
[2023-09-23 18:21:09.223541] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000270B5FE27C0>]
[2023-09-23 18:21:10.086636] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:21:10.972635] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-23 18:21:10.975629] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000270B5FE2850>]
[2023-09-23 18:21:10.976628] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000270B5FE27C0>]
[2023-09-23 18:21:18.850930] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002305EB81850>]
[2023-09-23 18:21:18.852002] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002305EB817C0>]
[2023-09-23 18:21:19.705079] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:21:20.546912] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-23 18:21:20.551721] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002305EB81850>]
[2023-09-23 18:21:20.552867] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002305EB817C0>]
[2023-09-23 18:26:35.411256] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002BB971BBFA0>]
[2023-09-23 18:26:35.411815] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002BB971BB970>]
[2023-09-23 18:26:36.254791] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:33:59.466571] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FDE931EBB0>]
[2023-09-23 18:33:59.468036] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FDE931ECA0>]
[2023-09-23 18:34:00.333991] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:38:41.504920] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002A03FC62BB0>]
[2023-09-23 18:38:41.506913] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002A03FC62B50>]
[2023-09-23 18:38:42.380831] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:40:30.980162] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000288D3D12C10>]
[2023-09-23 18:40:30.982189] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000288D3D129D0>]
[2023-09-23 18:40:31.861108] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:41:54.997474] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FC3043DE20>]
[2023-09-23 18:41:54.998480] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FC3043DAF0>]
[2023-09-23 18:41:55.834333] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:45:04.559857] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001A110C20A60>]
[2023-09-23 18:45:04.561784] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001A110C20730>]
[2023-09-23 18:45:05.397844] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:48:20.782922] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020DA5BA1A90>]
[2023-09-23 18:48:20.785030] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020DA5BA1A30>]
[2023-09-23 18:48:21.640860] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:48:59.580118] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020C3BD9BFA0>]
[2023-09-23 18:48:59.582120] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020C3BD9BC40>]
[2023-09-23 18:49:00.428713] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:50:54.849361] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025C39F90F70>]
[2023-09-23 18:50:54.851350] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000025C39F90280>]
[2023-09-23 18:50:55.715611] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:51:53.859344] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001619987EF70>]
[2023-09-23 18:51:53.861178] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001619987EC10>]
[2023-09-23 18:51:54.718238] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:52:03.039608] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' AND Lname LIKE '%Doe%')
    ]
[2023-09-23 18:53:53.693985] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001AA155D9F70>]
[2023-09-23 18:53:53.696006] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001AA155D9B50>]
[2023-09-23 18:53:54.548350] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:54:05.289311] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' AND Lname LIKE '%Doe%')
    ]
[2023-09-23 18:54:54.965798] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000274BB756E80>]
[2023-09-23 18:54:54.967790] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000274BB756AF0>]
[2023-09-23 18:54:55.804249] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 18:55:02.127708] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' AND Lname LIKE '%Doe%')
    ]
[2023-09-23 19:31:39.258841] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002687B7CBC70>]
[2023-09-23 19:31:39.259842] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002687B7CBF40>]
[2023-09-23 19:31:40.126229] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:32:06.160087] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000016E69C23AF0>]
[2023-09-23 19:32:06.161222] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000016E69C235B0>]
[2023-09-23 19:32:07.017835] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:32:10.283030] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = 1
    ]
[2023-09-23 19:32:30.259562] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000028552BE36A0>]
[2023-09-23 19:32:30.261653] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000028552BE3DF0>]
[2023-09-23 19:32:31.085742] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:32:36.945538] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = 1
    ]
[2023-09-23 19:41:44.550552] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000013A30C22850>]
[2023-09-23 19:41:44.550552] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000013A30C225E0>]
[2023-09-23 19:41:45.404984] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:41:45.405982] [Daniel Ciccotosto-Camp] [FAIL] [Unable to find file path: PRO-68_Politician_updates.sql]
[2023-09-23 19:41:45.406985] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000013A30C22850>]
[2023-09-23 19:41:45.406985] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000013A30C225E0>]
[2023-09-23 19:41:58.229893] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000017B5B421850>]
[2023-09-23 19:41:58.231916] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000017B5B4215E0>]
[2023-09-23 19:41:59.089814] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:41:59.091816] [Daniel Ciccotosto-Camp] [FAIL] [Unable to find file path: sql/PRO-68_Politician_updates.sql]
[2023-09-23 19:41:59.091816] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000017B5B421850>]
[2023-09-23 19:41:59.092843] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000017B5B4215E0>]
[2023-09-23 19:42:08.218284] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002CA0B481850>]
[2023-09-23 19:42:08.220296] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002CA0B4810A0>]
[2023-09-23 19:42:09.075334] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:42:09.076353] [Daniel Ciccotosto-Camp] [FAIL] [Unable to find file path: inf/sql/PRO-68_Politician_updates.sql]
[2023-09-23 19:42:09.077482] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002CA0B481850>]
[2023-09-23 19:42:09.078432] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002CA0B4810A0>]
[2023-09-23 19:42:41.733746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002114F172850>]
[2023-09-23 19:42:41.735574] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002114F1725E0>]
[2023-09-23 19:42:42.610232] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:42:42.611224] [Daniel Ciccotosto-Camp] [FAIL] [Unable to find file path: inf/sql/PRO-68_Politician_updates]
[2023-09-23 19:42:42.611224] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002114F172850>]
[2023-09-23 19:42:42.612222] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002114F1725E0>]
[2023-09-23 19:43:38.185404] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FE826B2850>]
[2023-09-23 19:43:38.186396] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FE826B25E0>]
[2023-09-23 19:43:39.015366] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:43:39.016365] [Daniel Ciccotosto-Camp] [FAIL] [Unable to find file path: PRO-68_Politician_updates]
[2023-09-23 19:43:39.017365] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001FE826B2850>]
[2023-09-23 19:43:39.018364] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001FE826B25E0>]
[2023-09-23 19:43:51.888817] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002BBA3731850>]
[2023-09-23 19:43:51.890814] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002BBA37310A0>]
[2023-09-23 19:43:52.727947] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 19:43:53.657969] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD ImageLink VARCHAR(1024),
ADD Summary TEXT;

-- this has been inserted as part of PRO-68, using the --AddSQLFromFile mode]
[2023-09-23 19:43:53.659969] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002BBA3731850>]
[2023-09-23 19:43:53.660971] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002BBA37310A0>]
[2023-09-23 20:09:36.880784] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000248B0BDEBE0>]
[2023-09-23 20:09:36.881775] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000248B0BDE730>]
[2023-09-23 20:09:37.784182] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-23 20:09:38.651960] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-23 20:09:39.526125] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-23 20:09:39.955445] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-23 20:09:40.390079] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-23 20:09:40.809994] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-23 20:09:41.928059] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-23 20:09:41.930069] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-23 20:09:42.364822] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-23 20:09:42.786426] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-23 20:09:43.657297] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-23 20:09:44.528420] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-23 20:09:45.417941] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-23 20:09:46.339957] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    9,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-23 20:09:47.200879] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-23 20:09:47.205807] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000248B0BDEBE0>]
[2023-09-23 20:09:47.206810] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000248B0BDE730>]
[2023-09-25 19:33:00.100746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025E5604CFD0>]
[2023-09-25 19:33:00.101739] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000025E5604C790>]
[2023-09-25 19:33:00.954997] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 19:33:01.912558] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Article_ArticleBias (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    KeyPhrase VARCHAR(1000),
    BiasReason TEXT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);


-- this has been inserted as part of PRO-93]
[2023-09-25 19:33:01.914559] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000025E5604CFD0>]
[2023-09-25 19:33:01.914559] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000025E5604C790>]
[2023-09-25 20:31:38.531334] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000022779BD8D60>]
[2023-09-25 20:31:38.532274] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000022779BD8A30>]
[2023-09-25 20:31:39.375942] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:31:40.225637] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:31:41.070105] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:31:41.490321] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:31:41.913765] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:31:42.347549] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:31:42.772088] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:31:42.774085] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:31:43.197560] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:31:43.618355] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:31:44.471219] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:31:45.326617] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:31:46.181758] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:31:47.019889] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    10,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:31:47.868945] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:31:48.289314] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReaon, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'BiasReaon' in 'field list'")]
[2023-09-25 20:31:48.711440] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReaon, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:31:49.565111] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:31:49.986479] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReaon, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'BiasReaon' in 'field list'")]
[2023-09-25 20:31:50.422390] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReaon, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:31:51.256227] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:31:51.676880] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReaon, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'BiasReaon' in 'field list'")]
[2023-09-25 20:31:52.096190] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReaon, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:31:52.937381] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:31:52.942633] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000022779BD8D60>]
[2023-09-25 20:31:52.942633] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000022779BD8A30>]
[2023-09-25 20:33:01.042133] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027995227B80>]
[2023-09-25 20:33:01.043135] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027995227A30>]
[2023-09-25 20:33:01.895705] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:33:02.733248] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:33:03.578189] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:33:03.997828] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:33:04.422710] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:33:04.842357] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:33:05.260279] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:33:05.261708] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:33:05.689330] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:33:06.130317] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:33:06.984820] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:33:07.839696] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:33:08.689310] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:33:09.530818] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    11,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:33:10.381672] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:33:11.228383] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '11',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:33:12.092136] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:33:12.944661] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '11',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:33:13.784927] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:33:14.627067] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '11',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:33:15.465612] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:33:15.468797] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000027995227B80>]
[2023-09-25 20:33:15.469798] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000027995227A30>]
[2023-09-25 20:34:20.554158] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002BDBBBD8BB0>]
[2023-09-25 20:34:20.556148] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002BDBBBD8A60>]
[2023-09-25 20:34:21.412650] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:34:22.272533] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:34:23.135048] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:34:23.566228] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:34:24.482390] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:34:24.916468] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:34:25.344790] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:34:25.346787] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:34:25.778480] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:34:26.217151] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:34:27.084934] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:34:27.950981] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:34:28.813909] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:34:29.679581] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    12,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:34:30.535373] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:34:31.396617] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '12',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:34:32.265647] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:34:33.144403] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '12',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:34:34.004533] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:34:34.874750] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '12',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:34:35.739579] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:34:35.742571] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002BDBBBD8BB0>]
[2023-09-25 20:34:35.743572] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002BDBBBD8A60>]
[2023-09-25 20:38:45.684780] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000015614D97CD0>]
[2023-09-25 20:38:45.685778] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000015614D97B80>]
[2023-09-25 20:38:46.541203] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:38:47.383402] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:38:48.232847] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:38:48.665329] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:38:49.084918] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:38:49.509636] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:38:49.943514] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:38:49.944583] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:38:50.364508] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:38:50.785656] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:38:51.622082] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:38:52.474399] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:38:53.316150] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:38:54.180377] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    13,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:38:55.022627] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:38:55.867533] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '13',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:38:56.703683] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:38:57.553670] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '13',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:38:58.387595] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:38:59.247208] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '13',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:39:00.087322] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:39:01.361791] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = 13
    ]
[2023-09-25 20:39:01.365788] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000015614D97CD0>]
[2023-09-25 20:39:01.365788] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000015614D97B80>]
[2023-09-25 20:41:02.938397] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000029749B37D30>]
[2023-09-25 20:41:02.940408] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000029749B37DC0>]
[2023-09-25 20:41:03.763266] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:41:04.592462] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:41:05.415278] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:41:05.824067] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:41:06.234522] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:41:06.652354] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:41:07.067050] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:41:07.068071] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:41:07.476682] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:41:07.886830] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:41:08.697602] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:41:09.525882] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:41:10.351323] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:41:11.172238] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    14,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:41:11.998400] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:41:12.817321] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '14',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:41:13.631925] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:41:14.445579] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '14',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:41:15.260918] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:41:16.084910] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '14',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:41:16.901531] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:41:17.718688] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = 14
    ]
[2023-09-25 20:41:18.127686] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1054, "Unknown column 'examplewebsite.com' in 'where clause'")]
[2023-09-25 20:41:18.532835] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = examplewebsite.com
    ]
[2023-09-25 20:41:18.538006] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000029749B37D30>]
[2023-09-25 20:41:18.538913] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000029749B37DC0>]
[2023-09-25 20:42:08.400443] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000028210A46D30>]
[2023-09-25 20:42:08.402431] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000028210A46EE0>]
[2023-09-25 20:42:09.246509] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:42:10.080553] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:42:10.908378] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:42:11.323443] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:42:11.739464] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:42:12.155158] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:42:12.570259] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:42:12.572106] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:42:12.985417] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:42:13.403457] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:42:14.234997] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:42:15.067488] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:42:15.925495] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:42:16.757951] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    15,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:42:17.592667] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:42:18.428111] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '15',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:42:19.258524] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:42:20.101304] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '15',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:42:20.944224] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:42:21.782046] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '15',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:42:22.623102] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:42:23.471795] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = 15
    ]
[2023-09-25 20:42:24.320058] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = 'examplewebsite.com'
    ]
[2023-09-25 20:42:24.322059] [Daniel Ciccotosto-Camp] [WARN] [There is more than one Article URL in the database. The first tuple in query is selected.]
[2023-09-25 20:42:25.171031] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = 1
    ]
[2023-09-25 20:42:25.173033] [Daniel Ciccotosto-Camp] [WARN] [There are not Bias subtext records for the related ArticleID (1)]
[2023-09-25 20:42:25.177035] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000028210A46D30>]
[2023-09-25 20:42:25.177035] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000028210A46EE0>]
[2023-09-25 20:46:36.015991] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025FA24E7D30>]
[2023-09-25 20:46:36.016991] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000025FA24E7DC0>]
[2023-09-25 20:46:36.928849] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-25 20:46:37.843271] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-25 20:46:38.759243] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-25 20:46:39.216004] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-25 20:46:39.677344] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:46:40.139278] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-25 20:46:40.595953] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-25 20:46:40.597966] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-25 20:46:41.758795] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-25 20:46:42.219333] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-25 20:46:43.134882] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-25 20:46:44.051580] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:46:44.964871] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-25 20:46:45.880977] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    6,
    16,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:46:46.793622] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-25 20:46:47.715118] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '16',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:46:48.632738] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:46:49.554043] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '16',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:46:50.473927] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:46:51.394710] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Terror Attack',
    'The term "terror" is frightening and is used to emote panic',
    '16',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-25 20:46:52.311121] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-25 20:46:53.228333] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = 16
    ]
[2023-09-25 20:46:54.145610] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = 'examplewebsite.com' ORDER BY ID DESC
    ]
[2023-09-25 20:46:54.147614] [Daniel Ciccotosto-Camp] [WARN] [There is more than one Article URL in the database. The first tuple in query is selected.]
[2023-09-25 20:46:55.060145] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = 16
    ]
[2023-09-25 20:46:55.064663] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000025FA24E7D30>]
[2023-09-25 20:46:55.064663] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000025FA24E7DC0>]
[2023-09-27 20:08:11.498694] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000026C967D1890>]
[2023-09-27 20:08:11.499679] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000026C96B11150>]
[2023-09-27 20:08:12.377976] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:26:15.046134] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000157B2B90D10>]
[2023-09-27 21:26:15.047134] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000157B0F7FC10>]
[2023-09-27 21:26:15.896203] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:29:05.879698] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-27 21:29:06.301877] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' AND Lname LIKE '%Doe%')
    ]
[2023-09-27 21:31:03.193419] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001EAF94FEF50>]
[2023-09-27 21:31:03.195422] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001EAF945E190>]
[2023-09-27 21:31:04.104853] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:31:04.552167] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-27 21:31:04.998467] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-27 21:31:05.001474] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001EAF94FEF50>]
[2023-09-27 21:31:05.002476] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001EAF945E190>]
[2023-09-27 21:32:31.023068] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000233C0ED2590>]
[2023-09-27 21:32:31.024102] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000233C2C20F90>]
[2023-09-27 21:32:31.879316] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:32:32.300910] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    : 
 error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-27 21:32:32.725997] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-27 21:32:33.150007] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Article;
    : 
 error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-27 21:32:33.570144] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-27 21:32:33.572131] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:32:34.003196] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-09-27 21:32:34.440366] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:32:34.859910] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-27 21:32:35.295770] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-27 21:32:35.297763] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:32:35.719298] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-27 21:32:36.144884] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-27 21:32:36.565902] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician;
    : 
 error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-27 21:32:36.995347] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-27 21:32:36.997560] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:32:37.419543] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-09-27 21:32:37.853069] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:32:38.275374] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-09-27 21:32:38.694723] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-27 21:32:38.696735] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:32:39.149259] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    None,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_KeyTable' doesn't exist")]
[2023-09-27 21:32:39.577742] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    None,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:32:40.013267] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    : 
 error (1146, "Table 'newscuration.Politician_KeyTable' doesn't exist")]
[2023-09-27 21:32:40.435749] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-27 21:32:40.437260] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:32:40.864274] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    'None',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Article_ArticleBias' doesn't exist")]
[2023-09-27 21:32:41.286330] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    'None',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:32:41.706890] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    : 
 error (1146, "Table 'newscuration.Article_ArticleBias' doesn't exist")]
[2023-09-27 21:32:42.137677] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-27 21:32:42.139607] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:32:42.141498] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000233C0ED2590>]
[2023-09-27 21:32:42.141498] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000233C2C20F90>]
[2023-09-27 21:39:32.052703] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001DA6886C610>]
[2023-09-27 21:39:32.054704] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001DA68829390>]
[2023-09-27 21:39:32.898487] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:39:33.319312] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-27 21:39:33.747412] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-27 21:39:34.180622] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 ALTER TABLE Politician
ADD ImageLink VARCHAR(1024),
ADD Summary TEXT;

-- this has been inserted as part of PRO-68, using the --AddSQLFromFile mode with error (1146, "Table 'newscuration.Politician' doesn't exist")]
[2023-09-27 21:39:34.602343] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD ImageLink VARCHAR(1024),
ADD Summary TEXT;

-- this has been inserted as part of PRO-68, using the --AddSQLFromFile mode]
[2023-09-27 21:39:35.025782] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 ALTER TABLE Article
ADD Header VARCHAR(1024),
ADD OriginalText TEXT,
ADD SummaryParagraph TEXT;

-- this has been inserted as part of PRO-89 with error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-27 21:39:35.449539] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Article
ADD Header VARCHAR(1024),
ADD OriginalText TEXT,
ADD SummaryParagraph TEXT;

-- this has been inserted as part of PRO-89]
[2023-09-27 21:39:35.878895] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 CREATE TABLE Article_ArticleBias (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    KeyPhrase VARCHAR(1000),
    BiasReason TEXT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);


-- this has been inserted as part of PRO-93 with error (1824, "Failed to open the referenced table 'Article'")]
[2023-09-27 21:39:36.765308] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Article_ArticleBias (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    KeyPhrase VARCHAR(1000),
    BiasReason TEXT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);


-- this has been inserted as part of PRO-93]
[2023-09-27 21:39:36.768317] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001DA6886C610>]
[2023-09-27 21:39:36.769309] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001DA68829390>]
[2023-09-27 21:40:21.136945] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001653AD8A8D0>]
[2023-09-27 21:40:21.137944] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001653CE72D90>]
[2023-09-27 21:40:21.978779] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:40:22.410984] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-27 21:40:22.843520] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-27 21:40:22.854433] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001653AD8A8D0>]
[2023-09-27 21:40:22.855431] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001653CE72D90>]
[2023-09-27 21:40:41.757246] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FF2D5BEF50>]
[2023-09-27 21:40:41.759257] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FF2D50E190>]
[2023-09-27 21:40:43.292204] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:40:43.714771] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE IF EXISTS Politician\nDROP TABLE IF EXISTS Politician_Position\nDROP TA' at line 2")]
[2023-09-27 21:40:44.757119] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE IF EXISTS Article
DROP TABLE IF EXISTS Politician
DROP TABLE IF EXISTS Politician_Position
DROP TABLE IF EXISTS Politician_PositionNameCodes
DROP TABLE IF EXISTS Politician_NameCodes
DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
)]
[2023-09-27 21:40:44.765079] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001FF2D5BEF50>]
[2023-09-27 21:40:44.766088] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001FF2D50E190>]
[2023-09-27 21:41:01.403294] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D18123A8D0>]
[2023-09-27 21:41:01.405277] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D183322E10>]
[2023-09-27 21:41:02.309088] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:41:02.764084] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Article (\n    ID INT AUTO_INCREMENT PRIMARY KEY,\n    URL VARCHAR(25' at line 16")]
[2023-09-27 21:41:04.114318] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
)]
[2023-09-27 21:41:04.121460] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D18123A8D0>]
[2023-09-27 21:41:04.121460] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D183322E10>]
[2023-09-27 21:42:10.456156] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000024E37A9A8D0>]
[2023-09-27 21:42:10.458284] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000024E39C72F10>]
[2023-09-27 21:42:11.315685] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:42:11.743838] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Politician (\n    ID INT AUTO_INCREMENT PRIMARY KEY,\n    Fname VARCH' at line 27")]
[2023-09-27 21:42:12.193995] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
)]
[2023-09-27 21:42:12.202257] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000024E37A9A8D0>]
[2023-09-27 21:42:12.202257] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000024E39C72F10>]
[2023-09-27 21:42:36.136735] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021AEBD1EF50>]
[2023-09-27 21:42:36.138662] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021AEBC7E190>]
[2023-09-27 21:42:38.152169] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:42:40.170062] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- )

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:42:40.179565] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021AEBD1EF50>]
[2023-09-27 21:42:40.179565] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021AEBC7E190>]
[2023-09-27 21:42:53.104058] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002ADE633A8D0>]
[2023-09-27 21:42:53.106050] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002ADE87C2D90>]
[2023-09-27 21:42:53.948847] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:42:54.379322] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- ) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--e.g. 'Prime minister of Australia' etc,\n    InProduction BOOLEAN,\n    Inserted' at line 46")]
[2023-09-27 21:42:54.802538] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), --e.g. 'Prime minister of Australia' etc,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:42:54.809529] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002ADE633A8D0>]
[2023-09-27 21:42:54.809529] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002ADE87C2D90>]
[2023-09-27 21:43:18.841323] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C49A64EF50>]
[2023-09-27 21:43:18.843339] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C49A5AE190>]
[2023-09-27 21:43:19.667970] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:43:20.079265] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
--e.g. 'Prime minister of Australia' etc,
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- ) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '--e.g. 'Prime minister of Australia' etc,\nCREATE TABLE Politician_Position (\n   ' at line 44")]
[2023-09-27 21:43:20.499417] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/
--e.g. 'Prime minister of Australia' etc,
CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:43:20.508556] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C49A64EF50>]
[2023-09-27 21:43:20.509557] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C49A5AE190>]
[2023-09-27 21:43:55.950465] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FF9844A8D0>]
[2023-09-27 21:43:55.951446] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FF9AAC2DD0>]
[2023-09-27 21:43:56.808380] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:43:57.225243] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- ) with error (1824, "Failed to open the referenced table 'Politician_PositionNameCodes'")]
[2023-09-27 21:43:57.646485] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:43:57.651497] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001FF9844A8D0>]
[2023-09-27 21:43:57.652504] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001FF9AAC2DD0>]
[2023-09-27 21:44:19.742161] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002248A82EF50>]
[2023-09-27 21:44:19.743223] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002248A78E190>]
[2023-09-27 21:44:20.629744] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:44:21.968476] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- ) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Politician_Position (\n    ID INT AUTO_INCREMENT PRIMARY KEY,\n    Po' at line 45")]
[2023-09-27 21:44:23.317951] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:44:23.325930] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002248A82EF50>]
[2023-09-27 21:44:23.325930] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002248A78E190>]
[2023-09-27 21:44:39.249969] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F2B841A8D0>]
[2023-09-27 21:44:39.251472] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F2BA502D90>]
[2023-09-27 21:44:40.742971] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:44:41.143246] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- ) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Politician_Position (\n    ID INT AUTO_INCREMENT PRIMARY KEY,\n    Po' at line 45")]
[2023-09-27 21:44:41.556672] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:44:41.566673] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F2B841A8D0>]
[2023-09-27 21:44:41.567672] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F2BA502D90>]
[2023-09-27 21:45:24.720177] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000249A441A8D0>]
[2023-09-27 21:45:24.721167] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000249A6712D90>]
[2023-09-27 21:45:26.672974] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:45:28.623928] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- )

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:45:28.630964] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000249A441A8D0>]
[2023-09-27 21:45:28.630964] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000249A6712D90>]
[2023-09-27 21:45:46.259588] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000026A97A9EF50>]
[2023-09-27 21:45:46.261279] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000026A979FE190>]
[2023-09-27 21:45:47.139308] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:45:48.881264] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:45:48.889296] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000026A97A9EF50>]
[2023-09-27 21:45:48.890290] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000026A979FE190>]
[2023-09-27 21:45:56.867576] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000242A6CDA8D0>]
[2023-09-27 21:45:56.869605] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000242A8FE2D90>]
[2023-09-27 21:45:57.704014] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:45:58.124939] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- ) with error (1050, "Table 'Politician_Position' already exists")]
[2023-09-27 21:45:58.537625] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
)

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:45:58.546612] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000242A6CDA8D0>]
[2023-09-27 21:45:58.546612] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000242A8FE2D90>]
[2023-09-27 21:46:14.581214] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001DA1A2EEF50>]
[2023-09-27 21:46:14.583215] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001DA1A24E190>]
[2023-09-27 21:46:15.470004] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:46:15.932109] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- )

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
) with error (1824, "Failed to open the referenced table 'Article'")]
[2023-09-27 21:46:16.396128] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- )

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
)]
[2023-09-27 21:46:16.403153] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001DA1A2EEF50>]
[2023-09-27 21:46:16.403153] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001DA1A24E190>]
[2023-09-27 21:46:42.673490] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001859DC2A8D0>]
[2023-09-27 21:46:42.674510] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001859FFA2D90>]
[2023-09-27 21:46:43.562273] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:46:44.461405] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255), -- Adjust the length as needed for your URLs
    UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
    LowerBias DECIMAL(5, 2), -- lower bias score
    Summary TEXT, -- TEXT type allows up to 65,535 characters
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
)

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- )

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- )]
[2023-09-27 21:46:44.469403] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001859DC2A8D0>]
[2023-09-27 21:46:44.470403] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001859FFA2D90>]
[2023-09-27 21:47:05.539670] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002BBD82FA8D0>]
[2023-09-27 21:47:05.541683] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002BBDA3E2D90>]
[2023-09-27 21:47:06.383415] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:47:07.268307] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable

-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255), -- Adjust the length as needed for your URLs
--     UpperBias DECIMAL(5, 2), -- 5 total digits with 2 decimal places
--     LowerBias DECIMAL(5, 2), -- lower bias score
--     Summary TEXT, -- TEXT type allows up to 65,535 characters
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- )

/* A unique store of the politician's positions, --e.g. 'Prime minister of Australia' etc,
such as 'Prime Minister of Australia' or 'Member of Parliament; Senate'
etc.
*/

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- )

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
)]
[2023-09-27 21:47:07.277798] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002BBD82FA8D0>]
[2023-09-27 21:47:07.278798] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002BBDA3E2D90>]
[2023-09-27 21:47:38.758510] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002285E832590>]
[2023-09-27 21:47:38.759503] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002285E2245D0>]
[2023-09-27 21:47:39.628495] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:47:40.543630] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD ImageLink VARCHAR(1024),
ADD Summary TEXT;

-- this has been inserted as part of PRO-68, using the --AddSQLFromFile mode]
[2023-09-27 21:47:40.545560] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002285E832590>]
[2023-09-27 21:47:40.546574] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002285E2245D0>]
[2023-09-27 21:47:58.386379] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000022A8C602590>]
[2023-09-27 21:47:58.388379] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000022A8BFF45D0>]
[2023-09-27 21:47:59.263859] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:48:00.174522] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Article
ADD Header VARCHAR(1024),
ADD OriginalText TEXT,
ADD SummaryParagraph TEXT;

-- this has been inserted as part of PRO-89]
[2023-09-27 21:48:00.176516] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000022A8C602590>]
[2023-09-27 21:48:00.177520] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000022A8BFF45D0>]
[2023-09-27 21:48:10.501259] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001398A4FA8D0>]
[2023-09-27 21:48:10.503269] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001398C6A2D90>]
[2023-09-27 21:48:11.393178] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:48:12.293934] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Article_ArticleBias (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    KeyPhrase VARCHAR(1000),
    BiasReason TEXT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);


-- this has been inserted as part of PRO-93]
[2023-09-27 21:48:12.295921] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001398A4FA8D0>]
[2023-09-27 21:48:12.296924] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001398C6A2D90>]
[2023-09-27 21:48:22.720424] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002D6D12E2590>]
[2023-09-27 21:48:22.722500] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002D6D3030F90>]
[2023-09-27 21:48:23.571889] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-27 21:48:24.432198] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-27 21:48:25.281825] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-27 21:48:26.133634] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:48:26.564930] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM None;
    : 
 error (1146, "Table 'newscuration.None' doesn't exist")]
[2023-09-27 21:48:26.998296] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM None;
    ]
[2023-09-27 21:48:26.999223] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-27 21:48:27.416167] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-27 21:48:27.851164] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-27 21:48:28.696932] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-27 21:48:29.540384] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:48:30.384291] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-27 21:48:30.820094] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    1,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'None' in 'field list'")]
[2023-09-27 21:48:31.237795] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    1,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:48:32.087098] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-27 21:48:32.939671] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '1',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-27 21:48:33.793440] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-27 21:48:33.797434] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002D6D12E2590>]
[2023-09-27 21:48:33.798433] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002D6D3030F90>]
[2023-09-28 07:00:18.600661] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000293DA430210>]
[2023-09-28 07:00:18.601658] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000293D7CCD2D0>]
[2023-09-28 07:00:19.124228] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 07:00:19.692080] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-28 07:00:20.422490] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-28 07:00:20.951673] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-28 07:00:21.229964] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:00:22.265414] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-09-28 07:00:22.674143] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1136, "Column count doesn't match value count at row 1")]
[2023-09-28 07:00:22.991231] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-28 07:00:23.598851] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-28 07:00:24.254398] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:00:25.023827] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-28 07:00:25.287233] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    2,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'None' in 'field list'")]
[2023-09-28 07:00:25.853649] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    2,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:00:26.570028] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-28 07:00:27.187092] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '2',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:00:27.899070] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-28 07:00:27.905085] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000293DA430210>]
[2023-09-28 07:00:27.907087] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000293D7CCD2D0>]
[2023-09-28 07:06:43.192384] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021AB451D2D0>]
[2023-09-28 07:06:43.195384] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021AB6DCD3D0>]
[2023-09-28 07:06:43.784334] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 07:06:44.755578] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-28 07:06:45.445198] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-28 07:06:45.751967] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-28 07:06:46.031273] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:06:46.686708] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-09-28 07:06:47.611353] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-28 07:06:48.324189] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-28 07:06:49.031400] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:06:49.605426] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-28 07:06:50.531198] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    1,
    3,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:06:51.161806] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-28 07:06:51.739439] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '3',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 07:06:52.315814] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-28 07:06:52.322735] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021AB451D2D0>]
[2023-09-28 07:06:52.325465] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021AB6DCD3D0>]
[2023-09-28 07:07:05.532652] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (2006, "MySQL server has gone away (ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))")]
[2023-09-28 07:07:37.122338] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000017D6E521C90>]
[2023-09-28 07:07:37.125871] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000017D6C93B110>]
[2023-09-28 07:07:37.943351] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 07:07:43.933806] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' AND Lname LIKE '%Doe%')
    ]
[2023-09-28 17:15:12.169635] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000201752AC390>]
[2023-09-28 17:15:12.173556] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020174EE7C90>]
[2023-09-28 17:15:12.917601] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:16:15.400018] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021DFB9AE850>]
[2023-09-28 17:16:15.403017] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021DFB9AF310>]
[2023-09-28 17:16:16.072098] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:16:16.416206] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Article' doesn't exist")]
[2023-09-28 17:16:16.796175] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-09-28 17:16:16.800330] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021DFB9AE850>]
[2023-09-28 17:16:16.801752] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021DFB9AF310>]
[2023-09-28 17:55:44.701804] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C58CC1E850>]
[2023-09-28 17:55:44.702812] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C58CC1F310>]
[2023-09-28 17:55:45.586832] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:55:46.040535] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255),
    UpperBias DECIMAL(5, 2),
    LowerBias DECIMAL(5, 2),
    Summary TEXT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Article (\n    ID INT AUTO_INCREMENT PRIMARY KEY,\n    URL VARCHAR(25' at line 15")]
[2023-09-28 17:55:46.495317] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255),
    UpperBias DECIMAL(5, 2),
    LowerBias DECIMAL(5, 2),
    Summary TEXT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-28 17:55:46.502834] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C58CC1E850>]
[2023-09-28 17:55:46.502834] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C58CC1F310>]
[2023-09-28 17:56:34.204426] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000023F3934E850>]
[2023-09-28 17:56:34.206229] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000023F3934F310>]
[2023-09-28 17:56:35.043478] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:56:35.954420] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
CREATE TABLE Politician_PositionNameCodes (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NameCode VARCHAR(255) NOT NULL UNIQUE,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255),
--     UpperBias DECIMAL(5, 2),
--     LowerBias DECIMAL(5, 2),
--     Summary TEXT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-28 17:56:35.959689] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000023F3934E850>]
[2023-09-28 17:56:35.960690] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000023F3934F310>]
[2023-09-28 17:56:47.523841] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002B0899BA890>]
[2023-09-28 17:56:47.524832] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002B089965850>]
[2023-09-28 17:56:49.453579] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:56:50.350912] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

CREATE TABLE Article (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(255),
    UpperBias DECIMAL(5, 2),
    LowerBias DECIMAL(5, 2),
    Summary TEXT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-28 17:56:50.357894] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002B0899BA890>]
[2023-09-28 17:56:50.358394] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002B089965850>]
[2023-09-28 17:57:01.484035] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000226F3B9A890>]
[2023-09-28 17:57:01.485028] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000226F3B45850>]
[2023-09-28 17:57:02.372233] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:57:03.282342] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255),
--     UpperBias DECIMAL(5, 2),
--     LowerBias DECIMAL(5, 2),
--     Summary TEXT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

CREATE TABLE Politician (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    About VARCHAR(1500),
    Age INT,
    Gender VARCHAR(255),
    CountryCode VARCHAR(10),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-28 17:57:03.290344] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000226F3B9A890>]
[2023-09-28 17:57:03.291343] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000226F3B45850>]
[2023-09-28 17:57:12.562690] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002BC6DF5E850>]
[2023-09-28 17:57:12.563707] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002BC6DF5F310>]
[2023-09-28 17:57:13.436803] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:57:14.338696] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255),
--     UpperBias DECIMAL(5, 2),
--     LowerBias DECIMAL(5, 2),
--     Summary TEXT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

CREATE TABLE Politician_Position (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);

-- CREATE TABLE Politician_KeyTable (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Politician INT,
--     ID_Article INT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
--     FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );]
[2023-09-28 17:57:14.357335] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002BC6DF5E850>]
[2023-09-28 17:57:14.357335] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002BC6DF5F310>]
[2023-09-28 17:57:26.318603] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000273A3ABA890>]
[2023-09-28 17:57:26.319733] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000273A3A65850>]
[2023-09-28 17:57:28.120293] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 17:57:29.058176] [Daniel Ciccotosto-Camp] [SUCCESS] [-- DROP TABLE IF EXISTS Article
-- DROP TABLE IF EXISTS Politician
-- DROP TABLE IF EXISTS Politician_Position
-- DROP TABLE IF EXISTS Politician_PositionNameCodes
-- DROP TABLE IF EXISTS Politician_NameCodes
-- DROP TABLE IF EXISTS Politician_KeyTable
-- CREATE TABLE Politician_PositionNameCodes (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     NameCode VARCHAR(255) NOT NULL UNIQUE,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Article (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     URL VARCHAR(255),
--     UpperBias DECIMAL(5, 2),
--     LowerBias DECIMAL(5, 2),
--     Summary TEXT,
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     About VARCHAR(1500),
--     Age INT,
--     Gender VARCHAR(255),
--     CountryCode VARCHAR(10),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50)
-- );

-- CREATE TABLE Politician_Position (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     PositionNameCode VARCHAR(255), 
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
--     FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
-- );

CREATE TABLE Politician_KeyTable (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Politician INT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Politician) REFERENCES Politician(ID),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-09-28 17:57:29.065486] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000273A3ABA890>]
[2023-09-28 17:57:29.066554] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000273A3A65850>]
[2023-09-28 18:02:00.443746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001BC26CC4E50>]
[2023-09-28 18:02:00.445736] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001BC29435D50>]
[2023-09-28 18:02:01.285054] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:02:01.711307] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    : 
 error (1054, "Unknown column 'Header' in 'field list'")]
[2023-09-28 18:02:02.133170] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-28 18:02:02.978777] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-28 18:02:03.824420] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:02:04.664946] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-09-28 18:02:05.088563] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    : 
 error (1054, "Unknown column 'ImageLink' in 'field list'")]
[2023-09-28 18:02:05.511950] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-28 18:02:06.352617] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-28 18:02:07.203079] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:02:08.043567] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-28 18:02:08.468802] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    None,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'None' in 'field list'")]
[2023-09-28 18:02:08.890909] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    None,
    None,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:02:09.731127] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-28 18:02:10.151508] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    'None',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Article_ArticleBias' doesn't exist")]
[2023-09-28 18:02:10.578516] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    'None',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:02:11.001436] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    : 
 error (1146, "Table 'newscuration.Article_ArticleBias' doesn't exist")]
[2023-09-28 18:02:11.424559] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-28 18:02:11.426560] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-09-28 18:02:11.428562] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001BC26CC4E50>]
[2023-09-28 18:02:11.429560] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001BC29435D50>]
[2023-09-28 18:02:47.113630] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025713AD4E50>]
[2023-09-28 18:02:47.114628] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000257160BE290>]
[2023-09-28 18:02:47.970866] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:02:48.885496] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD ImageLink VARCHAR(1024),
ADD Summary TEXT;

-- this has been inserted as part of PRO-68, using the --AddSQLFromFile mode]
[2023-09-28 18:02:48.886555] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000025713AD4E50>]
[2023-09-28 18:02:48.887090] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000257160BE290>]
[2023-09-28 18:03:08.009424] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001DF6EFBD2D0>]
[2023-09-28 18:03:08.010417] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001DF714DE290>]
[2023-09-28 18:03:08.837100] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:03:09.710940] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Article
ADD Header VARCHAR(1024),
ADD OriginalText TEXT,
ADD SummaryParagraph TEXT;

-- this has been inserted as part of PRO-89]
[2023-09-28 18:03:09.712396] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001DF6EFBD2D0>]
[2023-09-28 18:03:09.713395] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001DF714DE290>]
[2023-09-28 18:03:19.530047] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001850036E850>]
[2023-09-28 18:03:19.531041] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001850036F310>]
[2023-09-28 18:03:20.386693] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:03:21.276139] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Article_ArticleBias (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    KeyPhrase VARCHAR(1000),
    BiasReason TEXT,
    ID_Article INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);


-- this has been inserted as part of PRO-93]
[2023-09-28 18:03:21.278222] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001850036E850>]
[2023-09-28 18:03:21.279233] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001850036F310>]
[2023-09-28 18:03:33.654048] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027733954E50>]
[2023-09-28 18:03:33.657049] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027733FDB250>]
[2023-09-28 18:03:35.574331] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:03:36.431592] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-28 18:03:37.294916] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-28 18:03:37.722321] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-28 18:03:38.160524] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:03:39.009960] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-09-28 18:03:39.862002] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-28 18:03:40.708034] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-28 18:03:41.566935] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:03:42.426717] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-28 18:03:43.286219] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    1,
    1,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:03:44.141283] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-28 18:03:45.003063] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '1',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:03:45.849366] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-28 18:03:45.852645] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000027733954E50>]
[2023-09-28 18:03:45.853180] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000027733FDB250>]
[2023-09-28 18:54:52.659311] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027EFC049090>]
[2023-09-28 18:54:52.660217] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027EFC1C1350>]
[2023-09-28 18:54:53.516039] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:55:11.570234] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 18:55:11.999681] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 18:55:12.427609] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politcian = 1 
    ]
[2023-09-28 18:55:41.417613] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027ACB12EBD0>]
[2023-09-28 18:55:41.418608] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027ACC1448D0>]
[2023-09-28 18:55:42.310011] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:55:47.250880] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 18:55:47.698751] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 18:55:48.137504] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politcian = 1 
    ]
[2023-09-28 18:56:22.329867] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000017777E198D0>]
[2023-09-28 18:56:22.330861] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000017778079350>]
[2023-09-28 18:56:23.165122] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:56:35.206385] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000207EC9E1350>]
[2023-09-28 18:56:35.207384] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000207EC8BEB90>]
[2023-09-28 18:56:36.037289] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:56:41.869693] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 18:56:42.289371] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 18:56:42.705122] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politcian = 1 
    ]
[2023-09-28 18:57:21.597537] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021F754E96D0>]
[2023-09-28 18:57:21.598549] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021F75433710>]
[2023-09-28 18:57:22.436993] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 18:57:23.287972] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    'a summary of some text.',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-09-28 18:57:24.123684] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-09-28 18:57:24.540699] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-09-28 18:57:24.959961] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:57:25.807328] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-09-28 18:57:26.644550] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-09-28 18:57:27.481796] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-09-28 18:57:28.337477] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:57:29.176458] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-09-28 18:57:30.039195] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    2,
    2,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:57:30.884744] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-09-28 18:57:31.720593] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '2',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-09-28 18:57:32.567183] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-09-28 18:57:32.570515] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021F754E96D0>]
[2023-09-28 18:57:32.571057] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021F75433710>]
[2023-09-28 18:58:51.245093] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 18:58:51.666259] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 18:58:52.081776] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politcian = 1 
    ]
[2023-09-28 19:00:55.531497] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000277A89345D0>]
[2023-09-28 19:00:55.532492] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000277A7C8B6D0>]
[2023-09-28 19:00:56.371534] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:01:01.987558] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 19:01:02.409858] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 19:01:02.830280] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-09-28 19:01:54.613394] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001BA3A214E50>]
[2023-09-28 19:01:54.615424] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001BA3C76E290>]
[2023-09-28 19:01:55.458661] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:01:56.312765] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE 1=1
    ]
[2023-09-28 19:01:56.317601] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001BA3A214E50>]
[2023-09-28 19:01:56.317601] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001BA3C76E290>]
[2023-09-28 19:04:20.085119] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001BD92CF6F10>]
[2023-09-28 19:04:20.086261] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001BD92B8E5D0>]
[2023-09-28 19:04:20.918123] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:04:29.616736] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 19:04:30.049117] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 19:04:30.467244] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-09-28 19:05:29.727088] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D462248650>]
[2023-09-28 19:05:29.728088] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D461064450>]
[2023-09-28 19:05:30.589539] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:05:36.665050] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 19:05:37.106086] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 19:05:37.540232] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-09-28 19:06:30.694081] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002205DCAE850>]
[2023-09-28 19:06:30.696082] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002205DCAF310>]
[2023-09-28 19:06:31.569695] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:06:32.443513] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-28 19:06:32.445433] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002205DCAE850>]
[2023-09-28 19:06:32.446526] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002205DCAF310>]
[2023-09-28 19:07:30.078799] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000028F7AB3A890>]
[2023-09-28 19:07:30.079791] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000028F7CE22F50>]
[2023-09-28 19:07:30.931020] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:07:31.358972] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 SELECT A.*
FROM Article A
INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
WHERE ID_Politician = 1 with error (1146, "Table 'newscuration.Politician_Keytable' doesn't exist")]
[2023-09-28 19:07:31.784533] [Daniel Ciccotosto-Camp] [SUCCESS] [SELECT A.*
FROM Article A
INNER JOIN Politician_Keytable PK ON PK.ID_Article = A.ID
WHERE ID_Politician = 1]
[2023-09-28 19:07:31.787510] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000028F7AB3A890>]
[2023-09-28 19:07:31.788499] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000028F7CE22F50>]
[2023-09-28 19:08:03.607400] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020EA111A890>]
[2023-09-28 19:08:03.608395] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020EA10C5850>]
[2023-09-28 19:08:04.428023] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:08:05.248469] [Daniel Ciccotosto-Camp] [SUCCESS] [SELECT A.*
FROM Article A
INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
WHERE ID_Politician = 1]
[2023-09-28 19:08:05.250621] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020EA111A890>]
[2023-09-28 19:08:05.251619] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020EA10C5850>]
[2023-09-28 19:08:28.952288] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001A9A3255290>]
[2023-09-28 19:08:28.952700] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001A9A11E5AD0>]
[2023-09-28 19:08:30.485593] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-09-28 19:08:44.463517] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-09-28 19:08:45.326208] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-09-30 13:27:49.537161] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E7D090C6D0>]
[2023-09-30 13:27:49.540159] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E7D090D2D0>]
[2023-09-30 13:27:50.183774] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-30 13:28:34.181749] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-09-30 13:28:35.561996] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-30 13:28:36.349694] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-09-30 13:28:37.292440] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-09-30 13:32:11.304165] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:12.572226] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:13.615111] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:22.379220] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:23.454595] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:24.497203] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:27.738090] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:28.760521] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:29.781912] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:40.400028] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:41.435943] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:32:42.449188] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:33:07.777792] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:33:08.805178] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:33:09.830741] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:33:42.295670] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021D6D85E170>]
[2023-09-30 13:33:42.298656] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021D6D85DBA0>]
[2023-09-30 13:33:42.927669] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-09-30 13:33:55.541078] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:33:56.745821] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:33:57.747093] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-09-30 13:34:25.738056] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-09-30 13:34:26.975584] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-30 13:34:27.903600] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-09-30 13:34:28.765795] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-09-30 13:35:11.361841] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-09-30 13:35:13.343131] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-09-30 13:35:14.304992] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-09-30 13:35:15.104150] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:25:06.172873] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F58496CDF0>]
[2023-10-01 07:25:06.177874] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F58496C1F0>]
[2023-10-01 07:25:06.812321] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:25:28.784472] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:25:30.347562] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:25:31.439127] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:25:32.356392] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:26:27.599693] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002DF0A40EF80>]
[2023-10-01 07:26:27.602720] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002DF0A40DF30>]
[2023-10-01 07:26:28.239186] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:26:37.824976] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:26:39.469196] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:26:40.275317] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:26:41.205366] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:33:57.295385] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000240BA60AB60>]
[2023-10-01 07:33:57.298385] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000240BA6097B0>]
[2023-10-01 07:33:57.933331] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:34:09.467522] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:34:57.644479] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000016D368A37F0>]
[2023-10-01 07:34:57.647466] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000016D368A1810>]
[2023-10-01 07:34:58.286358] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:35:05.045276] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:35:06.442341] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:35:07.309437] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:35:08.158927] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:35:09.090982] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 07:36:09.816665] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:36:10.844839] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:36:11.636938] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:36:12.487938] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:36:13.312603] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:48:30.879594] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001DC3740CE50>]
[2023-10-01 07:48:30.882595] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001DC3740D750>]
[2023-10-01 07:48:31.524776] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:48:38.960356] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:48:40.289696] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:48:41.192464] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:48:42.061249] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:48:42.883648] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:51:00.073988] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000187E4E5A050>]
[2023-10-01 07:51:00.076988] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000187E4E59450>]
[2023-10-01 07:51:00.714214] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:51:03.557983] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:51:04.543924] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:51:05.441553] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:51:06.266857] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:51:08.319565] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:51:09.236386] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:52:22.576087] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FF47A0C2E0>]
[2023-10-01 07:52:22.579089] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FF47A0D300>]
[2023-10-01 07:52:23.209997] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 07:52:40.588437] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:52:41.939973] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:52:42.836099] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 07:52:43.705770] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 07:52:44.548844] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 08:09:19.183033] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001CD39019990>]
[2023-10-01 08:09:19.186034] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001CD3901B010>]
[2023-10-01 08:09:19.817197] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:09:30.126207] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:09:31.599662] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:09:32.551068] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:09:33.369330] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:09:34.233566] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:11:22.429581] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000024E8A02F0D0>]
[2023-10-01 08:11:22.432593] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000024E8A02DA80>]
[2023-10-01 08:11:23.074518] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:11:27.435894] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:11:28.825295] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:11:29.615634] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:11:30.419264] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:11:31.241530] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:11:34.364207] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:11:34.709585] [Ron-Ash] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://en.wikipedia.org/wiki/John_Doe',
    0.6153846153846154,
    0.8846153846153846,
    '.',
    1, 
    NOW(),
    'Ron-Ash',
    'John Doe',
    ' John Doe (masculine) and Jane Doe (feminine) are multiple-use placeholder names that are used in the United States and the United Kingdom when the true name of a person is unknown or is being intentionally concealed.[1][2][3] In the context of law enforcement in the United States, such names are often used to refer to a corpse whose identity is unknown or cannot be confirmed. These names are also often used to refer to a hypothetical "everyman" in other contexts, in a manner similar to John Q. Public or "Joe Public". There are many variants to the above names, including John (or Richard)/Jane Roe, John/Jane Smith, John/Jane Bloggs, and Johnie/Janie Doe or just Baby Doe for children. In other English-speaking countries, unique placeholder names, numbers or codenames have become more often used in the context of police investigations. This has included the United Kingdom, where usage of "John Doe" originated during the Middle Ages. However, the legal term John Doe injunction or John Doe order[4] has survived in English law and other legal systems influenced by it. Other names, such as "Joe Bloggs" or "John Smith", have sometimes been informally used as placeholders for an everyman in the UK, Australia, and New Zealand; however such names are seldom used in legal or police circles in the same sense as John Doe. Well-known legal cases named after placeholders include: Use of "John Doe" in the sense of an everyman, includes: Use of "John Doe" in the sense of an unidentified man (anonymous), includes: Use of "Jane Doe" in the sense of an unidentified corpse, includes: Use of "John Doe" in the sense of a placeholder, includes: Use of "Jane Doe" in the Hail The Sun album "Wake", includes: Use of "Jane Doe" in the musical theater performance "Ride The Cyclone", includes: Under the legal terminology of Ancient Rome, the names "Numerius Negidius" and "Aulus Agerius" were used in relation to hypothetical defendants and plaintiffs.[8] The names "John Doe" (or "John Do") and "Richard Roe" (along with "John Roe") were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction, beginning perhaps as early as the reign of England's King Edward III (1327�1377).[9] Though the rationale behind the choices of Doe and Roe is unknown, there are many suggested folk etymologies.[10] Other fictitious names for a person involved in litigation in medieval English law were "John Noakes" (or "Nokes") and "John-a-Stiles" (or "John Stiles").[11] The Oxford English Dictionary states that John Doe is "the name given to the fictitious lessee of the plaintiff, in the (now obsolete in the UK) mixed action of ejectment, the fictitious defendant being called Richard Roe".[10] This usage is mocked in the 1834 English song "John Doe and Richard Roe": Two giants live in Britain's land, John Doe and Richard Roe, Who always travel hand in hand, John Doe and Richard Roe. Their fee-faw-fum's an ancient plan To smell the purse of an Englishman, And, 'ecod, they'll suck it all they can, John Doe and Richard Roe ...[12] This particular use became obsolete in the UK in 1852: As is well known, the device of involving real people as notional lessees and ejectors was used to enable freeholders to sue the real ejectors. These were then replaced by the fictional characters John Doe and Richard Roe. Eventually the medieval remedies were (mostly) abolished by the Real Property Limitation Act of 1833; the fictional characters of John Doe and Richard Roe by the Common Law Procedure Act 1852; and the forms of action themselves by the Judicature Acts 1873�75." Secretary of State for Environment, Food, and Rural Affairs v Meier and others (2009).[13] In the UK, usage of "John Doe" survives mainly in the form of John Doe injunction or John Doe order (see above). 8.02 If an unknown person has possession of the confidential personal information and is threatening to disclose it, a 'John Doe' injunction may be sought against that person. The first time this form of injunction was used since 1852 in the United Kingdom was in 2005 when lawyers acting for JK Rowling and her publishers obtained an interim order against an unidentified person who had offered to sell chapters of a stolen copy of an unpublished Harry Potter novel to the media.[14] Unlike the United States, the name "John Doe" does not actually appear in the formal name of the case, for example: X & Y v Persons Unknown [2007] HRLR 4.[15] Well-known cases of unidentified decedents include "Caledonia Jane Doe" (1979) and "Princess Doe" (1982), both of whom have been identified. The baby victim in a 2001 murder case in Kansas City, Missouri, was referred to as Precious Doe.[16] In 2009, the New York Times reported the difficulties and unwanted attention experienced by a man actually named John Doe, who had often been suspected of using a pseudonym. He had been questioned repeatedly by airport security staff. Another man named John Doe was often suspected of being an incognito celebrity.[17] In cases where a large number of unidentified individuals are mentioned, numbers may be appended, such as "Doe #2" or "Doe II". Operation Delego (2009), which targeted an international child sexual abuse ring, cited 21 numbered "John Does", as well as other people known by the surnames "Doe", "Roe", and "Poe". "John Stiles", "Richard Miles" have been used for the third and fourth participants in an action. "Mary Major" has been used in some federal cases in the US.[18] "James Doe" and "Judy Doe" are among other common variants. Less often, other surnames ending in -oe have been used when more than two unknown or unidentified persons are named in U.S. court proceedings, e.g., Poe v. Snyder, 834 F.Supp.2d 721 (W. D. Mich. 2011),[19] whose full style is In Massachusetts, "Mary Moe" is used to refer to pregnant women under the age of 18 petitioning the Superior Court for a judicial bypass exception to the parental consent requirement for abortion.[22] "Mary Moe" is also used to refer to such cases generally, i.e. "Mary Moe cases". Sometimes "Mary Doe" may be used for the individuals. Parallels in other countries include: In 1997, New York City police discovered a decapitated body and were not able to find the killer. The body was named Peaches (murder victim) and also Jane Doe 3. The use and selection of pseudonyms is not standardized in U.S. courts. The practice was rare prior to 1969, and is sometimes objected to on legal grounds. Currently there are no court rules about pseudonym use. The rules of civil procedure�... are silent on the matter�... Rule of Civil Procedure 10(a) reads, '...�In the complaint, the title of the action shall include the names of all the parties�...' The rule contains no guidance as to what parties should do to keep their names confidential.[28] Prior to�... 1969, only one Supreme Court case, three court of appeals' decisions, and one district court decision in the previous quarter-century featured an anonymous individual as the sole or lead plaintiff. Between 1969 and 22 January 1973, the date when the Supreme Court decided Roe and Doe, there were twenty-one district court and two court of appeals decisions featuring anonymous plaintiffs.[29]',
    '- John Doe and Jane Doe are commonly used placeholder names in the United States and the United Kingdom when the true name of a person is unknown or concealed.
- These names are often used in law enforcement to refer to unidentified bodies or as a hypothetical "everyman."
- Variants of these names include John/Jane Roe, John/Jane Smith, and Johnie/Janie Doe.
- In other English-speaking countries, different placeholder names or codenames are used in police investigations.
- The names John Doe and Richard Roe were regularly used in English legal instruments to satisfy technical requirements governing standing and jurisdiction.
- Other fictitious names used in medieval English law were John Noakes, John-a-Stiles, and Richard Miles.
- The usage of John Doe became obsolete in the UK in 1852.
- In the UK, the term John Doe survives mainly in the form of John Doe injunction or John Doe order.
- John Doe injunctions may be sought against unknown persons when confidential personal information is threatened to be disclosed.
- Well-known cases of unidentified decedents include "Caledonia Jane Doe" and "Princess Doe."
- In some cases, numbers may be appended to the name Doe to differentiate between multiple unidentified individuals.
- Pseudonyms are not standardized in U.S. courts, and there are no court rules specifically addressing their use.
- The practice of using pseudonyms was rare prior to 1969, and there are legal objections to their use.
- There have been cases where anonymous individuals have been the sole or lead plaintiffs in court decisions.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 's King Edward III (1327�1377).[9] Though the rationale behind the choices of D' at line 11")]
[2023-10-01 08:11:35.031498] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://en.wikipedia.org/wiki/John_Doe',
    0.6153846153846154,
    0.8846153846153846,
    '.',
    1, 
    NOW(),
    'Ron-Ash',
    'John Doe',
    ' John Doe (masculine) and Jane Doe (feminine) are multiple-use placeholder names that are used in the United States and the United Kingdom when the true name of a person is unknown or is being intentionally concealed.[1][2][3] In the context of law enforcement in the United States, such names are often used to refer to a corpse whose identity is unknown or cannot be confirmed. These names are also often used to refer to a hypothetical "everyman" in other contexts, in a manner similar to John Q. Public or "Joe Public". There are many variants to the above names, including John (or Richard)/Jane Roe, John/Jane Smith, John/Jane Bloggs, and Johnie/Janie Doe or just Baby Doe for children. In other English-speaking countries, unique placeholder names, numbers or codenames have become more often used in the context of police investigations. This has included the United Kingdom, where usage of "John Doe" originated during the Middle Ages. However, the legal term John Doe injunction or John Doe order[4] has survived in English law and other legal systems influenced by it. Other names, such as "Joe Bloggs" or "John Smith", have sometimes been informally used as placeholders for an everyman in the UK, Australia, and New Zealand; however such names are seldom used in legal or police circles in the same sense as John Doe. Well-known legal cases named after placeholders include: Use of "John Doe" in the sense of an everyman, includes: Use of "John Doe" in the sense of an unidentified man (anonymous), includes: Use of "Jane Doe" in the sense of an unidentified corpse, includes: Use of "John Doe" in the sense of a placeholder, includes: Use of "Jane Doe" in the Hail The Sun album "Wake", includes: Use of "Jane Doe" in the musical theater performance "Ride The Cyclone", includes: Under the legal terminology of Ancient Rome, the names "Numerius Negidius" and "Aulus Agerius" were used in relation to hypothetical defendants and plaintiffs.[8] The names "John Doe" (or "John Do") and "Richard Roe" (along with "John Roe") were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction, beginning perhaps as early as the reign of England's King Edward III (1327�1377).[9] Though the rationale behind the choices of Doe and Roe is unknown, there are many suggested folk etymologies.[10] Other fictitious names for a person involved in litigation in medieval English law were "John Noakes" (or "Nokes") and "John-a-Stiles" (or "John Stiles").[11] The Oxford English Dictionary states that John Doe is "the name given to the fictitious lessee of the plaintiff, in the (now obsolete in the UK) mixed action of ejectment, the fictitious defendant being called Richard Roe".[10] This usage is mocked in the 1834 English song "John Doe and Richard Roe": Two giants live in Britain's land, John Doe and Richard Roe, Who always travel hand in hand, John Doe and Richard Roe. Their fee-faw-fum's an ancient plan To smell the purse of an Englishman, And, 'ecod, they'll suck it all they can, John Doe and Richard Roe ...[12] This particular use became obsolete in the UK in 1852: As is well known, the device of involving real people as notional lessees and ejectors was used to enable freeholders to sue the real ejectors. These were then replaced by the fictional characters John Doe and Richard Roe. Eventually the medieval remedies were (mostly) abolished by the Real Property Limitation Act of 1833; the fictional characters of John Doe and Richard Roe by the Common Law Procedure Act 1852; and the forms of action themselves by the Judicature Acts 1873�75." Secretary of State for Environment, Food, and Rural Affairs v Meier and others (2009).[13] In the UK, usage of "John Doe" survives mainly in the form of John Doe injunction or John Doe order (see above). 8.02 If an unknown person has possession of the confidential personal information and is threatening to disclose it, a 'John Doe' injunction may be sought against that person. The first time this form of injunction was used since 1852 in the United Kingdom was in 2005 when lawyers acting for JK Rowling and her publishers obtained an interim order against an unidentified person who had offered to sell chapters of a stolen copy of an unpublished Harry Potter novel to the media.[14] Unlike the United States, the name "John Doe" does not actually appear in the formal name of the case, for example: X & Y v Persons Unknown [2007] HRLR 4.[15] Well-known cases of unidentified decedents include "Caledonia Jane Doe" (1979) and "Princess Doe" (1982), both of whom have been identified. The baby victim in a 2001 murder case in Kansas City, Missouri, was referred to as Precious Doe.[16] In 2009, the New York Times reported the difficulties and unwanted attention experienced by a man actually named John Doe, who had often been suspected of using a pseudonym. He had been questioned repeatedly by airport security staff. Another man named John Doe was often suspected of being an incognito celebrity.[17] In cases where a large number of unidentified individuals are mentioned, numbers may be appended, such as "Doe #2" or "Doe II". Operation Delego (2009), which targeted an international child sexual abuse ring, cited 21 numbered "John Does", as well as other people known by the surnames "Doe", "Roe", and "Poe". "John Stiles", "Richard Miles" have been used for the third and fourth participants in an action. "Mary Major" has been used in some federal cases in the US.[18] "James Doe" and "Judy Doe" are among other common variants. Less often, other surnames ending in -oe have been used when more than two unknown or unidentified persons are named in U.S. court proceedings, e.g., Poe v. Snyder, 834 F.Supp.2d 721 (W. D. Mich. 2011),[19] whose full style is In Massachusetts, "Mary Moe" is used to refer to pregnant women under the age of 18 petitioning the Superior Court for a judicial bypass exception to the parental consent requirement for abortion.[22] "Mary Moe" is also used to refer to such cases generally, i.e. "Mary Moe cases". Sometimes "Mary Doe" may be used for the individuals. Parallels in other countries include: In 1997, New York City police discovered a decapitated body and were not able to find the killer. The body was named Peaches (murder victim) and also Jane Doe 3. The use and selection of pseudonyms is not standardized in U.S. courts. The practice was rare prior to 1969, and is sometimes objected to on legal grounds. Currently there are no court rules about pseudonym use. The rules of civil procedure�... are silent on the matter�... Rule of Civil Procedure 10(a) reads, '...�In the complaint, the title of the action shall include the names of all the parties�...' The rule contains no guidance as to what parties should do to keep their names confidential.[28] Prior to�... 1969, only one Supreme Court case, three court of appeals' decisions, and one district court decision in the previous quarter-century featured an anonymous individual as the sole or lead plaintiff. Between 1969 and 22 January 1973, the date when the Supreme Court decided Roe and Doe, there were twenty-one district court and two court of appeals decisions featuring anonymous plaintiffs.[29]',
    '- John Doe and Jane Doe are commonly used placeholder names in the United States and the United Kingdom when the true name of a person is unknown or concealed.
- These names are often used in law enforcement to refer to unidentified bodies or as a hypothetical "everyman."
- Variants of these names include John/Jane Roe, John/Jane Smith, and Johnie/Janie Doe.
- In other English-speaking countries, different placeholder names or codenames are used in police investigations.
- The names John Doe and Richard Roe were regularly used in English legal instruments to satisfy technical requirements governing standing and jurisdiction.
- Other fictitious names used in medieval English law were John Noakes, John-a-Stiles, and Richard Miles.
- The usage of John Doe became obsolete in the UK in 1852.
- In the UK, the term John Doe survives mainly in the form of John Doe injunction or John Doe order.
- John Doe injunctions may be sought against unknown persons when confidential personal information is threatened to be disclosed.
- Well-known cases of unidentified decedents include "Caledonia Jane Doe" and "Princess Doe."
- In some cases, numbers may be appended to the name Doe to differentiate between multiple unidentified individuals.
- Pseudonyms are not standardized in U.S. courts, and there are no court rules specifically addressing their use.
- The practice of using pseudonyms was rare prior to 1969, and there are legal objections to their use.
- There have been cases where anonymous individuals have been the sole or lead plaintiffs in court decisions.'
    );
    ]
[2023-10-01 08:11:35.671603] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 08:11:36.311543] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:13:17.814280] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D9A6A89780>]
[2023-10-01 08:13:17.820275] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D9A6A8ABC0>]
[2023-10-01 08:13:18.455294] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:13:26.548046] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:13:27.934972] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:13:28.928585] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:13:29.748916] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:13:30.524177] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:13:36.000035] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:13:36.346518] [Ron-Ash] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://en.wikipedia.org/wiki/John_Doe',
    0.6153846153846154,
    0.8846153846153846,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'John Doe',
    ' John Doe (masculine) and Jane Doe (feminine) are multiple-use placeholder names that are used in the United States and the United Kingdom when the true name of a person is unknown or is being intentionally concealed.[1][2][3] In the context of law enforcement in the United States, such names are often used to refer to a corpse whose identity is unknown or cannot be confirmed. These names are also often used to refer to a hypothetical "everyman" in other contexts, in a manner similar to John Q. Public or "Joe Public". There are many variants to the above names, including John (or Richard)/Jane Roe, John/Jane Smith, John/Jane Bloggs, and Johnie/Janie Doe or just Baby Doe for children. In other English-speaking countries, unique placeholder names, numbers or codenames have become more often used in the context of police investigations. This has included the United Kingdom, where usage of "John Doe" originated during the Middle Ages. However, the legal term John Doe injunction or John Doe order[4] has survived in English law and other legal systems influenced by it. Other names, such as "Joe Bloggs" or "John Smith", have sometimes been informally used as placeholders for an everyman in the UK, Australia, and New Zealand; however such names are seldom used in legal or police circles in the same sense as John Doe. Well-known legal cases named after placeholders include: Use of "John Doe" in the sense of an everyman, includes: Use of "John Doe" in the sense of an unidentified man (anonymous), includes: Use of "Jane Doe" in the sense of an unidentified corpse, includes: Use of "John Doe" in the sense of a placeholder, includes: Use of "Jane Doe" in the Hail The Sun album "Wake", includes: Use of "Jane Doe" in the musical theater performance "Ride The Cyclone", includes: Under the legal terminology of Ancient Rome, the names "Numerius Negidius" and "Aulus Agerius" were used in relation to hypothetical defendants and plaintiffs.[8] The names "John Doe" (or "John Do") and "Richard Roe" (along with "John Roe") were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction, beginning perhaps as early as the reign of England's King Edward III (1327�1377).[9] Though the rationale behind the choices of Doe and Roe is unknown, there are many suggested folk etymologies.[10] Other fictitious names for a person involved in litigation in medieval English law were "John Noakes" (or "Nokes") and "John-a-Stiles" (or "John Stiles").[11] The Oxford English Dictionary states that John Doe is "the name given to the fictitious lessee of the plaintiff, in the (now obsolete in the UK) mixed action of ejectment, the fictitious defendant being called Richard Roe".[10] This usage is mocked in the 1834 English song "John Doe and Richard Roe": Two giants live in Britain's land, John Doe and Richard Roe, Who always travel hand in hand, John Doe and Richard Roe. Their fee-faw-fum's an ancient plan To smell the purse of an Englishman, And, 'ecod, they'll suck it all they can, John Doe and Richard Roe ...[12] This particular use became obsolete in the UK in 1852: As is well known, the device of involving real people as notional lessees and ejectors was used to enable freeholders to sue the real ejectors. These were then replaced by the fictional characters John Doe and Richard Roe. Eventually the medieval remedies were (mostly) abolished by the Real Property Limitation Act of 1833; the fictional characters of John Doe and Richard Roe by the Common Law Procedure Act 1852; and the forms of action themselves by the Judicature Acts 1873�75." Secretary of State for Environment, Food, and Rural Affairs v Meier and others (2009).[13] In the UK, usage of "John Doe" survives mainly in the form of John Doe injunction or John Doe order (see above). 8.02 If an unknown person has possession of the confidential personal information and is threatening to disclose it, a 'John Doe' injunction may be sought against that person. The first time this form of injunction was used since 1852 in the United Kingdom was in 2005 when lawyers acting for JK Rowling and her publishers obtained an interim order against an unidentified person who had offered to sell chapters of a stolen copy of an unpublished Harry Potter novel to the media.[14] Unlike the United States, the name "John Doe" does not actually appear in the formal name of the case, for example: X & Y v Persons Unknown [2007] HRLR 4.[15] Well-known cases of unidentified decedents include "Caledonia Jane Doe" (1979) and "Princess Doe" (1982), both of whom have been identified. The baby victim in a 2001 murder case in Kansas City, Missouri, was referred to as Precious Doe.[16] In 2009, the New York Times reported the difficulties and unwanted attention experienced by a man actually named John Doe, who had often been suspected of using a pseudonym. He had been questioned repeatedly by airport security staff. Another man named John Doe was often suspected of being an incognito celebrity.[17] In cases where a large number of unidentified individuals are mentioned, numbers may be appended, such as "Doe #2" or "Doe II". Operation Delego (2009), which targeted an international child sexual abuse ring, cited 21 numbered "John Does", as well as other people known by the surnames "Doe", "Roe", and "Poe". "John Stiles", "Richard Miles" have been used for the third and fourth participants in an action. "Mary Major" has been used in some federal cases in the US.[18] "James Doe" and "Judy Doe" are among other common variants. Less often, other surnames ending in -oe have been used when more than two unknown or unidentified persons are named in U.S. court proceedings, e.g., Poe v. Snyder, 834 F.Supp.2d 721 (W. D. Mich. 2011),[19] whose full style is In Massachusetts, "Mary Moe" is used to refer to pregnant women under the age of 18 petitioning the Superior Court for a judicial bypass exception to the parental consent requirement for abortion.[22] "Mary Moe" is also used to refer to such cases generally, i.e. "Mary Moe cases". Sometimes "Mary Doe" may be used for the individuals. Parallels in other countries include: In 1997, New York City police discovered a decapitated body and were not able to find the killer. The body was named Peaches (murder victim) and also Jane Doe 3. The use and selection of pseudonyms is not standardized in U.S. courts. The practice was rare prior to 1969, and is sometimes objected to on legal grounds. Currently there are no court rules about pseudonym use. The rules of civil procedure�... are silent on the matter�... Rule of Civil Procedure 10(a) reads, '...�In the complaint, the title of the action shall include the names of all the parties�...' The rule contains no guidance as to what parties should do to keep their names confidential.[28] Prior to�... 1969, only one Supreme Court case, three court of appeals' decisions, and one district court decision in the previous quarter-century featured an anonymous individual as the sole or lead plaintiff. Between 1969 and 22 January 1973, the date when the Supreme Court decided Roe and Doe, there were twenty-one district court and two court of appeals decisions featuring anonymous plaintiffs.[29]',
    '- John Doe and Jane Doe are placeholder names used in the US and UK when the true identity of a person is unknown or intentionally concealed.
- In law enforcement, these names are often used to refer to an unidentified corpse or a hypothetical "everyman" in other contexts.
- There are various variants of these names, including John/Jane Roe, John/Jane Smith, and Johnie/Janie Doe.
- In other English-speaking countries, unique placeholder names or codenames are more commonly used in police investigations.
- The legal term "John Doe injunction" or "John Doe order" has survived in English law and other legal systems.
- Other placeholder names, such as "Joe Bloggs" or "John Smith," have been informally used in the UK, Australia, and New Zealand but are not commonly used in legal or police circles.
- The names "Numerius Negidius" and "Aulus Agerius" were used in Ancient Rome in relation to hypothetical defendants and plaintiffs.
- The names "John Doe" and "Richard Roe" were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction.
- The rationale behind the choices of Doe and Roe is unknown.
- Other fictitious names used in medieval English law were "John Noakes" or "John-a-Stiles."
- The usage of John Doe as a fictitious lessee and Richard Roe as a fictitious defendant became obsolete in the UK in 1852.
- In the UK, "John Doe injunction" or "John Doe order" is still used.
- Unidentified decedents have been referred to as "Caledonia Jane Doe" and "Princess Doe."
- There have been cases where individuals named John Doe have faced difficulties due to suspicion of using a pseudonym.
- In cases involving a large number of unidentified individuals, numbers may be appended to the names.
- The use of pseudonyms is not standardized in US courts, and there are no specific rules about their use.
- Prior to 1969, the use of anonymous individuals as plaintiffs in court cases was rare, but it became more common after the Supreme Court decision in Roe and Doe.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 's King Edward III (1327�1377).[9] Though the rationale behind the choices of D' at line 11")]
[2023-10-01 08:13:36.666718] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://en.wikipedia.org/wiki/John_Doe',
    0.6153846153846154,
    0.8846153846153846,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'John Doe',
    ' John Doe (masculine) and Jane Doe (feminine) are multiple-use placeholder names that are used in the United States and the United Kingdom when the true name of a person is unknown or is being intentionally concealed.[1][2][3] In the context of law enforcement in the United States, such names are often used to refer to a corpse whose identity is unknown or cannot be confirmed. These names are also often used to refer to a hypothetical "everyman" in other contexts, in a manner similar to John Q. Public or "Joe Public". There are many variants to the above names, including John (or Richard)/Jane Roe, John/Jane Smith, John/Jane Bloggs, and Johnie/Janie Doe or just Baby Doe for children. In other English-speaking countries, unique placeholder names, numbers or codenames have become more often used in the context of police investigations. This has included the United Kingdom, where usage of "John Doe" originated during the Middle Ages. However, the legal term John Doe injunction or John Doe order[4] has survived in English law and other legal systems influenced by it. Other names, such as "Joe Bloggs" or "John Smith", have sometimes been informally used as placeholders for an everyman in the UK, Australia, and New Zealand; however such names are seldom used in legal or police circles in the same sense as John Doe. Well-known legal cases named after placeholders include: Use of "John Doe" in the sense of an everyman, includes: Use of "John Doe" in the sense of an unidentified man (anonymous), includes: Use of "Jane Doe" in the sense of an unidentified corpse, includes: Use of "John Doe" in the sense of a placeholder, includes: Use of "Jane Doe" in the Hail The Sun album "Wake", includes: Use of "Jane Doe" in the musical theater performance "Ride The Cyclone", includes: Under the legal terminology of Ancient Rome, the names "Numerius Negidius" and "Aulus Agerius" were used in relation to hypothetical defendants and plaintiffs.[8] The names "John Doe" (or "John Do") and "Richard Roe" (along with "John Roe") were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction, beginning perhaps as early as the reign of England's King Edward III (1327�1377).[9] Though the rationale behind the choices of Doe and Roe is unknown, there are many suggested folk etymologies.[10] Other fictitious names for a person involved in litigation in medieval English law were "John Noakes" (or "Nokes") and "John-a-Stiles" (or "John Stiles").[11] The Oxford English Dictionary states that John Doe is "the name given to the fictitious lessee of the plaintiff, in the (now obsolete in the UK) mixed action of ejectment, the fictitious defendant being called Richard Roe".[10] This usage is mocked in the 1834 English song "John Doe and Richard Roe": Two giants live in Britain's land, John Doe and Richard Roe, Who always travel hand in hand, John Doe and Richard Roe. Their fee-faw-fum's an ancient plan To smell the purse of an Englishman, And, 'ecod, they'll suck it all they can, John Doe and Richard Roe ...[12] This particular use became obsolete in the UK in 1852: As is well known, the device of involving real people as notional lessees and ejectors was used to enable freeholders to sue the real ejectors. These were then replaced by the fictional characters John Doe and Richard Roe. Eventually the medieval remedies were (mostly) abolished by the Real Property Limitation Act of 1833; the fictional characters of John Doe and Richard Roe by the Common Law Procedure Act 1852; and the forms of action themselves by the Judicature Acts 1873�75." Secretary of State for Environment, Food, and Rural Affairs v Meier and others (2009).[13] In the UK, usage of "John Doe" survives mainly in the form of John Doe injunction or John Doe order (see above). 8.02 If an unknown person has possession of the confidential personal information and is threatening to disclose it, a 'John Doe' injunction may be sought against that person. The first time this form of injunction was used since 1852 in the United Kingdom was in 2005 when lawyers acting for JK Rowling and her publishers obtained an interim order against an unidentified person who had offered to sell chapters of a stolen copy of an unpublished Harry Potter novel to the media.[14] Unlike the United States, the name "John Doe" does not actually appear in the formal name of the case, for example: X & Y v Persons Unknown [2007] HRLR 4.[15] Well-known cases of unidentified decedents include "Caledonia Jane Doe" (1979) and "Princess Doe" (1982), both of whom have been identified. The baby victim in a 2001 murder case in Kansas City, Missouri, was referred to as Precious Doe.[16] In 2009, the New York Times reported the difficulties and unwanted attention experienced by a man actually named John Doe, who had often been suspected of using a pseudonym. He had been questioned repeatedly by airport security staff. Another man named John Doe was often suspected of being an incognito celebrity.[17] In cases where a large number of unidentified individuals are mentioned, numbers may be appended, such as "Doe #2" or "Doe II". Operation Delego (2009), which targeted an international child sexual abuse ring, cited 21 numbered "John Does", as well as other people known by the surnames "Doe", "Roe", and "Poe". "John Stiles", "Richard Miles" have been used for the third and fourth participants in an action. "Mary Major" has been used in some federal cases in the US.[18] "James Doe" and "Judy Doe" are among other common variants. Less often, other surnames ending in -oe have been used when more than two unknown or unidentified persons are named in U.S. court proceedings, e.g., Poe v. Snyder, 834 F.Supp.2d 721 (W. D. Mich. 2011),[19] whose full style is In Massachusetts, "Mary Moe" is used to refer to pregnant women under the age of 18 petitioning the Superior Court for a judicial bypass exception to the parental consent requirement for abortion.[22] "Mary Moe" is also used to refer to such cases generally, i.e. "Mary Moe cases". Sometimes "Mary Doe" may be used for the individuals. Parallels in other countries include: In 1997, New York City police discovered a decapitated body and were not able to find the killer. The body was named Peaches (murder victim) and also Jane Doe 3. The use and selection of pseudonyms is not standardized in U.S. courts. The practice was rare prior to 1969, and is sometimes objected to on legal grounds. Currently there are no court rules about pseudonym use. The rules of civil procedure�... are silent on the matter�... Rule of Civil Procedure 10(a) reads, '...�In the complaint, the title of the action shall include the names of all the parties�...' The rule contains no guidance as to what parties should do to keep their names confidential.[28] Prior to�... 1969, only one Supreme Court case, three court of appeals' decisions, and one district court decision in the previous quarter-century featured an anonymous individual as the sole or lead plaintiff. Between 1969 and 22 January 1973, the date when the Supreme Court decided Roe and Doe, there were twenty-one district court and two court of appeals decisions featuring anonymous plaintiffs.[29]',
    '- John Doe and Jane Doe are placeholder names used in the US and UK when the true identity of a person is unknown or intentionally concealed.
- In law enforcement, these names are often used to refer to an unidentified corpse or a hypothetical "everyman" in other contexts.
- There are various variants of these names, including John/Jane Roe, John/Jane Smith, and Johnie/Janie Doe.
- In other English-speaking countries, unique placeholder names or codenames are more commonly used in police investigations.
- The legal term "John Doe injunction" or "John Doe order" has survived in English law and other legal systems.
- Other placeholder names, such as "Joe Bloggs" or "John Smith," have been informally used in the UK, Australia, and New Zealand but are not commonly used in legal or police circles.
- The names "Numerius Negidius" and "Aulus Agerius" were used in Ancient Rome in relation to hypothetical defendants and plaintiffs.
- The names "John Doe" and "Richard Roe" were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction.
- The rationale behind the choices of Doe and Roe is unknown.
- Other fictitious names used in medieval English law were "John Noakes" or "John-a-Stiles."
- The usage of John Doe as a fictitious lessee and Richard Roe as a fictitious defendant became obsolete in the UK in 1852.
- In the UK, "John Doe injunction" or "John Doe order" is still used.
- Unidentified decedents have been referred to as "Caledonia Jane Doe" and "Princess Doe."
- There have been cases where individuals named John Doe have faced difficulties due to suspicion of using a pseudonym.
- In cases involving a large number of unidentified individuals, numbers may be appended to the names.
- The use of pseudonyms is not standardized in US courts, and there are no specific rules about their use.
- Prior to 1969, the use of anonymous individuals as plaintiffs in court cases was rare, but it became more common after the Supreme Court decision in Roe and Doe.'
    );
    ]
[2023-10-01 08:13:37.297950] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 08:13:37.925545] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:18:05.521397] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020628B49540>]
[2023-10-01 08:18:05.524393] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020628B498A0>]
[2023-10-01 08:18:06.151967] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:18:12.613962] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:18:14.006247] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:18:15.048972] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:18:16.008825] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:18:16.938977] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:18:22.909061] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:18:23.565097] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://en.wikipedia.org/wiki/John_Doe',
    0.6153846153846154,
    0.8846153846153846,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'John Doe',
    ' John Doe (masculine) and Jane Doe (feminine) are multiple-use placeholder names that are used in the United States and the United Kingdom when the true name of a person is unknown or is being intentionally concealed.[1][2][3] In the context of law enforcement in the United States, such names are often used to refer to a corpse whose identity is unknown or cannot be confirmed. These names are also often used to refer to a hypothetical "everyman" in other contexts, in a manner similar to John Q. Public or "Joe Public". There are many variants to the above names, including John (or Richard)/Jane Roe, John/Jane Smith, John/Jane Bloggs, and Johnie/Janie Doe or just Baby Doe for children. In other English-speaking countries, unique placeholder names, numbers or codenames have become more often used in the context of police investigations. This has included the United Kingdom, where usage of "John Doe" originated during the Middle Ages. However, the legal term John Doe injunction or John Doe order[4] has survived in English law and other legal systems influenced by it. Other names, such as "Joe Bloggs" or "John Smith", have sometimes been informally used as placeholders for an everyman in the UK, Australia, and New Zealand; however such names are seldom used in legal or police circles in the same sense as John Doe. Well-known legal cases named after placeholders include: Use of "John Doe" in the sense of an everyman, includes: Use of "John Doe" in the sense of an unidentified man (anonymous), includes: Use of "Jane Doe" in the sense of an unidentified corpse, includes: Use of "John Doe" in the sense of a placeholder, includes: Use of "Jane Doe" in the Hail The Sun album "Wake", includes: Use of "Jane Doe" in the musical theater performance "Ride The Cyclone", includes: Under the legal terminology of Ancient Rome, the names "Numerius Negidius" and "Aulus Agerius" were used in relation to hypothetical defendants and plaintiffs.[8] The names "John Doe" (or "John Do") and "Richard Roe" (along with "John Roe") were regularly invoked in English legal instruments to satisfy technical requirements governing standing and jurisdiction, beginning perhaps as early as the reign of Englands King Edward III (1327�1377).[9] Though the rationale behind the choices of Doe and Roe is unknown, there are many suggested folk etymologies.[10] Other fictitious names for a person involved in litigation in medieval English law were "John Noakes" (or "Nokes") and "John-a-Stiles" (or "John Stiles").[11] The Oxford English Dictionary states that John Doe is "the name given to the fictitious lessee of the plaintiff, in the (now obsolete in the UK) mixed action of ejectment, the fictitious defendant being called Richard Roe".[10] This usage is mocked in the 1834 English song "John Doe and Richard Roe": Two giants live in Britains land, John Doe and Richard Roe, Who always travel hand in hand, John Doe and Richard Roe. Their fee-faw-fums an ancient plan To smell the purse of an Englishman, And, ecod, theyll suck it all they can, John Doe and Richard Roe ...[12] This particular use became obsolete in the UK in 1852: As is well known, the device of involving real people as notional lessees and ejectors was used to enable freeholders to sue the real ejectors. These were then replaced by the fictional characters John Doe and Richard Roe. Eventually the medieval remedies were (mostly) abolished by the Real Property Limitation Act of 1833; the fictional characters of John Doe and Richard Roe by the Common Law Procedure Act 1852; and the forms of action themselves by the Judicature Acts 1873�75." Secretary of State for Environment, Food, and Rural Affairs v Meier and others (2009).[13] In the UK, usage of "John Doe" survives mainly in the form of John Doe injunction or John Doe order (see above). 8.02 If an unknown person has possession of the confidential personal information and is threatening to disclose it, a John Doe injunction may be sought against that person. The first time this form of injunction was used since 1852 in the United Kingdom was in 2005 when lawyers acting for JK Rowling and her publishers obtained an interim order against an unidentified person who had offered to sell chapters of a stolen copy of an unpublished Harry Potter novel to the media.[14] Unlike the United States, the name "John Doe" does not actually appear in the formal name of the case, for example: X & Y v Persons Unknown [2007] HRLR 4.[15] Well-known cases of unidentified decedents include "Caledonia Jane Doe" (1979) and "Princess Doe" (1982), both of whom have been identified. The baby victim in a 2001 murder case in Kansas City, Missouri, was referred to as Precious Doe.[16] In 2009, the New York Times reported the difficulties and unwanted attention experienced by a man actually named John Doe, who had often been suspected of using a pseudonym. He had been questioned repeatedly by airport security staff. Another man named John Doe was often suspected of being an incognito celebrity.[17] In cases where a large number of unidentified individuals are mentioned, numbers may be appended, such as "Doe #2" or "Doe II". Operation Delego (2009), which targeted an international child sexual abuse ring, cited 21 numbered "John Does", as well as other people known by the surnames "Doe", "Roe", and "Poe". "John Stiles", "Richard Miles" have been used for the third and fourth participants in an action. "Mary Major" has been used in some federal cases in the US.[18] "James Doe" and "Judy Doe" are among other common variants. Less often, other surnames ending in -oe have been used when more than two unknown or unidentified persons are named in U.S. court proceedings, e.g., Poe v. Snyder, 834 F.Supp.2d 721 (W. D. Mich. 2011),[19] whose full style is In Massachusetts, "Mary Moe" is used to refer to pregnant women under the age of 18 petitioning the Superior Court for a judicial bypass exception to the parental consent requirement for abortion.[22] "Mary Moe" is also used to refer to such cases generally, i.e. "Mary Moe cases". Sometimes "Mary Doe" may be used for the individuals. Parallels in other countries include: In 1997, New York City police discovered a decapitated body and were not able to find the killer. The body was named Peaches (murder victim) and also Jane Doe 3. The use and selection of pseudonyms is not standardized in U.S. courts. The practice was rare prior to 1969, and is sometimes objected to on legal grounds. Currently there are no court rules about pseudonym use. The rules of civil procedure�... are silent on the matter�... Rule of Civil Procedure 10(a) reads, ...�In the complaint, the title of the action shall include the names of all the parties�... The rule contains no guidance as to what parties should do to keep their names confidential.[28] Prior to�... 1969, only one Supreme Court case, three court of appeals decisions, and one district court decision in the previous quarter-century featured an anonymous individual as the sole or lead plaintiff. Between 1969 and 22 January 1973, the date when the Supreme Court decided Roe and Doe, there were twenty-one district court and two court of appeals decisions featuring anonymous plaintiffs.[29]',
    '- John Doe and Jane Doe are placeholder names used in the US and UK when the true name of a person is unknown or being concealed.
- In the context of law enforcement, these names are often used to refer to an unidentified or unconfirmed corpse.
- They are also used as hypothetical "everyman" names in various contexts, similar to John Q. Public or Joe Public.
- John Doe and Jane Doe are variants of these placeholder names, as well as other variations such as John/Jane Roe, John/Jane Smith, and Johnie/Janie Doe or Baby Doe for children.
- Placeholder names, numbers, or codenames are more commonly used in other English-speaking countries for police investigations.
- In the UK, the legal term "John Doe injunction" or "John Doe order" has survived, but the use of John Doe as a placeholder has become obsolete since 1852.
- Other names like "Joe Bloggs" or "John Smith" have been informally used as placeholders in the UK, Australia, and New Zealand, but not in legal or police circles.
- The names "Numerius Negidius" and "Aulus Agerius" were used in ancient Rome in relation to hypothetical defendants and plaintiffs.
- The names John Doe and Richard Roe were regularly used in English legal instruments to satisfy technical requirements governing standing and jurisdiction, possibly starting in the reign of King Edward III.
- The names John Noakes, John-a-Stiles, Nokes, and Stiles were also used as fictitious names in medieval English law.
- John Doe was the fictitious lessee of the plaintiff and Richard Roe was the fictitious defendant in the mixed action of ejectment.
- The usage of John Doe and Richard Roe in legal instruments became obsolete in the UK in 1852 and was replaced by the Real Property Limitation Act of 1833 and the Common Law Procedure Act of 1852.
- The names John Doe and Richard Roe were used mockingly in an English song from 1834.
- In the UK, John Doe survives mainly in the form of John Doe injunction or John Doe order.
- Unidentified decedents have been referred to as Caledonia Jane Doe, Princess Doe, and Precious Doe.
- Some individuals named John Doe have faced difficulties and unwanted attention due to sharing the same name with a placeholder.
- In cases where a large number of unidentified individuals are involved, numbers may be appended to their names.
- Different surnames ending in -oe have been used in U.S. court proceedings, such as Doe, Roe, Poe, Stiles, and Miles.
- Mary Moe is used in Massachusetts to refer to pregnant women under 18 petitioning the Superior Court for a judicial bypass exception to the parental consent requirement for abortion.
- The use of pseudonyms is not standardized in U.S. courts, and there are no court rules about pseudonym use.
- Prior to 1969, the use of anonymous individuals as plaintiffs in court cases was rare, but it increased after the Supreme Court decided Roe and Doe in 1973.'
    );
    ]
[2023-10-01 08:18:24.192370] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 08:18:24.843608] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:18:25.480053] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'placeholder names',
    'The use of placeholder names like John Doe and Jane Doe can be considered emotionally charged, as they are often used in contexts involving unidentified or deceased individuals, which can evoke feelings of mystery, anonymity, and tragedy.',
    '3',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:18:26.116718] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:18:26.753453] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    1,
    3,
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:18:27.486288] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-01 08:46:28.907441] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001A19605D390>]
[2023-10-01 08:46:28.912847] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001A19605C850>]
[2023-10-01 08:46:29.551323] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:46:43.601202] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:46:44.265002] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:46:44.900642] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:46:45.540907] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "1"
    ]
[2023-10-01 08:48:32.565865] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000179EEF5D150>]
[2023-10-01 08:48:32.569862] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000179EEF5C760>]
[2023-10-01 08:48:33.212346] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:48:37.627975] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:48:38.271116] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:48:38.920370] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:48:39.570532] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "1"
    ]
[2023-10-01 08:49:24.745406] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002125386C130>]
[2023-10-01 08:49:24.748412] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002125386CFD0>]
[2023-10-01 08:49:25.389152] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:49:28.370189] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:49:29.015518] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:49:29.671453] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:49:30.305986] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "1"
    ]
[2023-10-01 08:50:23.605211] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001DE5EC203A0>]
[2023-10-01 08:50:23.614209] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001DE5EC21150>]
[2023-10-01 08:50:24.249982] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:50:29.290296] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:50:29.924019] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:50:30.563481] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:50:31.202730] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "1"
    ]
[2023-10-01 08:51:30.781198] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E02B038790>]
[2023-10-01 08:51:30.784096] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E02B038B80>]
[2023-10-01 08:51:31.409931] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:51:36.397984] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:51:37.030922] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:51:37.652974] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:51:38.267968] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "1"
    ]
[2023-10-01 08:52:45.763962] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E53BC4FBE0>]
[2023-10-01 08:52:45.767961] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E53BC4D120>]
[2023-10-01 08:52:46.396177] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:52:51.876358] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:52:52.513097] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:52:53.159050] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:52:53.798185] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "1"
    ]
[2023-10-01 08:54:27.150195] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000265B7A7F7F0>]
[2023-10-01 08:54:27.154184] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000265B7A7DF00>]
[2023-10-01 08:54:27.802000] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:54:31.038662] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:54:31.704177] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:54:32.355494] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:54:33.006273] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:57:49.993271] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000016BC319ED10>]
[2023-10-01 08:57:49.996269] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000016BC319E6B0>]
[2023-10-01 08:57:50.632541] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 08:58:06.399594] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 08:58:07.406795] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:58:08.308645] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:58:09.169852] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 08:58:10.048161] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 08:58:21.252907] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 08:58:21.961461] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922',
    0.6923076923076923,
    0.6923076923076923,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    ' Justin Trudeau�s India accusation complicates western efforts to rein in�China ',
    ' Assistant Professor in Political Science, Thompson Rivers University Saira Bano does not work for, consult, own shares in or receive funding from any company or organisation that would benefit from this article, and has disclosed no relevant affiliations beyond their academic appointment. Thompson Rivers University provides funding as a member of The Conversation CA-FR. Thompson Rivers University provides funding as a member of The Conversation CA. View all partners Prime Minister Justin Trudeau�s allegation that the Indian government was involved in the assassination on Canadian soil of Hardeep Singh Nijjar, a Sikh independence advocate, will undoubtedly erode Canadian-Indian relations at a time when the West is trying to appeal to India. Trudeau has made international headlines with his allegation in Parliament this week that India had a hand in the murder of Nijjar, who was gunned down last June in the parking lot of a gurdwara � a Sikh place of worship � in the Vancouver suburb of Surrey. Both government and opposition parties have unanimously condemned India, saying the allegations suggest an unacceptable violation of Canadian sovereignty. Foreign Affairs Minister M�lanie Joly has announced the expulsion of Indian diplomat Pavan Kumar Rai. The federal government says Rai led the Canadian branch of the Research and Analysis Wing, India�s foreign intelligence service. Joly says she�ll raise the issue with the G7 foreign ministers in New York. India, meantime, has denied the allegation and expelled a Canadian diplomat in retaliation. Tensions between Canada and India were apparent when Trudeau recently visited New Delhi for the G20 summit. Indian Prime Minister Narendra Modi had raised concerns to Trudeau about Sikh Khalistani protests in Canada. The Sikh independence movement is considered a threat to Indian territorial sovereignty and integrity. Canada has the largest Sikh diaspora outside Punjab, and activists like Nijjar have been staging demonstrations to demand an independent Khalistan state separate from India. Trudeau defended these demonstrations as freedom of expression, assembly and peaceful protest. But Trudeau also made his allegations about India�s involvement in Nijjar�s death to U.S. President Joe Biden, British Prime Minster Rishi Sunak and French President Emmanuel Macron at the G20. This complicates efforts by Canada and its allies to improve relations with India in a strategic attempt to counter-balance what they view as an increasing threat posed by China. In response to China�s growing might, Canada unveiled its Indo-Pacific strategy in 2022 that characterized China as a �disruptive power� and underscored the Canadian commitment to strengthening ties with countries in the Indo-Pacific region. That strategy has a particular focus on India. Read more: Canadas Indo-Pacific strategy: The same old starry-eyed thinking about Asian trade Canada has also committed to improving trade relations with India by negotiating a free-trade agreement. There have been nine rounds of negotiations, but those talks stopped amid allegations about India�s role in Nijjar�s death. Canadian Trade Minister Mary Ng cancelled her planned visit to India in October. Despite the importance countering China�s influence, the Indian government�s authoritative tendencies, human rights violations and interference in Canadian internal affairs have created obstacles to Ottawa�s efforts to improve the India-Canada relationship. It�s highly improbable that Canada�s allies, including the U.S., the U.K. and France, will cut ties with India due to Trudeau�s allegations. India is simply too important for strategic and economic reasons. India holds significant importance when it comes to countering China�s geopolitical influence. Ottawa has previously indicated India was a �priority� market for Canada; in 2022, India was Canada�s 10th largest trading partner. A strategic agreement between the U.S. and India is primarily aimed at tempering China�s growing influence and has been called a partnership between �the world�s oldest democracy� and �the world�s largest democracy� to highlight shared democratic values. But the Modi government has been harshly criticized for democratic backsliding and authoritarian tendencies, including fostering Hindu extremism, violating minority and human rights and cracking down on the media, academia and civil society. Nonetheless, Biden refrained from criticizing Modi publicly when he visited the White House in June despite being pressured to raise human rights issues with the Indian leader. Seventy-five U.S. congressional representatives wrote a letter to Biden urging him to do so. Half a dozen Democrats also boycotted Modi�s speech to U.S. Congress. But the Biden administration reportedly believes expressing concerns about Modi�s autocratic policies would harm the relationship. Indeed, Canada�s allies have often turned a blind eye to Modi�s misdeeds due to strategic considerations. But it�s now time for Canada and its allies to assertively hold India accountable for its actions. The strategic partnerships formed between western nations and India were originally founded on the premise of shared democratic values. As the world�s most populous country, with the fifth largest economy and second-largest military, India is still an invaluable partner to the West. But if India is diverging from these apparent shared principles, it�s essential to maintain the integrity of these partnerships by ensuring that Indian officials remain committed to democratic ideals and human rights. Even if Canada�s allies won�t publicly back Trudeau, the federal government should stay committed to its core values by ensuring India faces consequences for its authoritarian actions. Executive Master of Public Administration � Course, Victoria Public Leadership Masterclass series � Melbourne, Victoria Professional Development and Online Webinars � remote access, New South Wales Inside the Oslo Accords part 2: after the handshake � Victoria Graduate Certificate in Clinical Informatics and Digital Health � All states for online course , Queensland Copyright � 2010�2023, The Conversation Media Group Ltd ',
    '- Canadian Prime Minister Trudeau accused the Indian government of being involved in the assassination of Hardeep Singh Nijjar, a Sikh independence advocate on Canadian soil.
- The allegations have led to tensions between Canada and India, with both countries expelling diplomats.
- Canada is trying to improve relations with India as part of its efforts to counterbalance Chinas influence in the region.
- Canada has a strategic focus on India in its Indo-Pacific strategy and is negotiating a free-trade agreement with the country.
- Despite concerns about Indias democratic backsliding and human rights violations, Canadas allies are unlikely to cut ties with India due to its strategic and economic importance.
- The strategic partnerships between western nations and India were founded on shared democratic values, and it is important to hold India accountable for its actions.
- Canada should maintain its commitment to democratic ideals and human rights, even if its allies do not publicly support Trudeaus allegations.'
    );
    ]
[2023-10-01 08:58:22.616733] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 08:58:23.267749] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 08:58:23.916782] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'erode',
    'The word erode implies a negative impact on Canadian-Indian relations, suggesting a gradual deterioration or weakening of the relationship.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:24.590977] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:25.236661] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'unacceptable violation',
    'The phrase unacceptable violation presents a subjective judgment, indicating a strong negative reaction to Indias alleged involvement in the assassination and implying a breach of Canadian sovereignty that is deemed morally wrong or reprehensible.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:25.885187] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:26.531712] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'condemned',
    'The word condemned suggests strong disapproval or criticism towards India, indicating a bias against the accused party.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:27.220203] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:27.892620] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'denied',
    'The term denied implies a refusal or rebuttal of the allegation, casting doubt on the validity of Canadas claim.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:28.586869] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:29.238298] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'retaliation',
    'The word retaliation suggests a vengeful or retaliatory response from India, potentially portraying them in a negative light.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:29.882814] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:30.538275] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'threat',
    'The word threat suggests a sense of danger or harm posed by the Sikh independence movement to Indian territorial sovereignty and integrity, potentially biasing the portrayal of the movement.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:31.184791] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:31.842335] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'defended',
    'The word defended indicates support or justification of the Sikh demonstrations, potentially showing a bias towards the freedom of expression argument and downplaying any negative implications.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:32.486279] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:33.142230] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'complicates',
    'The word complicates suggests that Trudeaus allegations have added complexity or difficulty to the efforts of improving relations with India, indicating a negative consequence.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:33.783585] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:34.434858] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'authoritative tendencies',
    'The phrase authoritative tendencies implies a negative attribute of the Indian government, suggesting an inclination towards exercising power and control in an arbitrary or dictatorial manner.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:35.073552] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:35.719693] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'human rights violations',
    'The phrase human rights violations implies wrongdoing or misconduct by the Indian government in relation to the treatment of its citizens, potentially biasing the portrayal of India as a violator of human rights.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:36.361491] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:37.001354] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'interference',
    'The word interference suggests unwanted or unwarranted involvement by India in Canadian internal affairs, potentially portraying India in a negative light.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:37.646751] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:38.300555] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'obstacles',
    'The word obstacles suggests challenges or hindrances to Ottawas efforts to improve the India-Canada relationship, potentially implying a negative impact on the relationship.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:38.941435] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:39.591630] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'harshly criticized',
    'The phrase harshly criticized implies a strong and negative evaluation of the Modi governments actions, potentially indicating bias against the Indian government.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:40.228281] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:40.872382] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'violating minority and human rights',
    'The phrase violating minority and human rights suggests a wrongdoing or violation committed by the Modi government in relation to the rights of minorities and humans, potentially showing a biased portrayal of Indias actions.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:41.513868] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:42.157538] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'cracking down',
    'The phrase cracking down implies a severe and forceful action taken by the Modi government, potentially conveying a negative connotation.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:42.812207] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:43.458897] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'blind eye',
    'The phrase turning a blind eye suggests a deliberate act of ignoring or overlooking Modis misdeeds, potentially implying bias or inconsistency in holding India accountable.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:44.097584] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:44.757290] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'assertively hold India accountable',
    'The phrase assertively hold India accountable implies the importance of taking strong actions against India, potentially indicating a strong bias towards holding India responsible for its actions.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:45.411116] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:46.056552] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'authoritarian actions',
    'The term authoritarian actions suggests a negative characterization of Indias actions, indicating a bias against the Indian government.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:46.709514] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:58:47.354335] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'consequences',
    'The word consequences suggests the need for India to face negative outcomes or penalties for its actions, indicating a stance of judgement or punishment towards India.',
    '4',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:58:48.008642] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:59:18.907644] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 08:59:19.553166] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:59:20.195907] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 08:59:20.834864] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "3"
    ]
[2023-10-01 08:59:39.539369] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-10-01 08:59:40.556194] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:59:41.407712] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 08:59:42.229350] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-10-01 08:59:43.018167] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-10-01 08:59:43.888880] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-10-01 08:59:44.534352] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954',
    0.42857142857142855,
    0.14285714285714285,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'New Zealand hit by magnitude-6 earthquake, no serious damage reported',
    ' New Zealand hit by magnitude-6 earthquake, no serious damage reported A magnitude-6�earthquake has struck in the centre of New Zealands South Island, government seismic monitor GeoNet says, but initial reports indicate no injuries or significant damage.� The earthquake, the largest in the country this year, hit at 9:14am local time near Geraldine at a focal depth of 11 kilometres. GeoNet said more than 14,000 people reported feeling the shake, some as far north as Auckland on the North Island. Sarah Hussey, a farmer close to the epicentre, said the quake had been stronger than others she remembered. "Theres no damage here, but I thought it was thunder for a start. The house lifted up for a bit," she told TVNZs 1News. Timaru Deputy Mayor Scott Shannon told Radio NZ there had been no immediate reports of damage but checks were ongoing. GeoNet said a magnitude-3.4 shake followed at 11:42am local time, causing light shaking 45 kilometres north of Geraldine at a depth of 6 kilometres. The quake struck not far from where a 6.3 magnitude quake hit in 2011, killing 185 people and causing major damage in the South Island city of Christchurch.� Reuters We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A magnitude-6 earthquake has struck in the center of New Zealands South Island
- The earthquake hit at 9:14 am local time near Geraldine at a focal depth of 11 kilometers
- More than 14,000 people reported feeling the shake, some as far north as Auckland on the North Island
- Initial reports indicate no injuries or significant damage
- There have been no immediate reports of damage, but checks are ongoing
- A magnitude-3.4 aftershock occurred at 11:42 am local time, causing light shaking 45 kilometers north of Geraldine
- The earthquake struck near the area where a 6.3 magnitude quake hit in 2011, causing major damage in the city of Christchurch
- No damage was reported near the epicenter, but some residents felt the house lift up momentarily
- The earthquake is the largest in the country this year.'
    );
    ]
[2023-10-01 08:59:45.178817] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 08:59:45.820839] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-10-01 08:59:46.464808] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'no serious damage reported',
    'The phrase no serious damage reported suggests that the impact of the earthquake was not severe and may help to alleviate any concerns or fears among the public.',
    '5',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:59:47.108236] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:59:47.752592] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'no injuries',
    'The mention of no injuries highlights the relief that there were no physical harm or casualties resulting from the earthquake, conveying a sense of safety and well-being.',
    '5',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:59:48.395591] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:59:49.041799] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'largest in the country this year',
    'The use of the word largest indicates that this earthquake is significant and notable in comparison to others that have occurred in New Zealand in the current year, potentially arousing interest or attention.',
    '5',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:59:49.688758] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:59:50.335292] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'stronger than others she remembered',
    'The phrase indicates the personal perception of the earthquakes intensity by a witness, which can evoke emotions and convey a sense of the event being more impactful or unsettling.',
    '5',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:59:50.976944] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 08:59:51.625793] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'killing 185 people and causing major damage',
    'The mention of the previous 6.3 magnitude earthquake in 2011 that resulted in casualties and significant destruction serves as a reminder of the potential devastation caused by such events, which can evoke emotions and add gravity to the current situation.',
    '5',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 08:59:52.267863] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:00:26.597778] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 09:00:27.238376] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "4"
    ]
[2023-10-01 09:00:27.879597] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "4"
    ]
[2023-10-01 09:12:02.332671] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000136029B6AD0>]
[2023-10-01 09:12:02.338670] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000136029B5F60>]
[2023-10-01 09:12:02.979540] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 09:12:14.478739] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://en.wikipedia.org/wiki/John_Doe"
    ]
[2023-10-01 09:12:15.126741] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "3"
    ]
[2023-10-01 09:12:15.771544] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE ID = "1"
    ]
[2023-10-01 09:12:16.410669] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "3"
    ]
[2023-10-01 09:12:35.724235] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-20/new-zealand-hit-by-earthquake/102877954"
    ]
[2023-10-01 09:12:36.371354] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "5"
    ]
[2023-10-01 09:12:37.004578] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "5"
    ]
[2023-10-01 09:13:30.073519] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia"
    ]
[2023-10-01 09:13:30.986173] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:13:31.803506] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:13:32.656374] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia"
    ]
[2023-10-01 09:13:33.510794] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia"
    ]
[2023-10-01 09:13:35.151512] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia"
    ]
[2023-10-01 09:13:35.813406] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia',
    0.4,
    0.3,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'Man killed, one hospitalised after whale hits boat off Australia',
    'Police say whale breaching may have caused boat to flip and throw two occupants into the water off Sydney. One man died and another was hospitalised in Australia after a whale hit and flipped their small boat during a fishing trip, authorities said. The two men were thrown from the boat when it was hit at about 6am local time on Saturday (20:00 GMT on Friday) in the waters off La Perouse, about 14km (nine miles) southeast of Sydney. People on a second boat raised the alarm after spotting a 4.8-metre vessel unoccupied in the water, police said. The 53-year-old skipper was pulled from the water nearby, treated by paramedics and taken to hospital, where he was in a stable condition, according to authorities. A second man, aged 61, was unconscious and died at the scene. The boat �was likely to have struck or been impacted by a whale breaching, causing the boat to tilt, ejecting both men�, police said in a statement. Water Police Acting Superintendent Siobhan Munro described the collision as a �tragic accident� and told how the skipper of the boat had tried to hold his companion �as close as he could� in an effort to save him. According to Australia�s ABC national broadcaster, Munro said the men could have been in the water for 45 minutes before they were rescued. A man has died and another has been taken to hospital after an early morning fatal collision with a whale at Sydneys Botany Bay. https://t.co/4G7ybNq7fd � ABC News (@abcnews) September 29, 2023 Though Australia has an extensive coastline and its waters host 10 large and 20 smaller species of whales, human deaths caused by whales are rare. Humpback and southern right whales travel north to warmer breeding grounds during Australia�s winter months, returning southwards between September and November. �Right now there are lots of whales out there and there are lots of examples of whales breaching next to boats,� Munro said. New South Wales Maritime executive director Mark Hutchings said that people on the water needed to stay 100 metres away from an adult whale, and 300 metres if the whale is accompanying a calf. �Whales aren�t there to harm anyone, but those interactions can happen,� Hutchings told the ABC. The accident comes less than two weeks after a four-metre humpback whale was struck in the head by a boat propeller off the coast of Western Australia. In June, eight Danish people were rescued when their sailboat capsized in the Pacific Ocean after a collision with one or two whales. Follow Al Jazeera English:',
    '- One man died and another was hospitalized in Australia after a whale hit and flipped their small boat during a fishing trip.
- The incident occurred off the coast of La Perouse, about 14km southeast of Sydney.
- The 53-year-old skipper was pulled from the water and is in stable condition in the hospital.
- A second man, aged 61, was unconscious and died at the scene.
- Police believe the boat was struck or impacted by a whale breaching, causing it to tilt and eject the occupants.
- The collision is being described as a tragic accident.
- There are currently many whales in the waters off Australia and examples of whales breaching next to boats.
- It is rare for human deaths to be caused by whales in Australia.
- People on the water are advised to stay at least 100 meters away from an adult whale and 300 meters if a calf is present.
- This incident follows a recent incident where a humpback whale was struck by a boat propeller in Western Australia.
- In June, a sailboat capsized in the Pacific Ocean after a collision with one or two whales, but all occupants were rescued.'
    );
    ]
[2023-10-01 09:13:36.448087] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 09:13:37.099803] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia"
    ]
[2023-10-01 09:13:37.738510] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'died',
    'The word died indicates a tragic loss of life, evoking strong emotions.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:38.377061] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:39.085973] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'tragic accident',
    'The phrase tragic accident portrays the event as a devastating and unfortunate incident, highlighting its emotional impact.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:39.728568] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:40.370334] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'collided',
    'The word collided implies a sudden and forceful impact, suggesting a potentially traumatic event.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:41.003037] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:41.639973] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'unconscious',
    'The word unconscious suggests a severe and distressing state of being, indicating a critical condition of the individual.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:42.271175] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:42.909347] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'rescued',
    'The word rescued conveys a sense of relief and compassion, highlighting the positive outcome in a perilous situation.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:43.542441] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:44.179188] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'fatal collision',
    'The phrase fatal collision emphasizes the severity of the incident, implying a deadly outcome and evoking strong emotions.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:44.819044] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:45.460561] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'struck',
    'The word struck implies a forceful impact, suggesting a sudden and traumatic event.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:46.089996] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:13:46.767411] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'capsized',
    'The word capsized indicates a dangerous and potentially life-threatening situation, arousing feelings of fear and distress.',
    '6',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:13:47.404683] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:14:19.920744] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C0038FA200>]
[2023-10-01 09:14:19.923747] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C0038FBE50>]
[2023-10-01 09:14:20.543363] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 09:14:23.216956] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.aljazeera.com/news/2023/9/30/man-killed-one-hospitalised-after-whale-flips-boat-off-australia"
    ]
[2023-10-01 09:14:23.838171] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "6"
    ]
[2023-10-01 09:14:24.453640] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "6"
    ]
[2023-10-01 09:24:15.169467] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001816728F5B0>]
[2023-10-01 09:24:15.172467] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001816728DA50>]
[2023-10-01 09:24:15.805795] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 09:24:49.154355] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:24:50.152583] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:24:51.005718] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:24:51.922135] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:24:52.834671] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:24:55.573851] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:24:56.270662] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:24:56.990272] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594',
    0.47619047619047616,
    0.42857142857142855,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'US government likely to avoid shutdown with 45-day stopgap bill hours before funding expires',
    ' US government likely to avoid shutdown with 45-day stopgap bill hours before funding expires The US�House of Representatives has passed a stopgap funding bill with overwhelming Democratic�support hours before a government shutdown was set to take effect.� The federal governments fourth partial shutdown in a decade,�set to begin at 12.01am�on Sunday, will now be averted providing the Democratic-majority Senate passes�the bill and President Joe Biden signs�it into law. The bill passed the Republican-led House of Representatives after Speaker Kevin McCarthy defied�an earlier demand by party hardliners for a partisan approach. The new approach would leave behind aid to Ukraine � a White House priority opposed by a growing number of GOP lawmakers � but increase federal disaster assistance by $US16 billion ($25 billion),�meeting President Biden�s full request.� Mr McCarthy abandoned party hardliners earlier insistence that any bill pass the chamber with only Republican votes, a change that could cause some colleagues to seek�to oust him. The House voted 335-91 to fund the government for another 45 days, with more Democrats than Republicans supporting it. The move marked a profound shift from earlier in the week, when a shutdown looked all but inevitable. Some 209 Democrats in the House supported the bill, far more than the 126 Republicans who did so, and Democrats described the result as a win. "Extreme MAGA Republicans have lost, the American people have won," top House Democrat Hakeem Jeffries told Reuters.� "I am relieved that Speaker McCarthy folded and finally allowed a bipartisan vote at the eleventh hour on legislation to stop Republicans rush to a disastrous shutdown,"�Democratic�Representative Don Beyer said.� Mr McCarthys shift won the support of top Senate Republican Mitch McConnell, who previously had backed a similar measure that was moving through the Senate with broad bipartisan support, even though the House version dropped aid for Ukraine. "Under these circumstances, Im recommending a no vote, even though I very much want to avoid a government shutdown," Senator McConnell said. The two bills are very similar, with the House version providing another 45 days of funding for the federal government � enough to last through mid-November � but not providing additional funds to help Ukraine fight off a Russian invasion. Mr McCarthy dismissed concerns that hardline Republicans could try to oust him as leader. "I want to be the adult in the room:�go ahead and try," McCarthy told reporters. "And you know what? If I have to risk my job for standing up for the American public, I will do that." The bill is now headed to the Senate as the midnight local midnight local deadline approaches.� Reuters We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- The US House of Representatives has passed a stopgap funding bill to avoid a government shutdown.
- The bill needs to be passed by the Democratic-majority Senate and signed by President Joe Biden.
- Speaker Kevin McCarthy defied party hardliners by passing the bill with overwhelming Democratic support.
- The new approach includes increased federal disaster assistance but leaves behind aid to Ukraine, which was a White House priority opposed by some GOP lawmakers.
- The bill passed the House with more Democrat votes than Republican votes.
- The shift in approach by McCarthy won the support of top Senate Republican Mitch McConnell.
- Concerns about hardline Republicans trying to oust McCarthy as leader were dismissed by McCarthy.
- The bill is now headed to the Senate for further consideration.

(Note: The last few sentences of the article are not related to the above information and should not be included in the summary.)'
    );
    ]
[2023-10-01 09:24:57.659225] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 09:24:58.329433] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:24:59.023371] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'shutdown',
    'The word shutdown carries a negative connotation and implies disruption, instability, and potential harm to the functioning of the government, which can evoke strong emotions.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:24:59.717580] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:00.384060] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'partisan approach',
    'The phrase partisan approach suggests a biased or divisive method of decision-making, indicating a potential lack of cooperation and compromise.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:01.110059] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:01.866908] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'party hardliners',
    'The term party hardliners implies a group of individuals within the party who hold extreme or uncompromising views, which can contribute to bias or polarization.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:02.536567] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:03.188339] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'White House priority',
    'The phrase White House priority indicates a subjective preference given to a particular issue or agenda by the current administration, potentially suggesting bias.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:03.858157] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:04.518805] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'GOP lawmakers',
    'The abbreviation GOP refers to the Grand Old Party, which is associated with the Republican Party. Referring to GOP lawmakers highlights a specific political affiliation, which can introduce bias or partisan implications.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:05.219392] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:05.898628] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'disastrous shutdown',
    'The phrase disastrous shutdown expresses a strong negative judgment about the potential consequences of a shutdown, contributing to an emotionally charged language.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:06.619365] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:07.295475] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'relieved',
    'The word relieved signifies an emotional response, indicating a sense of tension or concern that has been alleviated or resolved.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:07.932345] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:08.600467] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'bipartisan vote',
    'The term bipartisan vote suggests cooperation and collaboration between members of different political parties, highlighting a positive notion and potentially indicating a balanced decision-making process.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:09.295414] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:09.934057] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Russian invasion',
    'The phrase Russian invasion implies an aggressive act by Russia in terms of military intervention or territorial aggression, which can trigger emotional responses and potentially bias the perspective on the issue.',
    '7',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:25:10.615156] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:25:11.755633] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:25:12.608224] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:25:18.205081] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/us-government-avoids-shutdown/102921594"
    ]
[2023-10-01 09:27:07.339054] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E055F05000>]
[2023-10-01 09:27:07.343059] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E055F04280>]
[2023-10-01 09:27:07.977834] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 09:27:19.163246] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:20.012182] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:20.799216] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:28.013739] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:28.882381] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:29.696881] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:45.949063] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002CD33D5EC50>]
[2023-10-01 09:27:45.953064] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002CD33D5FEB0>]
[2023-10-01 09:27:46.660259] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 09:27:58.224962] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:27:59.257425] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:28:00.107828] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.smh.com.au/politics/federal/the-disability-commission-was-split-on-special-schools-those-with-lived-experience-want-them-closed-20230929-p5e8np.html"
    ]
[2023-10-01 09:28:40.576399] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://theconversation.com/justin-trudeaus-india-accusation-complicates-western-efforts-to-rein-in-china-213922"
    ]
[2023-10-01 09:28:41.213203] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "4"
    ]
[2023-10-01 09:28:41.847333] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "4"
    ]
[2023-10-01 09:29:12.429851] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2"
    ]
[2023-10-01 09:29:13.612647] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:29:14.479126] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:29:15.277124] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2"
    ]
[2023-10-01 09:29:15.908777] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2"
    ]
[2023-10-01 09:29:16.229352] [Ron-Ash] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2',
    1.0,
    1.0,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'Victim named after fatal whale boat flip in Sydney's Botany Bay',
    'Auto news: Fasted car in Australia spotted in Officeworks car park before launch. � 2023 Nine Entertainment Co.',
    '- A fatal incident occurred in Sydneys Botany Bay involving a whale boat flip.
- The victim of the incident has been identified, although their name has not been disclosed in the article.
- The incident resulted in a fatality.
- The location of the incident was Botany Bay in Sydney.
- The incident involved a whale boat flip.
- The victims name has been released.
- The incident occurred in Sydneys Botany Bay.
- The incident resulted in a fatality.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 's Botany Bay',\n    'Auto news: Fasted car in Australia spotted in Officeworks ca' at line 10")]
[2023-10-01 09:29:16.547075] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2',
    1.0,
    1.0,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'Victim named after fatal whale boat flip in Sydney's Botany Bay',
    'Auto news: Fasted car in Australia spotted in Officeworks car park before launch. � 2023 Nine Entertainment Co.',
    '- A fatal incident occurred in Sydneys Botany Bay involving a whale boat flip.
- The victim of the incident has been identified, although their name has not been disclosed in the article.
- The incident resulted in a fatality.
- The location of the incident was Botany Bay in Sydney.
- The incident involved a whale boat flip.
- The victims name has been released.
- The incident occurred in Sydneys Botany Bay.
- The incident resulted in a fatality.'
    );
    ]
[2023-10-01 09:29:17.178447] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 09:29:17.816024] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2"
    ]
[2023-10-01 09:29:18.818103] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:29:19.618506] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:29:21.099383] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2"
    ]
[2023-10-01 09:29:21.439729] [Ron-Ash] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2',
    1.0,
    1.0,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'Victim named after fatal whale boat flip in Sydney's Botany Bay',
    'Auto news: Fasted car in Australia spotted in Officeworks car park before launch. � 2023 Nine Entertainment Co.',
    '- A fatal incident occurred in Sydneys Botany Bay involving a whale boat flip.
- The victim of the incident has been identified.
- The incident has caused concern and attention in the area.
- The circumstances surrounding the whale boat flip are under investigation.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 's Botany Bay',\n    'Auto news: Fasted car in Australia spotted in Officeworks ca' at line 10")]
[2023-10-01 09:29:21.761982] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2',
    1.0,
    1.0,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'Victim named after fatal whale boat flip in Sydney's Botany Bay',
    'Auto news: Fasted car in Australia spotted in Officeworks car park before launch. � 2023 Nine Entertainment Co.',
    '- A fatal incident occurred in Sydneys Botany Bay involving a whale boat flip.
- The victim of the incident has been identified.
- The incident has caused concern and attention in the area.
- The circumstances surrounding the whale boat flip are under investigation.'
    );
    ]
[2023-10-01 09:29:22.394350] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 09:29:23.025623] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.9news.com.au/national/sydney-news-botany-bay-boat-incident-man-in-critical-condition/f67ad151-afc9-442d-a3cd-13c23abbdcf2"
    ]
[2023-10-01 09:30:16.701559] [Ron-Ash] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000148CC43DC30>]
[2023-10-01 09:30:16.704569] [Ron-Ash] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000148CC1F02B0>]
[2023-10-01 09:30:17.350527] [Ron-Ash] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 09:30:26.156200] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/scam-buster-justin-williams-port-fairy-back-closures-old-victims/102765350"
    ]
[2023-10-01 09:30:27.179442] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:30:28.003134] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 09:30:28.808721] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/scam-buster-justin-williams-port-fairy-back-closures-old-victims/102765350"
    ]
[2023-10-01 09:30:29.595347] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/scam-buster-justin-williams-port-fairy-back-closures-old-victims/102765350"
    ]
[2023-10-01 09:30:33.570540] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/scam-buster-justin-williams-port-fairy-back-closures-old-victims/102765350"
    ]
[2023-10-01 09:30:34.248100] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, Summary, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-10-01/scam-buster-justin-williams-port-fairy-back-closures-old-victims/102765350',
    0.5151515151515151,
    0.5151515151515151,
    'TESTING.',
    1, 
    NOW(),
    'Ron-Ash',
    'Victorian scam buster Justin Williams says regional bank closures linked to increase in victims',
    ' Victorian scam buster Justin Williams says regional bank closures linked to increase in victims Justin Williams isnt a cop, and he certainly doesnt work for Interpol, but�in Port Fairy, Victoria, hes become the local scam buster.� � Through his�IT business, Mr Williams has�helped about 60 local scam victims over the past few�years, saving people thousands of dollars. "In the last three years, all of a sudden Im getting all these calls [with people saying], I think Ive been scammed, my computers got a virus," Mr Williams said. "Weve been going out and sorting them out, but its gradually getting more and more." Most of the calls come from his clients, who hes been�wording up about cyber security�over the years.� "I always talk about the scams when Im with them," he said. "I might be setting up a computer and Ill say, What do you do if the phone rings?,�and [if its a suspect call] Ill make them say, Dont trust the person!," he said. His clients now call Mr Williams if they fear their computer may have been infiltrated by malware, or�when someone calls claiming to be an�official and�asking for account passwords. After years of coaching by Mr Williams, Keith and Barb Millard�now call him whenever they spot something alarming. � "I click on the address and if it comes up with gobbledygook � I forward it to Justin and say, Is this dodgy?,"�Mrs�Millard said.� "And he gets straight back to me�[and says], Yes, its dodgy. Dont open it, just delete. "Hes opened our eyes. We question everything now, even bank emails or Telstra, we check everything before we open it." Often, Mr Williams�catches the scammers in the act, but sometimes hes too late. "Most of the time�we get them before they lose anything financially, but sometimes people have lost money," he said. Recently, he received a call from an elderly woman whose life savings had been stolen via a fake malware cyber scam. By the time Mr Williams arrived, the criminals had siphoned $30,000 from her accounts. "She was left with $80 in her account and her family are lending her some money � its so sad," he said. The ABC has reached out to several of Mr Williams clients, but they declined interviews, saying they felt embarrassed.� Mr Williams said the pain caused by scams went beyond the financial. "[One of my clients]�is in her 80s ��she was a really happy-go-lucky and a lovely, lovely person,�and she was rung up by a scammer," he said. "The guy was completely abusing her, he got another person to come on the phone, telling her she was stupid and�hed ruin her life and so on, and she had a heart attack while she was on the phone. "Her husband called the ambulance ��she was in hospital for a week. "Ive been to see her three times since and shes definitely deteriorated.� "She hasnt been the same ever since." Mr Williams started running "how to" classes when the first iPhone was announced and he realised personal technology was transforming so quickly that most people couldnt keep up with it. Most of his clients are�elderly and come from a generation who are often naturally trusting of authority and kind to strangers, even to people who call them out of the blue.� "Theyd say, I was talking to a nice man from the NBN, hes going to give me a discount," Mr Williams said. "He needed to go into my bank account to put the money into my account, hes going to call back." In such a case, Mr Williams would rush out to the clients home to prevent the inevitable theft, sometimes talking to the scammer himself on speaker�to prove to his client the "nice man" was a fraud. He said he�stepped into the role of "scam buster" as no-one else was�doing it, and he now employs another IT expert,�Florian Lindemann, to cope with the growing demand.�� "Its a hard one because the crimes are so big and [for]�the local police, its not in their scope," Mr Williams said.� "The police can say, OK, we can go through Scamwatch and report a scam, but really, they cant do much." Mr Williams said branch closures in regional towns were contributing to the growing number�of scam victims. Over the past four years in Port Fairy,�residents have gone from having four banks to just one.� In 2019, the National Australia Bank closed its Port Fairy branch, and in 2021 the ANZ and Commonwealth Bank followed suit. Now, theres�just the Community Bank Port Fairy and District, part of Bendigo Bank, left.� "Bank branches were the first point of contact for people who had been scammed ��youd always go to the bank first to see a real person," he said.� "Older people are being forced online when they dont want to, as so many bank branches close." Mr Williams said banks�could be doing more to protect their most vulnerable customers. "I wish the banks would hold the money for five days if it was over a certain amount and going overseas, or completely-out-of-the-ordinary transactions," he said. In 2022, Australians lost $3.1 billion via�scams � an�80 per cent increase on 2021. Source:�ACCC�Scamwatch� Even though cyber scammers are committing a federal crime,�often stealing huge amounts of money, scam�victims�rarely go to the police. Australian Bureau of Statistics data showed�that in 2021, only 57 per cent�of�people who experienced a scam reported it to an authority, and of them, most people contacted�their bank rather than the police, who were only notified in 13.9 per cent�of cases. Whether there is a link between rising scams and�regional branch closures is difficult�to ascertain. The topic of cyber security�was�absent from Treasurys 2021 Regional Banking Taskforce Issues Paper, which was commissioned to�identify and assess the impact of bank branch closures in the regions. But last week, the big four banks were grilled by senators in Canberra as part of a�parliamentary inquiry into regional bank closures. All four banks cited an overwhelming shift of customer preference for online banking, with most banks reporting more than�90 per cent�of customers were now digital.� Senator Linda White pointed out that digital fraud was on the rise and asked Commonwealth Bank chief executive Matt Comyn whether banks were�making people "more susceptible to fraud, particularly the elderly and others less au fait with scams" by pushing customers online. Mr Comyn�said customers were choosing digital banking, rather than being forced into it by�regional branch closures.� More than�1,200 bank branches have closed in Australia over the past six years. Mr Williams said�a lot of his clients had developed a distrust for humanity. "Every time the phone rings, theyll get scared, terrified of a scam," he said. When Victor Shaw discovered that scammers had stolen his dads life savings, he held out little hope of a positive outcome. But then a letter arrived from ANZ that left him stunned. "Its like a post-traumatic stress thing, it really affects them long-term." Mr Williams said once a person fell for a scam the first time, it eroded�their confidence and made them more vulnerable to future attacks.� "Most people get scammed once and then they learn from it, but sometimes youll get a second scam � theyll think its the bank ringing to fix up the scam," he said. "Definitely, people who have been scammed, their names will be out there, and the organised crime rings will say, Ok, this is a target thats been vulnerable before and well get more from them." "Its really sad." Browse for your location and find more local ABC News and information We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    'Major points of the article:

- Justin Williams, an IT professional in Port Fairy, Victoria, has helped around 60 local scam victims over the past few years.
- Williams has been educating his clients about cyber security and how to recognize scams.
- Many of Williams clients now call him when they suspect they have been scammed or receive suspicious calls.
- Williams has caught scammers in the act before, but sometimes he is too late and people have lost money.
- Williams started running "how to" classes to help people keep up with rapidly evolving personal technology.
- Most of Williams clients are elderly and trusting, making them more vulnerable to scams.
- Williams believes that regional bank closures have contributed to the increase in scam victims, as people are forced to handle their finances online.
- Williams suggests that banks should take measures like holding large transactions for a few days to protect vulnerable customers.
- Australians lost $3.1 billion to scams in 2022, an 80% increase from the previous year.
- Scam victims rarely report the crimes to the police, often contacting their bank instead.
- The link between rising scams and regional bank closures is uncertain, as the topic was absent from a recent Treasury report on the impact of bank closures.
- During a parliamentary inquiry, bank executives pointed out that customer preference for online banking has driven the shift away from bank branches.
- Many of Williams clients have developed a fear of scams and are constantly on guard.
- Falling for a scam erodes a persons confidence and makes them more vulnerable to future attacks.
- Scammers target people who have been scammed before, knowing they may be more susceptible.
- The emotional impact of scams can have lasting effects on victims.

Note: The footer text is not related to the above article.'
    );
    ]
[2023-10-01 09:30:34.895560] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 09:30:35.564051] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/scam-buster-justin-williams-port-fairy-back-closures-old-victims/102765350"
    ]
[2023-10-01 09:30:36.212451] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'scam buster',
    'The phrase scam buster is emotionally charged as it portrays Justin Williams as a heroic figure who fights against scams, creating a sense of admiration and empowerment.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:36.854489] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:30:37.516925] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'embarrassed',
    'The word embarrassed indicates a negative emotion and suggests that scam victims feel ashamed or humiliated about being scammed, which can lead to reluctance in sharing their experiences.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:38.164262] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:30:38.895054] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'fraud',
    'The word fraud is emotionally charged as it implies intentional deception and criminal activity, evoking feelings of anger, betrayal, and victimization.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:39.547154] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:30:40.197742] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'terrified',
    'The word terrified indicates a strong emotional response of extreme fear and anxiety, highlighting the devastating impact of scams on individuals mental well-being.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:40.847330] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:30:41.505406] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'post-traumatic stress',
    'The phrase post-traumatic stress is emotionally charged as it refers to a psychological condition associated with traumatic events, suggesting that being scammed can lead to long-term mental and emotional consequences.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:42.152488] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:30:42.813323] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'sad',
    'The word sad is emotionally charged, conveying a feeling of sorrow or unhappiness, emphasizing the emotional toll that scams take on individuals and their families.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:43.477383] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 09:30:44.125987] [Ron-Ash] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'vulnerable',
    'The word vulnerable is emotionally charged as it implies a state of weakness or susceptibility, emphasizing the helplessness of scam victims and their increased risk of being targeted again.',
    '8',
    1, 
    NOW(),
    'Ron-Ash'
    );
    ]
[2023-10-01 09:30:44.775898] [Ron-Ash] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 10:54:59.956680] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002CA091C5C50>]
[2023-10-01 10:54:59.958269] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002CA09206CD0>]
[2023-10-01 10:55:00.847753] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 10:55:01.790139] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Article
DROP COLUMN Summary]
[2023-10-01 10:55:01.792124] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002CA091C5C50>]
[2023-10-01 10:55:01.792226] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002CA09206CD0>]
[2023-10-01 10:55:26.853733] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E004584350>]
[2023-10-01 10:55:26.854735] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E0069AD3D0>]
[2023-10-01 10:55:27.665875] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 10:56:05.209213] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000230B22E0F90>]
[2023-10-01 10:56:05.211224] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000230B05902D0>]
[2023-10-01 10:56:06.084349] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 10:56:06.978244] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-01 10:56:07.839636] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 10:56:08.280000] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-10-01 10:56:08.722226] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 10:56:09.609952] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-01 10:56:10.448830] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-10-01 10:56:11.292564] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-01 10:56:12.135788] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 10:56:12.972171] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-01 10:56:13.826947] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    3,
    9,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 10:56:14.703605] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-01 10:56:15.576699] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '9',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 10:56:16.444181] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 10:56:16.447175] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000230B22E0F90>]
[2023-10-01 10:56:16.448174] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000230B05902D0>]
[2023-10-01 12:56:09.305281] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000023C19B1AD10>]
[2023-10-01 12:56:09.307282] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000023C18351410>]
[2023-10-01 12:56:10.148146] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 12:57:27.807079] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 12:57:40.553860] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 12:57:41.559819] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 12:59:05.023623] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002289B4AAA90>]
[2023-10-01 12:59:05.025638] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000228F9076150>]
[2023-10-01 12:59:05.882781] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 12:59:09.372102] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 12:59:11.207244] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 12:59:12.294305] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 13:00:55.745829] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001B1632DF450>]
[2023-10-01 13:00:55.746994] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001B162F9A550>]
[2023-10-01 13:00:56.588264] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 13:01:09.967693] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 13:01:22.870254] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 13:01:23.957599] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 13:01:25.027947] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 13:01:26.125238] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 13:11:34.670346] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001987FE9CA50>]
[2023-10-01 13:11:34.671455] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001981E529210>]
[2023-10-01 13:11:35.522386] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 13:58:16.045319] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 13:58:16.920464] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 14:00:32.939829] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000298AEF31F10>]
[2023-10-01 14:00:32.941841] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000298D1542690>]
[2023-10-01 14:00:33.822703] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 14:01:31.726033] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000208603F0C50>]
[2023-10-01 14:01:31.728364] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002085D920E50>]
[2023-10-01 14:01:32.556169] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 14:01:37.876087] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 14:01:38.711032] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 14:02:51.729892] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000261B3961610>]
[2023-10-01 14:02:51.731910] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000261B21C9550>]
[2023-10-01 14:02:52.590224] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 14:03:56.872209] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 14:03:57.733505] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 15:03:49.712457] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000154A2AC2510>]
[2023-10-01 15:03:49.714457] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000154E4331F50>]
[2023-10-01 15:03:50.566346] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:04:27.350753] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:04:29.222235] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 15:04:30.245215] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 15:04:31.237484] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:04:32.229485] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:04:37.270192] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:04:37.692528] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.35294117647058826,
    0.17647058823529413,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says An Evacuate Immediately�warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency An Emergency Warning is�in place for Loch Sport�in Victoria.�Keep up to date with ABC Emergency The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A driver has been charged over a crash that killed two boys in Sydneys south
- The drivers lawyer said the driver may not be aware that the boys are dead
- The two boys, aged nine and ten, were in the car along with a nine-year-old girl when it crashed into a tree
- The boys later died at Sydney Childrens Hospital
- The driver has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct
- The driver remains in hospital and was due to face a bedside hearing, but it was adjourned until September 7
- The lawyer said the driver is in the early stages of recovery and under the influence of medication
- Police believe speed was a factor in the crash and are investigating whether street racing was also involved'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 're dead, lawyer says ',\n    ' Driver charged over horror crash that killed two b' at line 9")]
[2023-10-01 15:04:38.116207] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.35294117647058826,
    0.17647058823529413,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says An Evacuate Immediately�warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency An Emergency Warning is�in place for Loch Sport�in Victoria.�Keep up to date with ABC Emergency The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A driver has been charged over a crash that killed two boys in Sydneys south
- The drivers lawyer said the driver may not be aware that the boys are dead
- The two boys, aged nine and ten, were in the car along with a nine-year-old girl when it crashed into a tree
- The boys later died at Sydney Childrens Hospital
- The driver has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct
- The driver remains in hospital and was due to face a bedside hearing, but it was adjourned until September 7
- The lawyer said the driver is in the early stages of recovery and under the influence of medication
- Police believe speed was a factor in the crash and are investigating whether street racing was also involved'
    );
    ]
[2023-10-01 15:04:38.960071] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 15:04:39.795841] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:08:22.354649] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:08:24.184994] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 15:08:25.348386] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 15:08:26.372590] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:08:27.505118] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:08:30.423505] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:08:31.284011] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374',
    0.4166666666666667,
    0.16666666666666666,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Man dies in hospital after being found in critical condition outside Woodbridge home',
    ' Man dies in hospital after being found in critical condition outside Woodbridge home An Evacuate Immediately�warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency An Emergency Warning is�in place for Loch Sport�in Victoria.�Keep up to date with ABC Emergency A man found bleeding and critically injured outside a house in Perths east has died in hospital. The 23-year-old man�was found outside�a residence on Chatham Road in Woodbridge about 1:25am on Saturday. The man, from the nearby suburb of Midland,�was rushed to hospital where he underwent emergency surgery, but died that afternoon. The road was closed for much of the day as forensic police and other officers scoured the scene for evidence. A trail of dried blood could be seen leading to one of the houses on the street. A homicide investigation was underway. Detectives want�anyone with information, or CCTV or dash-cam footage of Chatham Road between 12:30am and 2am�to come forward. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A man was found outside a residence on Chatham Road in Woodbridge, Perth in critical condition.
- The 23-year-old man, from the nearby suburb of Midland, was rushed to the hospital.
- He underwent emergency surgery but unfortunately died later in the day.
- The road was closed for investigations as forensic police and officers gathered evidence.
- A trail of dried blood was found leading to one of the houses on the street.
- A homicide investigation is underway.
- Detectives are seeking information, CCTV footage, or dash-cam footage of Chatham Road between 12:30am and 2am.'
    );
    ]
[2023-10-01 15:08:32.123565] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 15:08:32.959656] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:08:33.805573] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'died',
    'The word died indicates a tragic loss of life, evoking strong emotions.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:34.647291] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:35.486185] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'critically injured',
    'The phrase critically injured suggests a severe and life-threatening condition, creating an emotional response.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:36.325253] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:37.166773] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'bleeding',
    'The word bleeding implies a severe injury and can elicit feelings of distress or concern.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:38.006922] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:38.853614] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'emergency surgery',
    'The term emergency surgery implies a critical and urgent medical procedure, potentially triggering anxiety or fear.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:39.695988] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:40.539646] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'homicide investigation',
    'The mention of a homicide investigation suggests a violent crime and can evoke strong emotions of shock, fear, and sadness.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:41.380458] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:42.228246] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'forensic police',
    'The term forensic police indicates the involvement of law enforcement in a criminal investigation, which can create a sense of seriousness and tension.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:43.071259] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:43.938063] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'closed',
    'The mention of the road being closed suggests disruption and potential danger, contributing to a sense of urgency or concern.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:44.776635] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:45.620161] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'evidence',
    'The mention of scouring the scene for evidence implies a crime or incident, which can create a sense of intrigue or unease.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:46.465573] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:08:47.309833] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Aboriginal and Torres Strait Islander peoples',
    'The acknowledgment of Aboriginal and Torres Strait Islander peoples recognizes their cultural significance and may evoke feelings of inclusivity or acknowledgement of historical injustice.',
    '10',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-01 15:08:48.150874] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 15:13:14.135287] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 15:13:14.978659] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 15:26:32.982451] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000263BAA4F410>]
[2023-10-01 15:26:32.983442] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000263BAA4ECD0>]
[2023-10-01 15:26:33.796006] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:27:00.017017] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:27:01.829165] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 15:27:02.837508] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 15:27:03.841426] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:27:04.890945] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:27:06.353258] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:27:06.776200] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.375,
    0.1875,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says An Evacuate Immediately�warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A man has been charged over a car crash that killed two boys in Sydneys south
- The boys, aged nine and ten, were in the car along with a nine-year-old girl when it crashed into a tree
- The boys later died at Sydney Childrens Hospital
- The man, Jimmy Martin Brito, has been charged with dangerous driving causing death and causing bodily harm by misconduct
- Britos lawyer, Fahim Arya, said his client may not be aware that the boys have died
- Brito is recovering from surgery and under the influence of medication
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 're dead, lawyer says ',\n    ' Driver charged over horror crash that killed two b' at line 9")]
[2023-10-01 15:27:07.181356] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.375,
    0.1875,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says An Evacuate Immediately�warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A man has been charged over a car crash that killed two boys in Sydneys south
- The boys, aged nine and ten, were in the car along with a nine-year-old girl when it crashed into a tree
- The boys later died at Sydney Childrens Hospital
- The man, Jimmy Martin Brito, has been charged with dangerous driving causing death and causing bodily harm by misconduct
- Britos lawyer, Fahim Arya, said his client may not be aware that the boys have died
- Brito is recovering from surgery and under the influence of medication
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    ]
[2023-10-01 15:27:08.002441] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 15:27:08.811857] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 15:28:31.480515] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:28:32.290348] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "10"
    ]
[2023-10-01 15:28:33.097032] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "10"
    ]
[2023-10-01 15:31:38.043314] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E25D2E0E10>]
[2023-10-01 15:31:38.044323] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E25D5CF410>]
[2023-10-01 15:31:38.911708] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:31:44.584933] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 15:31:45.438792] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "10"
    ]
[2023-10-01 15:31:46.299389] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "10"
    ]
[2023-10-01 15:34:16.083380] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000015177EBDCD0>]
[2023-10-01 15:34:16.084377] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000151761AB3D0>]
[2023-10-01 15:34:16.913469] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:34:36.738326] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 15:34:37.577732] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 15:35:24.338463] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001AA3F7EBA50>]
[2023-10-01 15:35:24.340075] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001AA60087A10>]
[2023-10-01 15:35:25.178464] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:36:14.041528] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C2F1B73790>]
[2023-10-01 15:36:14.043527] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C294254190>]
[2023-10-01 15:36:14.875127] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:36:16.546823] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 15:36:17.381078] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 15:37:23.496113] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000218101536D0>]
[2023-10-01 15:37:23.497106] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000218100D3710>]
[2023-10-01 15:37:24.348615] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:37:27.523951] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 15:37:28.398958] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 15:37:56.958086] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001684DD34750>]
[2023-10-01 15:37:56.959086] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001684C64F410>]
[2023-10-01 15:37:57.814165] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:38:01.367842] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 15:38:02.225004] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 17:36:36.998809] [] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000106DD753A90>]
[2023-10-01 17:36:36.999811] [] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000106DDB0C690>]
[2023-10-01 17:36:38.069645] [] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 17:36:57.922149] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.skynews.com.au/opinion/chris-kenny/donald-trump-debating-meghan-markle-would-revive-her-flatlining-career/video/f6f265b6eef36342284b84f02bf59abe"
    ]
[2023-10-01 17:37:00.174366] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 17:37:01.463935] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 17:37:02.630731] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.skynews.com.au/opinion/chris-kenny/donald-trump-debating-meghan-markle-would-revive-her-flatlining-career/video/f6f265b6eef36342284b84f02bf59abe"
    ]
[2023-10-01 17:37:03.944429] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.skynews.com.au/opinion/chris-kenny/donald-trump-debating-meghan-markle-would-revive-her-flatlining-career/video/f6f265b6eef36342284b84f02bf59abe"
    ]
[2023-10-01 17:37:07.104197] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.skynews.com.au/opinion/chris-kenny/donald-trump-debating-meghan-markle-would-revive-her-flatlining-career/video/f6f265b6eef36342284b84f02bf59abe"
    ]
[2023-10-01 17:37:08.046044] [] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.skynews.com.au/opinion/chris-kenny/donald-trump-debating-meghan-markle-would-revive-her-flatlining-career/video/f6f265b6eef36342284b84f02bf59abe',
    1.0,
    1.0,
    0, 
    NOW(),
    '',
    'Donald Trump debating Meghan Markle would �revive her flatlining career�',
    'Sky News host Jenna Clarke says former president Donald Trump doing a debate with Meghan Markle would �revive her flatlining career�. Read More Our Apps',
    '- Sky News host Jenna Clarke suggests that a debate between Donald Trump and Meghan Markle would help revive her career.
- The idea is that such a debate would bring attention and publicity to Meghan Markle, potentially boosting her career.
- It is implied that Meghan Markles career has been struggling or declining (referred to as "flatlining").
- The suggestion made by Jenna Clarke is supported by the belief that Donald Trumps involvement in the debate would draw significant attention.
- The article does not provide any information on the context or motivation behind the potential debate.
- Sky News host Jenna Clarke is presenting her opinion on the matter, which is that this debate would be beneficial for Meghan Markles career.
- The article does not provide any additional information or details about the situation.

(Note: The footer does not contain any relevant information and should be excluded from the summary.)'
    );
    ]
[2023-10-01 17:37:09.101437] [] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 17:37:10.017921] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.skynews.com.au/opinion/chris-kenny/donald-trump-debating-meghan-markle-would-revive-her-flatlining-career/video/f6f265b6eef36342284b84f02bf59abe"
    ]
[2023-10-01 17:37:10.922498] [] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'revive her flatlining career',
    'The phrase revive her flatlining career is emotionally charged and biased as it suggests that Meghan Markles career is failing or stagnating, and that a debate with Donald Trump would be the solution to revive it.',
    '11',
    0, 
    NOW(),
    ''
    );
    ]
[2023-10-01 17:37:11.854348] [] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-01 18:07:20.188752] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "None"
    ]
[2023-10-01 18:07:31.280271] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "None"
    ]
[2023-10-01 18:08:19.701065] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = ""
    ]
[2023-10-01 18:08:21.028957] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = ""
    ]
[2023-10-01 18:08:36.141204] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = ""
    ]
[2023-10-01 18:08:37.421207] [] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = ""
    ]
[2023-10-01 15:54:31.207241] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001576E00F050>]
[2023-10-01 15:54:31.208253] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001576B976290>]
[2023-10-01 15:54:32.042254] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:54:32.886399] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_Position
    WHERE 1=1
    ]
[2023-10-01 15:54:32.890146] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001576E00F050>]
[2023-10-01 15:54:32.891150] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001576B976290>]
[2023-10-01 15:55:41.185049] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000194F68C3010>]
[2023-10-01 15:55:41.187050] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000194F68C3710>]
[2023-10-01 15:55:42.060076] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:55:42.985361] [Daniel Ciccotosto-Camp] [SUCCESS] [DROP TABLE Politician_Position]
[2023-10-01 15:55:42.986392] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000194F68C3010>]
[2023-10-01 15:55:42.988422] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000194F68C3710>]
[2023-10-01 15:56:38.343469] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002F728073710>]
[2023-10-01 15:56:38.345149] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002F72814E190>]
[2023-10-01 15:56:39.208251] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 15:56:40.103899] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Politician_Position (
    ID INT,
    PositionNameCode VARCHAR(255), 
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (PositionNameCode) REFERENCES Politician_PositionNameCodes(NameCode)
);]
[2023-10-01 15:56:40.106898] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002F728073710>]
[2023-10-01 15:56:40.107896] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002F72814E190>]
[2023-10-01 17:54:02.298934] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001EE6CA93710>]
[2023-10-01 17:54:02.299935] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001EE6C5FA190>]
[2023-10-01 17:54:03.172637] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 17:55:06.560915] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-01 17:55:07.448697] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-01 17:56:57.266170] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002792D4F0C10>]
[2023-10-01 17:56:57.267180] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002797F638E10>]
[2023-10-01 17:56:58.109696] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-01 17:57:04.271058] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-10-01/man-found-critical-in-woodbridge-dies-in-hospital/102922374"
    ]
[2023-10-01 17:57:05.112241] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "10"
    ]
[2023-10-01 17:57:05.952082] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "10"
    ]
[2023-10-01 18:00:00.402070] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 18:00:02.229431] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 18:00:03.280534] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-01 18:00:04.365801] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 18:00:05.445792] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 18:00:09.087011] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-01 18:00:09.512820] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.3888888888888889,
    0.2777777777777778,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says A Watch and Act warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency A�Watch and Act is�in place for Bawley Point in NSW.�Keep up to date with ABC Emergency A Watch and Act warning is in place for Merrijig, Iguana Creek, Stockdale and surrounds in Victoria.�Keep up to date with ABC Emergency The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- Two boys were killed in a car crash in Sydneys south on Friday.
- The driver, Jimmy Martin Brito, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct.
- Lawyer Fahim Arya stated that Brito may not be aware that the two boys have died.
- Brito is currently in hospital recovering from surgery and under the influence of medication.
- The boys mother is distraught and distressed by the loss of her sons.
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 're dead, lawyer says ',\n    ' Driver charged over horror crash that killed two b' at line 9")]
[2023-10-01 18:00:09.943851] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.3888888888888889,
    0.2777777777777778,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says A Watch and Act warning is�in place for Briagolong, Culloden, Moornapa and Cobbannah in Victoria. Keep up to date with ABC Emergency A�Watch and Act is�in place for Bawley Point in NSW.�Keep up to date with ABC Emergency A Watch and Act warning is in place for Merrijig, Iguana Creek, Stockdale and surrounds in Victoria.�Keep up to date with ABC Emergency The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- Two boys were killed in a car crash in Sydneys south on Friday.
- The driver, Jimmy Martin Brito, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct.
- Lawyer Fahim Arya stated that Brito may not be aware that the two boys have died.
- Brito is currently in hospital recovering from surgery and under the influence of medication.
- The boys mother is distraught and distressed by the loss of her sons.
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    ]
[2023-10-01 18:00:10.792580] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-01 18:00:11.634502] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 11:23:38.584543] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000128B3B41110>]
[2023-10-04 11:23:38.585534] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000128B3AF2A90>]
[2023-10-04 11:23:39.044428] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 11:23:39.974728] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-10-04 11:23:40.012258] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000128B3B41110>]
[2023-10-04 11:23:40.013340] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000128B3AF2A90>]
[2023-10-04 11:24:14.489746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001483AF162D0>]
[2023-10-04 11:24:14.491739] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001483ADE1110>]
[2023-10-04 11:24:14.950751] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 11:24:15.442174] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_PositionNameCodes
    WHERE 1=1
    ]
[2023-10-04 11:24:15.444174] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001483AF162D0>]
[2023-10-04 11:24:15.445176] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001483ADE1110>]
[2023-10-04 15:29:38.409389] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D0C7002590>]
[2023-10-04 15:29:38.410057] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D0C70636D0>]
[2023-10-04 15:29:38.860409] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 15:29:39.325413] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-04 15:29:39.782321] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 15:29:40.009989] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-10-04 15:29:40.243052] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:40.700404] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-04 15:29:41.158071] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'Donald',
    'Trump',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'https://i.natgeofe.com/k/5e4ea67e-2219-4de4-9240-2992faef0cb6/trump-portrait.jpg',
    'another more general summary here'
    );
    ]
[2023-10-04 15:29:41.642657] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-04 15:29:42.100957] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:42.557861] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-04 15:29:43.014196] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    5,
    20,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:43.468799] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-04 15:29:43.932188] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '20',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:44.387605] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 15:29:44.394609] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D0C7002590>]
[2023-10-04 15:29:44.395604] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D0C70636D0>]
[2023-10-04 16:15:13.593930] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025855F8B790>]
[2023-10-04 16:15:13.595925] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000258786D04D0>]
[2023-10-04 16:15:14.063806] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 16:15:19.225194] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-30/canberra-voice-no-campaigners-rally-ahead-of-election/102920672"
    ]
[2023-10-04 16:15:19.738491] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "12"
    ]
[2023-10-04 16:15:20.200485] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "12"
    ]
[2023-10-04 16:15:58.061993] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:15:59.821048] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-04 16:16:00.507628] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-04 16:16:01.256232] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:16:01.991320] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:16:05.613351] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:16:05.922404] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.3333333333333333,
    0.2,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A driver has been charged for a crash that killed two boys in Sydneys south.
- The boys were aged nine and ten, and a nine-year-old girl was also in the car.
- The car crashed into a tree on The Grand Parade in Monterey.
- The boys were taken to Sydney Childrens Hospital where they later died.
- The girl suffered minor injuries and was taken to the same hospital.
- The driver, Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct.
- Britos lawyer, Fahim Arya, said that his client may not be aware that the boys have died.
- Brito, who was also injured in the crash, remains in the hospital and his bedside hearing has been adjourned.
- Arya stated that Brito is in the early stages of recovery and under the influence of medication.
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 're dead, lawyer says ',\n    ' Driver charged over horror crash that killed two b' at line 9")]
[2023-10-04 16:16:06.188785] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.3333333333333333,
    0.2,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A driver has been charged for a crash that killed two boys in Sydneys south.
- The boys were aged nine and ten, and a nine-year-old girl was also in the car.
- The car crashed into a tree on The Grand Parade in Monterey.
- The boys were taken to Sydney Childrens Hospital where they later died.
- The girl suffered minor injuries and was taken to the same hospital.
- The driver, Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct.
- Britos lawyer, Fahim Arya, said that his client may not be aware that the boys have died.
- Brito, who was also injured in the crash, remains in the hospital and his bedside hearing has been adjourned.
- Arya stated that Brito is in the early stages of recovery and under the influence of medication.
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    ]
[2023-10-04 16:16:06.805420] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 16:16:07.353437] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 11:23:38.584543] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000128B3B41110>]
[2023-10-04 11:23:38.585534] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000128B3AF2A90>]
[2023-10-04 11:23:39.044428] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 11:23:39.974728] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-10-04 11:23:40.012258] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000128B3B41110>]
[2023-10-04 11:23:40.013340] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000128B3AF2A90>]
[2023-10-04 11:24:14.489746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001483AF162D0>]
[2023-10-04 11:24:14.491739] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001483ADE1110>]
[2023-10-04 11:24:14.950751] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 11:24:15.442174] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_PositionNameCodes
    WHERE 1=1
    ]
[2023-10-04 11:24:15.444174] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001483AF162D0>]
[2023-10-04 11:24:15.445176] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001483ADE1110>]
[2023-10-04 15:29:38.409389] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D0C7002590>]
[2023-10-04 15:29:38.410057] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D0C70636D0>]
[2023-10-04 15:29:38.860409] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 15:29:39.325413] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-04 15:29:39.782321] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 15:29:40.009989] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-10-04 15:29:40.243052] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:40.700404] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-04 15:29:41.158071] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'Donald',
    'Trump',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'https://i.natgeofe.com/k/5e4ea67e-2219-4de4-9240-2992faef0cb6/trump-portrait.jpg',
    'another more general summary here'
    );
    ]
[2023-10-04 15:29:41.642657] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-04 15:29:42.100957] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:42.557861] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-04 15:29:43.014196] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    5,
    20,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:43.468799] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-04 15:29:43.932188] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '20',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 15:29:44.387605] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 15:29:44.394609] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D0C7002590>]
[2023-10-04 15:29:44.395604] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D0C70636D0>]
[2023-10-04 16:15:13.593930] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000025855F8B790>]
[2023-10-04 16:15:13.595925] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000258786D04D0>]
[2023-10-04 16:15:14.063806] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 16:15:19.225194] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-09-30/canberra-voice-no-campaigners-rally-ahead-of-election/102920672"
    ]
[2023-10-04 16:15:19.738491] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_KeyTable
    WHERE ID_Article = "12"
    ]
[2023-10-04 16:15:20.200485] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article_ArticleBias
    WHERE ID_Article = "12"
    ]
[2023-10-04 16:15:58.061993] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:15:59.821048] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-04 16:16:00.507628] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-04 16:16:01.256232] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:16:01.991320] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:16:05.613351] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 16:16:05.922404] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.3333333333333333,
    0.2,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A driver has been charged for a crash that killed two boys in Sydneys south.
- The boys were aged nine and ten, and a nine-year-old girl was also in the car.
- The car crashed into a tree on The Grand Parade in Monterey.
- The boys were taken to Sydney Childrens Hospital where they later died.
- The girl suffered minor injuries and was taken to the same hospital.
- The driver, Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct.
- Britos lawyer, Fahim Arya, said that his client may not be aware that the boys have died.
- Brito, who was also injured in the crash, remains in the hospital and his bedside hearing has been adjourned.
- Arya stated that Brito is in the early stages of recovery and under the influence of medication.
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    : 
 error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 're dead, lawyer says ',\n    ' Driver charged over horror crash that killed two b' at line 9")]
[2023-10-04 16:16:06.188785] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440',
    0.3333333333333333,
    0.2,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'Driver charged over horror crash that killed two boys may not be aware they're dead, lawyer says ',
    ' Driver charged over horror crash that killed two boys may not be aware theyre dead, lawyer says The man charged over the horror crash that killed two boys in Sydneys south on Friday may not be aware they are dead, his lawyer said. The two boys, aged nine and 10, were in the car along with a nine-year-old girl when it crashed into a tree on The Grand Parade in Monterey just before 10pm. The boys were taken to Sydney Childrens Hospital at Randwick where they later died. The girl suffered minor injuries and was taken to the same hospital.� Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct. Lawyer Fahim Arya said outside Parramatta Bail Court his client spoke to the mother of the two boys on Sunday morning. "I dont know if he knows the two little ones have lost their lives," Mr Arya said. Mr Brito, who was also injured in the crash, remains in hospital and was due to face a bedside hearing on Sunday, but that was adjourned until September 7. Mr Arya said his client was recovering from surgery and under the influence of medication. "My client is in the early stages of recovery," Mr Arya said. "[The boys mother] is distraught and distressed having lost her two boys." Police believe speed was a factor in the crash and are investigating whether street racing was also involved. We acknowledge Aboriginal and Torres Strait Islander peoples as the First Australians and Traditional Custodians of the lands where we live, learn, and work. This service may include material from Agence France-Presse (AFP), APTN, Reuters, AAP, CNN and the BBC World Service which is copyright and cannot be reproduced. AEST = Australian Eastern Standard Time which is 10 hours ahead of GMT (Greenwich Mean Time)',
    '- A driver has been charged for a crash that killed two boys in Sydneys south.
- The boys were aged nine and ten, and a nine-year-old girl was also in the car.
- The car crashed into a tree on The Grand Parade in Monterey.
- The boys were taken to Sydney Childrens Hospital where they later died.
- The girl suffered minor injuries and was taken to the same hospital.
- The driver, Jimmy Martin Brito, 33, has been charged with two counts of dangerous driving causing death and one count of causing bodily harm by misconduct.
- Britos lawyer, Fahim Arya, said that his client may not be aware that the boys have died.
- Brito, who was also injured in the crash, remains in the hospital and his bedside hearing has been adjourned.
- Arya stated that Brito is in the early stages of recovery and under the influence of medication.
- Police believe speed was a factor in the crash and are investigating whether street racing was involved.'
    );
    ]
[2023-10-04 16:16:06.805420] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 16:16:07.353437] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.abc.net.au/news/2023-08-27/bail-hearing-suspended-man-charged-sydney-crash-boys-died/102781440"
    ]
[2023-10-04 14:06:00.449010] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002ACF2EFF950>]
[2023-10-04 14:06:00.449010] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002ACF2CE58D0>]
[2023-10-04 14:06:00.902700] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:06:01.143807] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:06:01.370209] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (1, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav');
    WHERE 1=1
    ]
[2023-10-04 14:06:01.378390] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002ACF2EFF950>]
[2023-10-04 14:06:01.387778] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002ACF2CE58D0>]
[2023-10-04 14:06:39.985108] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020D39231F10>]
[2023-10-04 14:06:39.985108] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020D39231D50>]
[2023-10-04 14:06:40.448762] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:06:40.458741] [Manav Trivedi] [FAIL] [Unable to find file path: PRO-82_Polling]
[2023-10-04 14:06:40.463208] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020D39231F10>]
[2023-10-04 14:06:40.479308] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020D39231D50>]
[2023-10-04 14:06:54.472621] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002169EE26390>]
[2023-10-04 14:06:54.488168] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002169E554690>]
[2023-10-04 14:06:54.948944] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:06:54.950054] [Manav Trivedi] [FAIL] [Unable to find file path: PRO-82_Polling]
[2023-10-04 14:06:54.966611] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002169EE26390>]
[2023-10-04 14:06:54.969288] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002169E554690>]
[2023-10-04 14:07:05.663545] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000016C08A26590>]
[2023-10-04 14:07:05.663545] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000016C0867FA10>]
[2023-10-04 14:07:06.135512] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:07:06.388949] [Manav Trivedi] [FAIL] [Unable to execute sql 
 CREATE TABLE Polling (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Article INT,
    Question VARCHAR(1000),
    OptionFirst VARCHAR(1000),
    OptionSecond VARCHAR(1000),
    OptionThird VARCHAR(1000),
    OptionFourth VARCHAR(1000),
    VotesFirst INT,
    VotesSecond INT,
    VotesThird INT,
    VotesFourth INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1050, "Table 'Polling' already exists")]
[2023-10-04 14:07:06.641654] [Manav Trivedi] [SUCCESS] [CREATE TABLE Polling (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Article INT,
    Question VARCHAR(1000),
    OptionFirst VARCHAR(1000),
    OptionSecond VARCHAR(1000),
    OptionThird VARCHAR(1000),
    OptionFourth VARCHAR(1000),
    VotesFirst INT,
    VotesSecond INT,
    VotesThird INT,
    VotesFourth INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-10-04 14:07:06.656668] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000016C08A26590>]
[2023-10-04 14:07:06.673864] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000016C0867FA10>]
[2023-10-04 14:10:19.444449] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F701231D50>]
[2023-10-04 14:10:19.460015] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F7005685D0>]
[2023-10-04 14:10:19.905336] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:10:20.146653] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:10:20.371810] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav');
    WHERE 1=1
    ]
[2023-10-04 14:10:20.371810] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F701231D50>]
[2023-10-04 14:10:20.394240] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F7005685D0>]
[2023-10-04 14:12:22.612515] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000022350753F50>]
[2023-10-04 14:12:22.628314] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000022350752C10>]
[2023-10-04 14:12:23.121556] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:12:23.385340] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:12:23.618911] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav');
    WHERE 1=1
    ]
[2023-10-04 14:12:23.618911] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000022350753F50>]
[2023-10-04 14:12:23.636379] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000022350752C10>]
[2023-10-04 14:13:06.250583] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027521F31F10>]
[2023-10-04 14:13:06.266109] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027521F31D50>]
[2023-10-04 14:13:06.776871] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:13:07.018388] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:13:07.260816] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav')
    WHERE 1=1
    ]
[2023-10-04 14:13:07.276451] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000027521F31F10>]
[2023-10-04 14:13:07.293816] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000027521F31D50>]
[2023-10-04 14:13:37.605592] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C3DEB31D50>]
[2023-10-04 14:13:37.605592] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C3DE2985D0>]
[2023-10-04 14:13:38.092140] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:13:38.336763] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:13:38.577076] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav')
    WHERE 1=1
    ]
[2023-10-04 14:13:38.588602] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C3DEB31D50>]
[2023-10-04 14:13:38.597804] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C3DE2985D0>]
[2023-10-04 14:16:01.283159] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C06BA53F50>]
[2023-10-04 14:16:01.302022] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C06BA52C10>]
[2023-10-04 14:16:01.817243] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:16:02.067590] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:16:02.313577] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav')
    WHERE 1=1
    ]
[2023-10-04 14:16:02.329133] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C06BA53F50>]
[2023-10-04 14:16:02.344185] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C06BA52C10>]
[2023-10-04 14:44:12.453304] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000270402D5610>]
[2023-10-04 14:44:12.468997] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027040926790>]
[2023-10-04 14:44:12.926048] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:44:13.385885] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 

    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),

    'Manav Trivedi',

    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
]
[2023-10-04 20:02:10.191693] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 20:02:11.465297] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 

[2023-10-04 14:44:13.848194] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 14:44:14.075593] [Manav Trivedi] [FAIL] [error parsing SQL statement 

    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),

    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-10-04 20:02:11.921898] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 

    'Manav Trivedi'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-10-04 14:44:14.321471] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 

    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),

    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:12.822721] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-04 20:02:13.728435] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 

    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:14.780337] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-04 14:44:15.703979] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 

    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),


    'Manav Trivedi',

    '\img\imghere',
    'another more general summary here'
    );
]
[2023-10-04 20:02:15.339230] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-04 20:02:16.245934] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 

[2023-10-04 14:44:16.161304] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-04 14:44:16.627168] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 

    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),

    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:17.151267] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-04 20:02:18.740157] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    9,
    30,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:19.663117] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-04 20:02:20.122953] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Comments(ID_Article, Author, Comment, InProdution, InsertedAt, InsertedBy)
    VALUES (
    '30',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1054, "Unknown column 'InProdution' in 'field list'")]
[2023-10-04 20:02:20.576015] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(ID_Article, Author, Comment, InProdution, InsertedAt, InsertedBy)
    VALUES (
    '30',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:21.490575] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-04 20:02:22.394649] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '30',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:23.302752] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 20:02:23.305769] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000144A60ED2D0>]
[2023-10-04 20:02:23.305769] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000144A6870D90>]
[2023-10-04 20:02:49.232410] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000023FDD6FF990>]
[2023-10-04 20:02:49.233410] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000023FDFB06B90>]
[2023-10-04 20:02:51.144928] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:02:52.018919] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-04 20:02:52.930716] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 20:02:53.394747] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Comments(ID_Article, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    '31',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1452, 'Cannot add or update a child row: a foreign key constraint fails (`newscuration`.`Comments`, CONSTRAINT `Comments_ibfk_1` FOREIGN KEY (`ID_Article`) REFERENCES `Politician` (`ID`))')]
[2023-10-04 20:02:53.835681] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(ID_Article, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    '31',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:54.721863] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-04 20:02:55.617363] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '31',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:02:56.484144] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 20:03:49.016740] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021307E19110>]
[2023-10-04 20:03:49.018738] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021309CC6290>]
[2023-10-04 20:03:49.902777] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:03:50.811971] [Daniel Ciccotosto-Camp] [SUCCESS] [-- CREATE TABLE Comments (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Article INT,
--     Author VARCHAR(255),
--     Comment VARCHAR(2000),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
-- FOREIGN KEY (ID_Article) REFERENCES Politician(ID)
-- );

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

DROP TABLE Comments]
[2023-10-04 20:03:50.813978] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021307E19110>]
[2023-10-04 20:03:50.813978] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021309CC6290>]
[2023-10-04 20:04:05.832637] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001FD8ED69110>]
[2023-10-04 20:04:05.833626] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001FD90C16290>]
[2023-10-04 20:04:06.682698] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:04:07.561861] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Comments (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Article INT,
    Author VARCHAR(255),
    Comment VARCHAR(2000),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

-- DROP TABLE Comments]
[2023-10-04 20:04:07.563857] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001FD8ED69110>]
[2023-10-04 20:04:07.564856] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001FD90C16290>]
[2023-10-04 20:04:18.217698] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000016F4546F990>]
[2023-10-04 20:04:18.218650] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000016F47876B90>]
[2023-10-04 20:04:19.086404] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:04:19.944745] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-04 20:04:20.792609] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 20:04:21.649745] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(ID_Article, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    '32',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:04:22.490575] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-04 20:04:23.338943] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
=======
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:17.088069] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-04 14:44:17.546443] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    4,
    17,
    1, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:17.997387] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-04 14:44:18.460074] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:18.938784] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-04 14:44:19.390368] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',

    '32',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:04:24.183708] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 20:22:51.917175] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001B0439CF750>]
[2023-10-04 20:22:51.918171] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001B044FF8D90>]
[2023-10-04 20:22:52.739881] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:24:37.077779] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(ID_Article, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'John Doe',
    'Test Comment',
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:24:37.906788] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-04 20:25:44.973925] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D76FD318D0>]
[2023-10-04 20:25:44.974925] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D74D6518D0>]
[2023-10-04 20:25:45.811426] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:25:50.675284] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(ID_Article, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'John Doe',
    'Test Comment',
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-04 20:25:51.513813] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-04 20:27:03.927891] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Comments
    WHERE ID_Article = 1
    ]
[2023-10-04 20:27:52.776901] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001A9EE7A1F50>]
[2023-10-04 20:27:52.779000] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001A9EE56B810>]
[2023-10-04 20:27:53.628433] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:27:58.446835] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Comments
    WHERE ID_Article = 1
    ]
[2023-10-04 20:29:03.724536] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Comments
    WHERE ID_Article = 1
    ]

    '17',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:19.870583] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 14:44:19.882644] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000270402D5610>]
[2023-10-04 14:44:19.886104] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000027040926790>]

[2023-10-07 21:01:28.649519] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F729BBF9D0>]
[2023-10-07 21:01:28.650328] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F72B4968D0>]
[2023-10-07 21:01:29.473354] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:01:30.402890] [Daniel Ciccotosto-Camp] [SUCCESS] [-- CREATE TABLE Comments (
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     ID_Article INT,
--     Author VARCHAR(255),
--     Comment VARCHAR(2000),
--     InProduction BOOLEAN,
--     InsertedAt DATETIME,
--     InsertedBy VARCHAR(50),
-- FOREIGN KEY (ID_Article) REFERENCES Article(ID)
-- );

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

DROP TABLE Comments]
[2023-10-07 21:01:30.406911] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F729BBF9D0>]
[2023-10-07 21:01:30.407908] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F72B4968D0>]
[2023-10-07 21:02:07.289611] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002D73246F9D0>]
[2023-10-07 21:02:07.290604] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002D733D468D0>]
[2023-10-07 21:02:08.160596] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:02:08.609725] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 CREATE TABLE Comments (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(1000),
    Author VARCHAR(255),
    Comment VARCHAR(2000),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

-- DROP TABLE Comments with error (1072, "Key column 'ID_Article' doesn't exist in table")]
[2023-10-07 21:02:09.045645] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Comments (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(1000),
    Author VARCHAR(255),
    Comment VARCHAR(2000),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

-- DROP TABLE Comments]
[2023-10-07 21:02:09.048381] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002D73246F9D0>]
[2023-10-07 21:02:09.049139] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002D733D468D0>]
[2023-10-07 21:05:49.253123] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000260D86E9090>]
[2023-10-07 21:05:49.254170] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000260D8826190>]
[2023-10-07 21:05:50.113756] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:05:50.980074] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-07 21:05:51.841235] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-07 21:05:52.273984] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-10-07 21:05:52.708293] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:05:53.129824] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-10-07 21:05:53.561947] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-07 21:05:53.563939] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:05:54.430860] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-10-07 21:05:55.298037] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-07 21:05:55.727003] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-07 21:05:56.148786] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:05:56.577301] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-07 21:05:57.017694] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-07 21:05:57.018694] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:05:57.877054] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    13,
    46,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:05:58.756242] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-07 21:05:59.186511] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Comments(URL, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Comments' doesn't exist")]
[2023-10-07 21:05:59.627181] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(URL, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:06:00.056465] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Comments;
    : 
 error (1146, "Table 'newscuration.Comments' doesn't exist")]
[2023-10-07 21:06:00.493175] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-07 21:06:00.494172] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:06:01.390348] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '46',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:06:02.251774] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-07 21:06:02.255930] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000260D86E9090>]
[2023-10-07 21:06:02.256930] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000260D8826190>]
[2023-10-07 21:06:39.900572] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002113072F150>]
[2023-10-07 21:06:39.901487] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000211329E6890>]
[2023-10-07 21:06:40.760630] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:06:41.190818] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 CREATE TABLE Comments (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(1000),
    Author VARCHAR(255),
    Comment VARCHAR(2000),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

-- DROP TABLE Comments with error (1072, "Key column 'ID_Article' doesn't exist in table")]
[2023-10-07 21:06:41.604073] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Comments (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(1000),
    Author VARCHAR(255),
    Comment VARCHAR(2000),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

-- DROP TABLE Comments]
[2023-10-07 21:06:41.607477] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002113072F150>]
[2023-10-07 21:06:41.610501] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000211329E6890>]
[2023-10-07 21:06:54.987472] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000208CD9336D0>]
[2023-10-07 21:06:54.988488] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000208CD7B6890>]
[2023-10-07 21:06:56.536423] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:06:57.417056] [Daniel Ciccotosto-Camp] [SUCCESS] [CREATE TABLE Comments (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    URL VARCHAR(1000),
    Author VARCHAR(255),
    Comment VARCHAR(2000),
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50)
);

-- inserted with the following command:
-- python .\inf\transactionDataClient.py --DDLFromFile PRO-84.sql

-- DROP TABLE Comments]
[2023-10-07 21:06:57.418975] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000208CD9336D0>]
[2023-10-07 21:06:57.419973] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000208CD7B6890>]
[2023-10-07 21:07:05.738930] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000193DE420D90>]
[2023-10-07 21:07:05.739846] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000193E02A6190>]
[2023-10-07 21:07:06.559232] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:07:07.393236] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-07 21:07:08.221172] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-07 21:07:08.629660] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-10-07 21:07:09.035810] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:07:09.451417] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-10-07 21:07:09.864341] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-07 21:07:09.866338] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:07:10.721316] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-10-07 21:07:11.549109] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-07 21:07:11.965222] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-07 21:07:12.385810] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:07:12.804594] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-07 21:07:13.214040] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-07 21:07:13.216229] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:07:14.049866] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    14,
    48,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:07:14.881380] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-07 21:07:15.714213] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(URL, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:07:16.540850] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-07 21:07:17.370916] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '48',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:07:18.258634] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-07 21:07:18.261634] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000193DE420D90>]
[2023-10-07 21:07:18.261634] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000193E02A6190>]
[2023-10-07 21:15:49.584194] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F503FB0D90>]
[2023-10-07 21:15:49.585841] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F505E36190>]
[2023-10-07 21:15:50.447418] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:15:51.289310] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-07 21:15:52.111530] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-07 21:15:52.517835] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-10-07 21:15:52.925087] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:15:53.343657] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    : 
 error (1146, "Table 'newscuration.Politician_PositionNameCodes' doesn't exist")]
[2023-10-07 21:15:53.757130] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-07 21:15:53.759430] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:15:54.656163] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-10-07 21:15:55.539422] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-07 21:15:55.958011] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-07 21:15:56.364732] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:15:56.780821] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-07 21:15:57.204150] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-07 21:15:57.206757] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-07 21:15:58.027135] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    15,
    50,
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:15:58.898552] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-07 21:15:59.723307] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(URL, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    'Joe Mama',
    'I am writing a comment on this ',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:16:00.561536] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-07 21:16:01.398034] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '50',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:16:02.230691] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-07 21:16:02.233688] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F503FB0D90>]
[2023-10-07 21:16:02.234751] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F505E36190>]
[2023-10-07 21:16:31.440481] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001AB58C4B690>]
[2023-10-07 21:16:31.442470] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001AB59753E90>]
[2023-10-07 21:16:32.315306] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:40:58.446715] [Daniel Ciccotosto-Camp] [FAIL] [error building sql statement with error (1054, "Unknown column 'examplewebsite.com' in 'where clause'")]
[2023-10-07 21:40:58.880872] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Comments
    WHERE URL = examplewebsite.com
    ]
[2023-10-07 21:42:07.876675] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001CDCE084ED0>]
[2023-10-07 21:42:07.877669] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001CDCDC4A710>]
[2023-10-07 21:42:08.746823] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-07 21:42:17.975604] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Comments
    WHERE URL = 'examplewebsite.com'
    ]
[2023-10-07 21:42:30.705143] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Comments(URL, Author, Comment, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'examplewebsite.com',
    'John Doe',
    'Test Comment',
    1, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-07 21:42:31.572140] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Comments;
    ]
[2023-10-04 20:58:23.177393] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021A81445B90>]
[2023-10-04 20:58:23.178353] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021AFEFB6290>]
[2023-10-04 20:58:24.064718] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:58:24.934672] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-04 20:58:24.938672] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021A81445B90>]
[2023-10-04 20:58:24.939678] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021AFEFB6290>]
[2023-10-04 21:04:23.341862] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000022F40585B90>]
[2023-10-04 21:04:23.342862] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000022F3E126290>]
[2023-10-04 21:04:24.204126] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:04:24.632707] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 ALTER TABLE Politician
ADD Byline VARCHAR(400),
ADD Political_Position VARCHAR(1000), 
ADD Party VARCHAR(1000), 
ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

CREATE TABLE Politician_CampaignPolicies(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    PolicyNameTitle VARCHAR(1000),
    PolicyInfo VARCHAR(4000)
) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Politician_CampaignPolicies(\n    ID INT AUTO_INCREMENT PRIMARY KEY,' at line 7")]
[2023-10-04 21:04:25.062274] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD Byline VARCHAR(400),
ADD Political_Position VARCHAR(1000), 
ADD Party VARCHAR(1000), 
ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

CREATE TABLE Politician_CampaignPolicies(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    PolicyNameTitle VARCHAR(1000),
    PolicyInfo VARCHAR(4000)
)]
[2023-10-04 21:04:25.065284] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000022F40585B90>]
[2023-10-04 21:04:25.065284] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000022F3E126290>]
[2023-10-04 21:04:38.090551] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D425076290>]
[2023-10-04 21:04:38.092490] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D4274D5B90>]
[2023-10-04 21:04:38.942746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:04:39.835849] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD Byline VARCHAR(400),
ADD Political_Position VARCHAR(1000), 
ADD Party VARCHAR(1000), 
ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )]
[2023-10-04 21:04:39.838843] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D425076290>]
[2023-10-04 21:04:39.839849] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D4274D5B90>]
[2023-10-04 21:04:51.281836] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001BBA9855B90>]
[2023-10-04 21:04:51.281836] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001BBA73F6290>]
[2023-10-04 21:04:52.149003] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:04:53.049531] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

CREATE TABLE Politician_CampaignPolicies(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    PolicyNameTitle VARCHAR(1000),
    PolicyInfo VARCHAR(4000)
)]
[2023-10-04 21:04:53.052052] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001BBA9855B90>]
[2023-10-04 21:04:53.052052] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001BBA73F6290>]
[2023-10-04 21:06:27.547478] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001830C4A5B90>]
[2023-10-04 21:06:27.548467] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001830A046290>]
[2023-10-04 21:06:28.415071] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:06:28.850190] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE Politician_Position\n\n-- inserted with the following:\n--  python .\\inf' at line 16")]
[2023-10-04 21:06:29.284270] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:06:29.288357] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001830C4A5B90>]
[2023-10-04 21:06:29.289342] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001830A046290>]
[2023-10-04 21:06:39.160664] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000015728634D90>]
[2023-10-04 21:06:39.162666] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001572AC9A110>]
[2023-10-04 21:06:40.076958] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:06:40.514134] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
-- DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL with error (3730, "Cannot drop table 'Politician_PositionNameCodes' referenced by a foreign key constraint 'Politician_Position_ibfk_1' on table 'Politician_Position'.")]
[2023-10-04 21:06:40.947878] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
-- DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:06:40.951889] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000015728634D90>]
[2023-10-04 21:06:40.952900] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001572AC9A110>]
[2023-10-04 21:07:04.187822] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C8FAA84D90>]
[2023-10-04 21:07:04.188980] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C8FD08A110>]
[2023-10-04 21:07:05.095659] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:07:06.005608] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

-- DROP TABLE Politician_PositionNameCodes
DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:07:06.007618] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C8FAA84D90>]
[2023-10-04 21:07:06.008607] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C8FD08A110>]
[2023-10-04 21:07:16.165491] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000029BADB34D90>]
[2023-10-04 21:07:16.166500] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000029BB02CA110>]
[2023-10-04 21:07:17.027545] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:07:17.923034] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
-- DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:07:17.927188] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000029BADB34D90>]
[2023-10-04 21:07:17.928190] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000029BB02CA110>]
[2023-10-05 07:03:03.280475] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D397C54D90>]
[2023-10-05 07:03:03.282466] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D397E331D0>]
[2023-10-05 07:03:03.893076] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 07:03:04.521087] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

-- DROP TABLE Politician_Position
-- DROP TABLE Politician_PositionNameCodes

ALTER TABLE Politician
DROP COLUMN COUNTRY

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-05 07:03:04.525088] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D397C54D90>]
[2023-10-05 07:03:04.527092] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D397E331D0>]
[2023-10-05 07:15:39.090979] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001847FAE3A10>]
[2023-10-05 07:15:39.092524] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001847FCBB410>]
[2023-10-05 07:15:39.675136] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 07:15:40.317235] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

-- DROP TABLE Politician_Position
-- DROP TABLE Politician_PositionNameCodes

ALTER TABLE Politician_CampaignPolicies
ADD InProduction BOOLEAN,
ADD InsertedAt DATETIME,
ADD InsertedBy VARCHAR(50)

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-05 07:15:40.324325] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001847FAE3A10>]
[2023-10-05 07:15:40.325325] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001847FCBB410>]
[2023-10-05 07:28:51.051446] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002A5C8AE5990>]
[2023-10-05 07:28:51.053395] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002A5CA8B9810>]
[2023-10-05 07:28:51.633056] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 07:28:52.278956] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 07:28:52.839772] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 07:28:53.324633] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    : 
 error (1054, "Unknown column 'Politicial_Position' in 'field list'")]
[2023-10-05 07:28:53.635657] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 07:28:54.177231] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 07:28:54.533190] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-05 07:28:54.825536] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:55.152090] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-05 07:28:55.558631] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-05 07:28:55.561638] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-05 07:28:56.170648] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:56.845143] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 07:28:57.569661] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:58.195800] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 07:28:58.807036] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '33',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:59.549184] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 07:28:59.557660] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002A5C8AE5990>]
[2023-10-05 07:28:59.559730] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002A5CA8B9810>]
[2023-10-05 17:54:09.356743] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027D86B5BA10>]
[2023-10-05 17:54:09.359748] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027D86E49110>]
[2023-10-05 17:54:10.016250] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:54:11.028789] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 17:54:11.667153] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 17:54:11.967645] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    : 
 error (1054, "Unknown column 'Politicial_Position' in 'field list'")]
[2023-10-05 17:54:12.240324] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 17:54:13.004080] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 17:54:13.808783] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:54:14.512813] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 17:54:15.226429] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:54:15.885435] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 17:54:18.295482] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '34',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:54:19.334743] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 17:55:49.606446] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000262E9945990>]
[2023-10-05 17:55:49.609445] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000262E9AB3090>]
[2023-10-05 17:55:50.234381] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:55:51.097897] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 17:55:52.026768] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 17:55:52.327709] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    : 
 error (1054, "Unknown column 'Politicial_Position' in 'field list'")]
[2023-10-05 17:55:52.633878] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 17:55:53.554660] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 17:55:54.151672] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:55:54.780634] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 17:55:55.356968] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:55:55.917565] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 17:55:56.533038] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '35',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:55:57.130134] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 17:55:57.137116] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000262E9945990>]
[2023-10-05 17:55:57.139123] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000262E9AB3090>]
[2023-10-05 17:56:39.310296] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000204446B87D0>]
[2023-10-05 17:56:39.312262] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000204446B9110>]
[2023-10-05 17:56:39.942061] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:56:40.546514] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-05 17:56:40.565504] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000204446B87D0>]
[2023-10-05 17:56:40.567573] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000204446B9110>]
[2023-10-05 17:59:02.262447] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F54FF05990>]
[2023-10-05 17:59:02.264429] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F550073090>]
[2023-10-05 17:59:03.003031] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:59:03.917151] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 17:59:04.838960] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 17:59:05.557264] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Political_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 17:59:06.127109] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 17:59:07.091378] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:59:07.603606] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 17:59:08.212526] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:59:09.127319] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 17:59:09.958802] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '36',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:59:10.675287] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 17:59:10.683064] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F54FF05990>]
[2023-10-05 17:59:10.685347] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F550073090>]
[2023-10-05 18:49:38.111467] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000274A86E87D0>]
[2023-10-05 18:49:38.111467] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000274A86E9110>]
[2023-10-05 18:49:38.951300] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 18:49:41.048910] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-10-05 18:49:41.134786] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000274A86E87D0>]
[2023-10-05 18:49:41.135079] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000274A86E9110>]
[2023-10-05 18:52:00.790514] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021134B85990>]
[2023-10-05 18:52:00.792282] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021134CF3090>]
[2023-10-05 18:52:01.641119] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 18:52:02.487521] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 18:52:03.342977] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 18:52:04.188920] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Political_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 18:52:05.498749] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 18:52:06.345733] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 18:52:07.199380] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 18:52:08.042079] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 18:52:08.896537] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 18:52:09.743588] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '37',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 18:52:10.611817] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 18:52:10.616838] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021134B85990>]
[2023-10-05 18:52:10.618812] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021134CF3090>]
[2023-10-05 19:01:07.425212] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C58E1B8410>]
[2023-10-05 19:01:07.426206] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C58E1D5A50>]
[2023-10-05 19:01:08.276750] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 19:01:09.133482] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 19:01:09.996461] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 19:01:10.850791] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Political_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 19:01:11.701565] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 19:01:12.562320] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 19:01:13.418142] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 19:01:14.281175] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 19:01:15.138599] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 19:01:15.984582] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '38',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 19:01:16.842334] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 19:01:16.848382] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C58E1B8410>]
[2023-10-05 19:01:16.849382] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C58E1D5A50>]
[2023-10-05 21:33:44.095186] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000187FF5AA650>]
[2023-10-05 21:33:44.097186] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000187FF5A85D0>]
[2023-10-05 21:33:44.978558] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 21:34:22.674704] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-05 21:34:23.603329] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-05 22:15:06.022236] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021449174190>]
[2023-10-05 22:15:06.023228] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021426D11A10>]
[2023-10-05 22:15:06.904049] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:22:44.692153] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000287F3F71F10>]
[2023-10-05 22:22:44.693531] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000028796449E10>]
[2023-10-05 22:22:45.619792] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:24:33.639005] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002C1FF8BB210>]
[2023-10-05 22:24:33.640007] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002C18B0D0950>]
[2023-10-05 22:24:34.545740] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:25:33.935664] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:25:34.852501] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 5 
    ]
[2023-10-05 22:26:17.323398] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000156FA5468D0>]
[2023-10-05 22:26:17.324399] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000156F8D18150>]
[2023-10-05 22:26:18.187693] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:27:23.919725] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:34:40.570211] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002347FE3A150>]
[2023-10-05 22:34:40.571209] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002347F3C7DD0>]
[2023-10-05 22:34:41.413592] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:34:45.542895] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:36:04.979231] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:36:19.794887] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:38:15.316437] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E93C826710>]
[2023-10-05 22:38:15.317345] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E93C825290>]
[2023-10-05 22:38:16.176453] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:39:12.060397] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:39:52.427420] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001CD498F5CD0>]
[2023-10-05 22:39:52.428421] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001CD46FD3AD0>]
[2023-10-05 22:39:53.328003] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:39:56.154815] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-04 14:06:00.449010] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002ACF2EFF950>]
[2023-10-04 14:06:00.449010] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002ACF2CE58D0>]
[2023-10-04 14:06:00.902700] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:06:01.143807] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:06:01.370209] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (1, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav');
    WHERE 1=1
    ]
[2023-10-04 14:06:01.378390] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002ACF2EFF950>]
[2023-10-04 14:06:01.387778] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002ACF2CE58D0>]
[2023-10-04 14:06:39.985108] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020D39231F10>]
[2023-10-04 14:06:39.985108] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020D39231D50>]
[2023-10-04 14:06:40.448762] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:06:40.458741] [Manav Trivedi] [FAIL] [Unable to find file path: PRO-82_Polling]
[2023-10-04 14:06:40.463208] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000020D39231F10>]
[2023-10-04 14:06:40.479308] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000020D39231D50>]
[2023-10-04 14:06:54.472621] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002169EE26390>]
[2023-10-04 14:06:54.488168] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002169E554690>]
[2023-10-04 14:06:54.948944] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:06:54.950054] [Manav Trivedi] [FAIL] [Unable to find file path: PRO-82_Polling]
[2023-10-04 14:06:54.966611] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002169EE26390>]
[2023-10-04 14:06:54.969288] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002169E554690>]
[2023-10-04 14:07:05.663545] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000016C08A26590>]
[2023-10-04 14:07:05.663545] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000016C0867FA10>]
[2023-10-04 14:07:06.135512] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:07:06.388949] [Manav Trivedi] [FAIL] [Unable to execute sql 
 CREATE TABLE Polling (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Article INT,
    Question VARCHAR(1000),
    OptionFirst VARCHAR(1000),
    OptionSecond VARCHAR(1000),
    OptionThird VARCHAR(1000),
    OptionFourth VARCHAR(1000),
    VotesFirst INT,
    VotesSecond INT,
    VotesThird INT,
    VotesFourth INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
); with error (1050, "Table 'Polling' already exists")]
[2023-10-04 14:07:06.641654] [Manav Trivedi] [SUCCESS] [CREATE TABLE Polling (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_Article INT,
    Question VARCHAR(1000),
    OptionFirst VARCHAR(1000),
    OptionSecond VARCHAR(1000),
    OptionThird VARCHAR(1000),
    OptionFourth VARCHAR(1000),
    VotesFirst INT,
    VotesSecond INT,
    VotesThird INT,
    VotesFourth INT,
    InProduction BOOLEAN,
    InsertedAt DATETIME,
    InsertedBy VARCHAR(50),
    FOREIGN KEY (ID_Article) REFERENCES Article(ID)
);]
[2023-10-04 14:07:06.656668] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000016C08A26590>]
[2023-10-04 14:07:06.673864] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000016C0867FA10>]
[2023-10-04 14:10:19.444449] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F701231D50>]
[2023-10-04 14:10:19.460015] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F7005685D0>]
[2023-10-04 14:10:19.905336] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:10:20.146653] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:10:20.371810] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav');
    WHERE 1=1
    ]
[2023-10-04 14:10:20.371810] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F701231D50>]
[2023-10-04 14:10:20.394240] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F7005685D0>]
[2023-10-04 14:12:22.612515] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000022350753F50>]
[2023-10-04 14:12:22.628314] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000022350752C10>]
[2023-10-04 14:12:23.121556] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:12:23.385340] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:12:23.618911] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav');
    WHERE 1=1
    ]
[2023-10-04 14:12:23.618911] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000022350753F50>]
[2023-10-04 14:12:23.636379] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000022350752C10>]
[2023-10-04 14:13:06.250583] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027521F31F10>]
[2023-10-04 14:13:06.266109] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027521F31D50>]
[2023-10-04 14:13:06.776871] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:13:07.018388] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:13:07.260816] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav')
    WHERE 1=1
    ]
[2023-10-04 14:13:07.276451] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000027521F31F10>]
[2023-10-04 14:13:07.293816] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000027521F31D50>]
[2023-10-04 14:13:37.605592] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C3DEB31D50>]
[2023-10-04 14:13:37.605592] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C3DE2985D0>]
[2023-10-04 14:13:38.092140] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:13:38.336763] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:13:38.577076] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav')
    WHERE 1=1
    ]
[2023-10-04 14:13:38.588602] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C3DEB31D50>]
[2023-10-04 14:13:38.597804] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C3DE2985D0>]
[2023-10-04 14:16:01.283159] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C06BA53F50>]
[2023-10-04 14:16:01.302022] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C06BA52C10>]
[2023-10-04 14:16:01.817243] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:16:02.067590] [Manav Trivedi] [FAIL] [error building sql statement with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThir' at line 2")]
[2023-10-04 14:16:02.313577] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM INSERT INTO Polling (ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, InProduction, InsertedAt, InsertedBy) VALUES (9999, 'What is your question?', 'Option 1', 'Option 2', 'Option 3', 'Option 4', 0, 0, 0, 0, TRUE, NOW(), 'Manav')
    WHERE 1=1
    ]
[2023-10-04 14:16:02.329133] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C06BA53F50>]
[2023-10-04 14:16:02.344185] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C06BA52C10>]
[2023-10-04 14:44:12.453304] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000270402D5610>]
[2023-10-04 14:44:12.468997] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027040926790>]
[2023-10-04 14:44:12.926048] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 14:44:13.385885] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Manav Trivedi',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-04 14:44:13.848194] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-04 14:44:14.075593] [Manav Trivedi] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    : 
 error (1062, "Duplicate entry 'Prime Minister of Australia' for key 'Politician_PositionNameCodes.NameCode'")]
[2023-10-04 14:44:14.321471] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_PositionNameCodes (NameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:14.780337] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_PositionNameCodes;
    ]
[2023-10-04 14:44:15.703979] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Manav Trivedi',
    '\img\imghere',
    'another more general summary here'
    );
    ]
[2023-10-04 14:44:16.161304] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-04 14:44:16.627168] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:17.088069] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-04 14:44:17.546443] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    4,
    17,
    1, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:17.997387] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-04 14:44:18.460074] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:18.938784] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-04 14:44:19.390368] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '17',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-04 14:44:19.870583] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-04 14:44:19.882644] [Manav Trivedi] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000270402D5610>]
[2023-10-04 14:44:19.886104] [Manav Trivedi] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000027040926790>]
[2023-10-04 20:58:23.177393] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021A81445B90>]
[2023-10-04 20:58:23.178353] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021AFEFB6290>]
[2023-10-04 20:58:24.064718] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 20:58:24.934672] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-04 20:58:24.938672] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021A81445B90>]
[2023-10-04 20:58:24.939678] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021AFEFB6290>]
[2023-10-04 21:04:23.341862] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000022F40585B90>]
[2023-10-04 21:04:23.342862] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000022F3E126290>]
[2023-10-04 21:04:24.204126] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:04:24.632707] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 ALTER TABLE Politician
ADD Byline VARCHAR(400),
ADD Political_Position VARCHAR(1000), 
ADD Party VARCHAR(1000), 
ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

CREATE TABLE Politician_CampaignPolicies(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    PolicyNameTitle VARCHAR(1000),
    PolicyInfo VARCHAR(4000)
) with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CREATE TABLE Politician_CampaignPolicies(\n    ID INT AUTO_INCREMENT PRIMARY KEY,' at line 7")]
[2023-10-04 21:04:25.062274] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD Byline VARCHAR(400),
ADD Political_Position VARCHAR(1000), 
ADD Party VARCHAR(1000), 
ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

CREATE TABLE Politician_CampaignPolicies(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    PolicyNameTitle VARCHAR(1000),
    PolicyInfo VARCHAR(4000)
)]
[2023-10-04 21:04:25.065284] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000022F40585B90>]
[2023-10-04 21:04:25.065284] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000022F3E126290>]
[2023-10-04 21:04:38.090551] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D425076290>]
[2023-10-04 21:04:38.092490] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D4274D5B90>]
[2023-10-04 21:04:38.942746] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:04:39.835849] [Daniel Ciccotosto-Camp] [SUCCESS] [ALTER TABLE Politician
ADD Byline VARCHAR(400),
ADD Political_Position VARCHAR(1000), 
ADD Party VARCHAR(1000), 
ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )]
[2023-10-04 21:04:39.838843] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D425076290>]
[2023-10-04 21:04:39.839849] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D4274D5B90>]
[2023-10-04 21:04:51.281836] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001BBA9855B90>]
[2023-10-04 21:04:51.281836] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001BBA73F6290>]
[2023-10-04 21:04:52.149003] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:04:53.049531] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

CREATE TABLE Politician_CampaignPolicies(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Fname VARCHAR(255),
    Lname VARCHAR(255),
    PolicyNameTitle VARCHAR(1000),
    PolicyInfo VARCHAR(4000)
)]
[2023-10-04 21:04:53.052052] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001BBA9855B90>]
[2023-10-04 21:04:53.052052] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001BBA73F6290>]
[2023-10-04 21:06:27.547478] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001830C4A5B90>]
[2023-10-04 21:06:27.548467] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001830A046290>]
[2023-10-04 21:06:28.415071] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:06:28.850190] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL with error (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DROP TABLE Politician_Position\n\n-- inserted with the following:\n--  python .\\inf' at line 16")]
[2023-10-04 21:06:29.284270] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:06:29.288357] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001830C4A5B90>]
[2023-10-04 21:06:29.289342] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001830A046290>]
[2023-10-04 21:06:39.160664] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000015728634D90>]
[2023-10-04 21:06:39.162666] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001572AC9A110>]
[2023-10-04 21:06:40.076958] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:06:40.514134] [Daniel Ciccotosto-Camp] [FAIL] [Unable to execute sql 
 -- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
-- DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL with error (3730, "Cannot drop table 'Politician_PositionNameCodes' referenced by a foreign key constraint 'Politician_Position_ibfk_1' on table 'Politician_Position'.")]
[2023-10-04 21:06:40.947878] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
-- DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:06:40.951889] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000015728634D90>]
[2023-10-04 21:06:40.952900] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001572AC9A110>]
[2023-10-04 21:07:04.187822] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C8FAA84D90>]
[2023-10-04 21:07:04.188980] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C8FD08A110>]
[2023-10-04 21:07:05.095659] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:07:06.005608] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

-- DROP TABLE Politician_PositionNameCodes
DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:07:06.007618] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C8FAA84D90>]
[2023-10-04 21:07:06.008607] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C8FD08A110>]
[2023-10-04 21:07:16.165491] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000029BADB34D90>]
[2023-10-04 21:07:16.166500] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000029BB02CA110>]
[2023-10-04 21:07:17.027545] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-04 21:07:17.923034] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

DROP TABLE Politician_PositionNameCodes
-- DROP TABLE Politician_Position

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-04 21:07:17.927188] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000029BADB34D90>]
[2023-10-04 21:07:17.928190] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000029BB02CA110>]
[2023-10-05 07:03:03.280475] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001D397C54D90>]
[2023-10-05 07:03:03.282466] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001D397E331D0>]
[2023-10-05 07:03:03.893076] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 07:03:04.521087] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

-- DROP TABLE Politician_Position
-- DROP TABLE Politician_PositionNameCodes

ALTER TABLE Politician
DROP COLUMN COUNTRY

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-05 07:03:04.525088] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001D397C54D90>]
[2023-10-05 07:03:04.527092] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001D397E331D0>]
[2023-10-05 07:15:39.090979] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001847FAE3A10>]
[2023-10-05 07:15:39.092524] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001847FCBB410>]
[2023-10-05 07:15:39.675136] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 07:15:40.317235] [Daniel Ciccotosto-Camp] [SUCCESS] [-- ALTER TABLE Politician
-- ADD Byline VARCHAR(400),
-- ADD Political_Position VARCHAR(1000), 
-- ADD Party VARCHAR(1000), 
-- ADD COUNTRY VARCHAR(10) DEFAULT 'AUS'

-- CREATE TABLE Politician_CampaignPolicies(
--     ID INT AUTO_INCREMENT PRIMARY KEY,
--     Fname VARCHAR(255),
--     Lname VARCHAR(255),
--     PolicyNameTitle VARCHAR(1000),
--     PolicyInfo VARCHAR(4000)
-- )

-- DROP TABLE Politician_Position
-- DROP TABLE Politician_PositionNameCodes

ALTER TABLE Politician_CampaignPolicies
ADD InProduction BOOLEAN,
ADD InsertedAt DATETIME,
ADD InsertedBy VARCHAR(50)

-- inserted with the following:
--  python .\inf\transactionDataClient.py --DDLFromFile PRO-101.SQL]
[2023-10-05 07:15:40.324325] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001847FAE3A10>]
[2023-10-05 07:15:40.325325] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001847FCBB410>]
[2023-10-05 07:28:51.051446] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002A5C8AE5990>]
[2023-10-05 07:28:51.053395] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002A5CA8B9810>]
[2023-10-05 07:28:51.633056] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 07:28:52.278956] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 07:28:52.839772] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 07:28:53.324633] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    : 
 error (1054, "Unknown column 'Politicial_Position' in 'field list'")]
[2023-10-05 07:28:53.635657] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 07:28:54.177231] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 07:28:54.533190] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-05 07:28:54.825536] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_Position(PositionNameCode, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Prime Minister of Australia',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:55.152090] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    : 
 error (1146, "Table 'newscuration.Politician_Position' doesn't exist")]
[2023-10-05 07:28:55.558631] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_Position;
    ]
[2023-10-05 07:28:55.561638] [Daniel Ciccotosto-Camp] [FAIL] [failed to properly insert record. Check table name exists and/or is correct.]
[2023-10-05 07:28:56.170648] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:56.845143] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 07:28:57.569661] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:58.195800] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 07:28:58.807036] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '33',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 07:28:59.549184] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 07:28:59.557660] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000002A5C8AE5990>]
[2023-10-05 07:28:59.559730] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000002A5CA8B9810>]
[2023-10-05 17:54:09.356743] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000027D86B5BA10>]
[2023-10-05 17:54:09.359748] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000027D86E49110>]
[2023-10-05 17:54:10.016250] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:54:11.028789] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 17:54:11.667153] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 17:54:11.967645] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    : 
 error (1054, "Unknown column 'Politicial_Position' in 'field list'")]
[2023-10-05 17:54:12.240324] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 17:54:13.004080] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 17:54:13.808783] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:54:14.512813] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 17:54:15.226429] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:54:15.885435] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 17:54:18.295482] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '34',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:54:19.334743] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 17:55:49.606446] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000262E9945990>]
[2023-10-05 17:55:49.609445] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000262E9AB3090>]
[2023-10-05 17:55:50.234381] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:55:51.097897] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 17:55:52.026768] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 17:55:52.327709] [Daniel Ciccotosto-Camp] [FAIL] [error parsing SQL statement 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    : 
 error (1054, "Unknown column 'Politicial_Position' in 'field list'")]
[2023-10-05 17:55:52.633878] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Politicial_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 17:55:53.554660] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 17:55:54.151672] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:55:54.780634] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 17:55:55.356968] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:55:55.917565] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 17:55:56.533038] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '35',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:55:57.130134] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 17:55:57.137116] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000262E9945990>]
[2023-10-05 17:55:57.139123] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000262E9AB3090>]
[2023-10-05 17:56:39.310296] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000204446B87D0>]
[2023-10-05 17:56:39.312262] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000204446B9110>]
[2023-10-05 17:56:39.942061] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:56:40.546514] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-05 17:56:40.565504] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000204446B87D0>]
[2023-10-05 17:56:40.567573] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000204446B9110>]
[2023-10-05 17:59:02.262447] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001F54FF05990>]
[2023-10-05 17:59:02.264429] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001F550073090>]
[2023-10-05 17:59:03.003031] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 17:59:03.917151] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 17:59:04.838960] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 17:59:05.557264] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Political_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 17:59:06.127109] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 17:59:07.091378] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:59:07.603606] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 17:59:08.212526] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:59:09.127319] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 17:59:09.958802] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '36',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 17:59:10.675287] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 17:59:10.683064] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001F54FF05990>]
[2023-10-05 17:59:10.685347] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001F550073090>]
[2023-10-05 18:49:38.111467] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000274A86E87D0>]
[2023-10-05 18:49:38.111467] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000274A86E9110>]
[2023-10-05 18:49:38.951300] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 18:49:41.048910] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE 1=1
    ]
[2023-10-05 18:49:41.134786] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x00000274A86E87D0>]
[2023-10-05 18:49:41.135079] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x00000274A86E9110>]
[2023-10-05 18:52:00.790514] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021134B85990>]
[2023-10-05 18:52:00.792282] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021134CF3090>]
[2023-10-05 18:52:01.641119] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 18:52:02.487521] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 18:52:03.342977] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 18:52:04.188920] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Political_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 18:52:05.498749] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 18:52:06.345733] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 18:52:07.199380] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 18:52:08.042079] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 18:52:08.896537] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 18:52:09.743588] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '37',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 18:52:10.611817] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 18:52:10.616838] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x0000021134B85990>]
[2023-10-05 18:52:10.618812] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x0000021134CF3090>]
[2023-10-05 19:01:07.425212] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001C58E1B8410>]
[2023-10-05 19:01:07.426206] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001C58E1D5A50>]
[2023-10-05 19:01:08.276750] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 19:01:09.133482] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph)
    VALUES (
    'examplewebsite.com',
    10.23,
    22.4,
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    'This is the header',
    'This is the originalText',
    'this would be the chatGPT response in paragraph form'
    );
    ]
[2023-10-05 19:01:09.996461] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-05 19:01:10.850791] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician (Fname, Lname, About, Age, Gender, InProduction, InsertedAt, InsertedBy, ImageLink, Summary, Byline, Political_Position, Party, CountryCode)
    VALUES (
    'John',
    'Doe',
    'John did some incredible things',
    '32',
    'Male',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp',
    '\img\imghere',
    'another more general summary here',
    'This would be a politcian byline',
    'this would be their politicial Position',
    'LNP',
    'AUS'
    );
    ]
[2023-10-05 19:01:11.701565] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician;
    ]
[2023-10-05 19:01:12.562320] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '1',
    'Your mom?',
    'opt1',
    'op12',
    'op3',
    'op4',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 19:01:13.418142] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-05 19:01:14.281175] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_CampaignPolicies(Fname, Lname, PolicyNameTitle, PolicyInfo, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Donald',
    'Trump',
    'Affordable Housing',
    'I want to make housing affordable',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 19:01:15.138599] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_CampaignPolicies;
    ]
[2023-10-05 19:01:15.984582] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Devastating blaze',
    'the term "devastating" indicates a tragice loss of life',
    '38',
    0, 
    NOW(),
    'Daniel Ciccotosto-Camp'
    );
    ]
[2023-10-05 19:01:16.842334] [Daniel Ciccotosto-Camp] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-05 19:01:16.848382] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing Connection <pymysql.connections.Connection object at 0x000001C58E1B8410>]
[2023-10-05 19:01:16.849382] [Daniel Ciccotosto-Camp] [SUCCESS] [Closing cursor <pymysql.cursors.DictCursor object at 0x000001C58E1D5A50>]
[2023-10-05 21:33:44.095186] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000187FF5AA650>]
[2023-10-05 21:33:44.097186] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000187FF5A85D0>]
[2023-10-05 21:33:44.978558] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 21:34:22.674704] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-05 21:34:23.603329] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-05 22:15:06.022236] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000021449174190>]
[2023-10-05 22:15:06.023228] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000021426D11A10>]
[2023-10-05 22:15:06.904049] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:22:44.692153] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000287F3F71F10>]
[2023-10-05 22:22:44.693531] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000028796449E10>]
[2023-10-05 22:22:45.619792] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:24:33.639005] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002C1FF8BB210>]
[2023-10-05 22:24:33.640007] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002C18B0D0950>]
[2023-10-05 22:24:34.545740] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:25:33.935664] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:25:34.852501] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 5 
    ]
[2023-10-05 22:26:17.323398] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000156FA5468D0>]
[2023-10-05 22:26:17.324399] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000156F8D18150>]
[2023-10-05 22:26:18.187693] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:27:23.919725] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:34:40.570211] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000002347FE3A150>]
[2023-10-05 22:34:40.571209] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000002347F3C7DD0>]
[2023-10-05 22:34:41.413592] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:34:45.542895] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:36:04.979231] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:36:19.794887] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]

[2023-10-05 22:38:15.316437] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001E93C826710>]
[2023-10-05 22:38:15.317345] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001E93C825290>]
[2023-10-05 22:38:16.176453] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:39:12.060397] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-05 22:39:52.427420] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001CD498F5CD0>]
[2023-10-05 22:39:52.428421] [Daniel Ciccotosto-Camp] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001CD46FD3AD0>]
[2023-10-05 22:39:53.328003] [Daniel Ciccotosto-Camp] [SUCCESS] [Established connection to database newscuration]
[2023-10-05 22:39:56.154815] [Daniel Ciccotosto-Camp] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician_CampaignPolicies
    WHERE (Fname LIKE '%Donald%' OR Lname LIKE '%Donald%') OR 
0=1
    ]
[2023-10-04 15:12:54.143219] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x00000238E0DF59D0>]
[2023-10-04 15:12:54.151271] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x00000238E0A15DD0>]
[2023-10-04 15:12:54.631637] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]

[2023-10-10 14:06:49.040219] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x000001B0B6FCF4D0>]
[2023-10-10 14:06:49.049741] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x000001B0B7B22510>]
[2023-10-10 14:06:49.549353] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
[2023-10-10 14:07:05.813558] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:07:07.676442] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-10 14:07:08.358810] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE 1=1
    ]
[2023-10-10 14:07:09.110692] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:07:09.844468] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:07:17.600150] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:07:19.505672] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:07:20.299390] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article (URL, upperBias, lowerBias, InProduction, InsertedAt, InsertedBy, Header, OriginalText, SummaryParagraph, Views)
    VALUES (
    'https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become',
    0.7906976744186046,
    0.5968992248062015,
    0, 
    NOW(),
    'Manav Trivedi',
    'The greater the fear Trump feels, the more sinister his threats become',
    'Some Republicans in Congress want Trump as speaker of the House. But why? He already directs them by remote control �DEATH!� tweeted Donald Trump about Gen Mark Milley, the former chairman of the Joint Chiefs of Staff (AKA �My Generals�). �TRAITOR!� he said about former speaker of the House Kevin McCarthy (AKA �My Kevin�). �Monster� and �Deranged Lunatic� he labeled the New York state attorney general, Letitia James, who is prosecuting the case against him for his false valuations of Trump properties. �Deranged�, �Psycho� and �Crackhead� he called special prosecutor Jack Smith, who has charged him for his role in the January 6 coup attempt and his theft of classified documents. �We�ll stand up to crazy Nancy Pelosi, who ruined San Francisco � how�s her husband doing, anybody know?� he shouted at a rally, referring to Paul Pelosi, who was nearly murdered by a hammer-wielding assassin. �Crooked Joe Biden, let�s indict the motherfucker! Let�s indict him,� Trump said to a cheering crowd. �A racist � having an affair with the head of the gang or a gang member,� he claimed about Fani Willis, the Fulton county district attorney in Georgia, prosecuting him for the fake electors scheme. �Animal� and �Degenerate Psychopath� he called Alvin Bragg, the Manhattan district attorney, who has charged him with campaign bribery. �[Senator Charles] Schumer�s girlfriend � is running this case against me,� he lied about a clerk in the New York courtroom, identifying her by name. For that transgression, Manhattan supreme court justice Arthur Engoron, who Trump previously said should be �disbarred�, issued a limited gag rule forbidding him from targeting officers of the court. Needless to say, Trump�s vilification of Bragg, Willis and James, all Black, is an extension of his lifelong campaign for white supremacy, going back to his discrimination against Black housing buyers and his full-page ads in the New York newspapers in 1989 calling for the death penalty for five Black and Hispanic youths, the �Central Park Five�, who were innocent of the charges against them. But he now has a larger agenda than a race war here and there. Trump�s torrent of attacks on judges, prosecutors and witnesses is of a piece with his larger project to delegitimize and demolish the institutions of government, including now the House of Representatives through the historic first overthrow of a sitting speaker. His goal in every arena is the same: to clear the path to one-man rule. His threats, incitements and smears are more than outbursts. They are statements of intention for his next presidency. The constitution must be suspended to overturn the results of the 2020 election: �A Massive Fraud of this type and magnitude allows for the termination of all rules, regulations, and articles, even those found in the Constitution,� he has proposed. He has announced he will prosecute and imprison his political opponents: �I will appoint a real special �prosecutor� to go after the most corrupt president in the history of the USA, Joe Biden, the entire Biden crime family, & all others involved with the destruction of our elections, borders, & country itself!� He has pledged to purge the federal civil service and replace its employees with Trump loyalists: �You�re fired, get out, you�re fired,� he said, repeating his signature phrase from his television show The Apprentice. �[You] have to do it. Deep state. Washington will be an entirely different place.� Facing 91 felony counts in four separate trials, not to mention his second defamation judgment in the E Jean Carroll adjudicated rape case and the court-ordered unraveling of the Trump Organization in New York for decades of financial fraud, Trump has not stopped committing offenses. He has been a fount of ceaseless threats to specific officers of the court that he well knows may incite violence against them, interspersed with other calls for extralegal violence, such as shooting shoplifters. �Shot!� he shouted to a cheering crowd. If people can�t be bought off, told off or pushed off, they must be offed. Jack Smith�s filings to the Washington DC court requesting a gag order are a running commentary on Trump�s continuing crime wave. �Like his previous public disinformation campaign regarding the 2020 presidential election,� Smith wrote, �the defendant�s recent extrajudicial statements are intended to undermine public confidence in an institution � the judicial system � and to undermine confidence in and intimidate individuals � the court, the jury pool, witnesses and prosecutors.� In his collection of Trump�s latest �prejudicial statements,� Smith highlighted that Gen Milley, who Trump stated �had committed treason and suggested that he should be executed�, is �a witness cited in the indictment�. Smith addressed the issue of witness intimidation and tampering directly: �Even assuming that certain witnesses are not intimidated by the defendant�s statements, other witnesses see and may be affected by what the defendant does to those who are called to testify in this case. And regardless of whether certain witnesses are intimidated by the defendant�s extrajudicial statements, the defendant should not be permitted to attack or bolster the credibility of any witness in a manner that could influence prospective jurors.� Adding new felony charges against Trump for his egregious efforts at witness tampering would slow down the case against him. But the special prosecutor retains the option of filing those charges later. Trump�s inflammatory language could yet lead to further indictments. Trump�s threats are not simply rhetorical explosions but illegal attempts to intimidate witnesses and prejudice the jury. But they are more than that too. For Trump, the further the dismantlement of the rule of law, the smoother the path to one-man rule. Attempting to intimidate officers of the court and to tamper with witnesses is more than his legal strategy; it�s central to his overarching political strategy. He has systemic purpose. He is seeking to sideline every institution of government other than a presidency he occupies in which he is not bound by constitutional confines. By eliminating checks and balances now, he�s preparing for dictatorial rule. In 2020, under his aegis, the Republican party passed no platform whatsoever. Now, his incitements are the planks of the Republican platform on which all Republicans must run. His threats are his promises of what is to come. He is moving beyond the politics of grievance to the menace of revenge. Making him their candidate, Republicans are pledged to his violence and illegality. If he can escape accountability for his crimes, the rule of law collapses and the path is cleared for him. That is his vision. The criminal is the political. Trump seized upon the chance to advance the collapse of the speakership as an opportunity to reduce another governmental body that might be a check on him. The fewer barriers to one-man rule, the easier his road back to power. The party�s impotence is his strength. Kevin McCarthy�s demise appeared to him as a fortunate opening to grind toward control. The House Republicans rehearse an endless revenge tragedy strewing bodies on the stage. They flail at the Democrats, who for the crucial motion to vacate removed themselves to the reserved seats in the colosseum to watch the Republicans devour their speaker. The Republicans blamed the Democrats for failing to save McCarthy from the Republicans. McCarthy contrived to cooperate in his own destruction upon accepting the speakership by agreeing that one member alone could file a motion to vacate. Brutus, undisguised, was already lurking. McCarthy had put a knife in his hand in the first scene. With McCarthy�s corpse still warm, the speaker pro tempore Patrick McHenry�s first act was to evict former speaker Nancy Pelosi from her hideaway office, a little piece of real estate within the Capitol. It turns out it was a last sniveling request to McHenry from McCarthy, a spasm preceding rigor mortis. When she was speaker, she accorded the favor of the office to Dennis Hastert as a former speaker for as long as he remained in the House (before his pedophilia conviction). At the moment McHenry made his graceless gesture, Pelosi was in California, having accompanied the body of her dear friend Senator Dianne Feinstein to prepare for her funeral. He struck out at Pelosi as though her eviction punished her alongside the Republican eviction of Kevin McCarthy. It was presumably an equivalent slam of the Democratic speaker for the slamming of the Republican one. But Pelosi had left the speakership in dignity, handed off her baton and stays as an eminence, while McCarthy was despised, trampled and cut to pieces by his own. She served as the speaker for four years; he completed eight months, not quite to term. The displacement of Republican hostility to Pelosi only highlights their auto-da-fe of McCarthy. He is their former lord of the flies, felled by the swarm of flies. McHenry�s first act, ingratiating himself to the recently departed, established the tone of his even briefer transitional tenure. McCarthy all along tried to play to the bullies, joined in with the bullies, was roughed up by the bullies, and, finally, rousted by the bullies; after he was bullied out, his figurehead successor messed the clean slate with a small act of bullying. The hunger games continue. Trump was silent on McCarthy�s defenestration, the gratitude McCarthy received for his self-abasement, down to the nicety of regularly giving Trump gifts of jars of pink and red Starbursts, the former president�s favorite candy. The sweetener did not sweeten things for the candy man. Trump was the not-so-hidden hand reaching from behind the curtain, waving on the assassins. Stroking Trump almost to the last with praise, as �stronger today than in 2016�, McCarthy walked to his destiny with a knife about to be planted in his back. Immediately after the vote to remove him, Matt Gaetz stated, �I would say that my conversations with the former president leave me with great confidence that I�m doing the right thing.� McCarthy�s reward for loyalty to Trump led him into the usual cul-de-sac of Republicans trying to contain Trump. Predictably, Trump demanded what McCarthy could not deliver. �UNLESS YOU GET EVERYTHING, SHUT IT DOWN!� Everyone who decides to be involved with Trump inevitably faces an unacceptable request. In McCarthy�s case, it was shutting down the government, which would be disastrous for the razor-thin Republican majority going into an election. �If somebody wants to remove [me] because I want to be the adult in the room, go ahead and try,� McCarthy challenged his enemies. He could not bring himself in the end obviously to damage his party�s power through a shutdown. So McCarthy faced a choice of self-destruction, either losing the speakership eventually or immediately. He took his chances. Trump has mused to a rapt Iowa crowd of followers about his own possible fate: �If I�m sitting down and that boat is going down and I�m on top of a battery and the water starts flooding in, I�m getting concerned, but then I look 10 yards to my left and there�s a shark over there, so I have a choice of electrocution and a shark, you know what I�m going to take? Electrocution.� McCarthy thought he could survive by accommodating Trump. Then he somehow believed he could navigate between the rock and the hard place. But he was still eaten by the sharks. He met the fate of all the other adults in the room. At once, like a jack-in-the-box, Sean Hannity, Fox News host, popped up to float the idea of Trump as speaker. Rupert Murdoch, Hannity�s erstwhile boss, has referred to Hannity as �a moron�, and, at least according to Murdoch chronicler Michael Wolff, Hannity was playing the jester, for a jab of ratings heroin. But he is a slavish Trump stalwart, following him like a daddy figure, perhaps explained by his recent anecdote: �By the way, when my father would hit me with a belt, I didn�t actually raise my voice. We used to be the land of the free, home of the brave. What happened? When did we become the land of the snowflake?� Hannity�s cri de coeur was more revelatory of the underlying psychology of authoritarianism than anything he has ever said. Trump doesn�t need the quotidian grief of being speaker when he can direct the inmates of the asylum by remote control, and, anyway, he�s busy in and out of court. But the fake speaker ploy presented itself as a terrific, if brief, opportunity for playacting and grifting, like the fake electors scheme without the real life truth and consequences. After Trump retreated from glowering at the defendant�s table in the Manhattan courtroom for several days, using the occasion to gin up a round of contributions, Letitia James pronounced, �The Donald Trump show is over.� But once that episode of the show ended, the special episode of Speaker Trump appeared on the schedule. When he was in the courtroom, he retweeted a drawing of himself seated next to Jesus, with the caption: �This is the most accurate court sketch of all time.� Then he tweeted a photo-shopped picture of himself in the speaker�s chair, wearing a red Maga cap and in his right hand lifting up the gavel. He had passed from crucifixion to resurrection in less time than Jesus. Hail, Trump! Representative Marjorie Taylor Greene tweeted ecstatically, �If Trump becomes Speaker of the House, the chamber will be like a Trump rally everyday!! It would be the House of MAGA!!!� But this Trump candidacy was a speaker-for-a-day con. Trump announced his endorsement of Representative Jim Jordan, founder of the rightwing Freedom Caucus, who had harassed two previous Republican speakers out of their chairs, run against McCarthy and, most importantly, was a co-conspirator in the January 6 coup attempt. For the speakership, Jordan faces Representative Steve Scalise, McCarthy�s majority leader, a get-along-go-along kind of guy, a wholly owned subsidiary of the oil industry, the candidate of K Street corporate lobbyists. Jordan had stonewalled a subpoena from the House January 6 committee to testify to his involvement. He had mobilized the �Stop the Steal� movement months before the election, was the key member of the House in White House meetings plotting how to stymie the certification of the electoral college count, texted White House chief of staff Mark Meadows on 5 January to put pressure on then vice-president Mike Pence to �call out all electoral votes that he believes are unconstitutional as no electoral votes at all�, and on the phone strategizing with Trump throughout the fateful day. That evening, after the devastation, he led 139 representatives to object to certification. If section 3 of the 14th amendment, enacted after the civil war, barring former Confederates who �shall have engaged in insurrection or rebellion� from holding federal office, applies to Trump, as two prominent conservative legal scholars have argued, then even more clearly and forcefully it applied to members of Congress, including Jim Jordan. After initially agreeing that Trump should be disqualified, Federalist Society co-founder Steven Calabresi, professor of law at Northwestern University, flipped, citing an article by Michael Mukasey, former attorney general under President George W Bush, that argued the provision did not cover the former president but only members of the Congress and other �officers of the United States�. However tendentious the argument, Mukasey � and Calabresi � had inadvertently made the case for disqualifying Jordan and the others who voted against certification on 6 January 2021 from serving in office at all. McCarthy�s fall has been another stepping stone for Trump�s return to power. Trump has announced he will go to the Capitol to intervene in the speaker contest and address the House Republican Conference. The last time he wanted to visit, to march with the January 6 mob, he was restrained by a secret service agent whom he allegedly grabbed by the throat. Trump would be the only member of the J6 prison choir to come to the Capitol since then. He had joined the jailed insurrectionists who had formed a singing group by overlaying his recital of the Pledge of Allegiance on their version of The Star Spangled Banner. Trump has promised �full pardons with an apology to many� of those convicted of rampaging through the Capitol�s corridors chanting, �Hang Mike Pence!� Now, Trump says he would return there as �a unifier�. But, first, he took time to trash his former chief of staff Gen John Kelly, who confirmed on 3 October to CNN that Trump had disparaged wounded, captured and tortured soldiers as �suckers� and �losers�. Kelly offered a description of Trump: �A person that has no idea what America stands for and has no idea what America is all about � A person who admires autocrats and murderous dictators. A person that has nothing but contempt for our democratic institutions, our constitution and the rule of law. There is nothing more that can be said. God help us.� After endorsing Jim Jordan, Trump wrote on Truth Social that Kelly was �by far the dumbest of my Military people � He was incapable of doing a good job, it was too much for him, and I couldn�t stand the guy, so I fired him like a �dog.�� The �wannabe dictator�, as Gen Milley calls him, is without theory or fig leaf. As the trials bear down, as Trump contemplates the shark or electrocution, he projects his The Pit and the Pendulum terror into violent threats. The greater the fear he feels, the more violent the threats. He is stalked by Thanatos. �DEATH!� Sidney Blumenthal is the author of The Permanent Campaign, published in 1980, and All the Power of the Earth: The Political Life of Abraham Lincoln, 1856-1860, the third of a projected five volumes. He is the former assistant and senior adviser to President Bill Clinton and senior adviser to Hillary Clinton',
    '- Some Republicans want Trump as speaker of the House
- Trump has directed insults towards various individuals, including Gen Mark Milley, Kevin McCarthy, Letitia James, and others
- Trumps attacks on judges, prosecutors, and witnesses are part of his larger project to undermine and demolish government institutions
- Trumps threats and incitements are more than outbursts; they are statements of intention for his next presidency
- Trump wants to suspend the constitution to overturn the results of the 2020 election
- Trump has announced plans to prosecute and imprison his political opponents and to purge the federal civil service
- Trumps language and actions are attempts to intimidate witnesses and prejudice the jury, but they also serve his political strategy to consolidate power
- McCarthys removal as Speaker of the House was seen as an opportunity for Trump to further weaken institutions and gain control
- Trumps candidacy as speaker was a brief opportunity for playacting and grifting
- Jim Jordan, a co-conspirator in the January 6 coup attempt, was endorsed by Trump for the speakership
- McCarthys fall has helped Trump in his quest to return to power
- Trump has made threats to visit the Capitol to intervene in the speaker contest and address the House Republican Conference
- Trump has trashed his former chief of staff Gen John Kelly after he confirmed Trumps derogatory remarks about soldiers
- Trumps violent threats appear to increase as his fear grows',
    1
    );
    ]
[2023-10-10 14:07:20.836685] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article;
    ]
[2023-10-10 14:07:21.595791] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:07:22.112973] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
  INSERT INTO Polling(ID_Article, Question, OptionFirst, OptionSecond, OptionThird, OptionFourth, VotesFirst, VotesSecond, VotesThird, VotesFourth, inProduction, InsertedAt, InsertedBy)
    VALUES (
    '52',
    'What is your opinion of the idea of Donald Trump becoming Speaker of the House?',
    'I strongly support the idea of Donald Trump becoming Speaker of the House.',
    'I somewhat support the idea of Donald Trump becoming Speaker of the House.',
    'I somewhat oppose the idea of Donald Trump becoming Speaker of the House.',
    'I strongly oppose the idea of Donald Trump becoming Speaker of the House.',
    '0',
    '0',
    '0',
    '0',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:22.613409] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Polling;
    ]
[2023-10-10 14:07:23.115653] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'remote control',
    'The phrase directs them by remote control implies that Trump has full control over the actions and decisions of Republicans in Congress, suggesting a biased portrayal of Trump as an authoritative figure manipulating others.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:23.617664] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:24.122932] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'DEATH!',
    'The use of the word DEATH! in capital letters and with an exclamation mark indicates an emotionally charged statement, conveying Trumps strong negative sentiment towards Gen Mark Milley.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:24.626462] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:25.141838] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'TRAITOR!',
    'The word TRAITOR! in capital letters suggests a highly charged and emotionally biased accusation made by Donald Trump against former Speaker of the House Kevin McCarthy, likely reflecting a strong negative sentiment.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:25.642207] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:26.143989] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Monster',
    'The word Monster is an emotionally charged term used by Trump to describe the New York state attorney general Letitia James, indicating a strong negative sentiment and potentially biased portrayal.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:26.646674] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:27.155853] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Deranged Lunatic',
    'The phrase Deranged Lunatic used by Trump to label the New York state attorney general Letitia James is a highly emotionally charged term, suggesting a biased and derogatory portrayal of James.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:27.662483] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:28.173360] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Crooked Joe Biden',
    'The use of the phrase Crooked Joe Biden suggests a strong negative sentiment and potential bias against Joe Biden, portraying him as deceitful or corrupt.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:28.676534] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:29.176533] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'racist',
    'The term racist is an emotionally charged word used by Trump to accuse Fani Willis, the Fulton county district attorney in Georgia, suggesting a biased portrayal or negative sentiment towards her.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:29.678703] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:30.198365] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Animal',
    'The word Animal is an emotionally charged term used by Trump to describe Alvin Bragg, the Manhattan district attorney, conveying a highly negative sentiment and potentially biased characterization.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:30.699895] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:31.216141] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Article_ArticleBias(KeyPhrase, BiasReason, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    'Degenerate Psychopath',
    'The phrase Degenerate Psychopath is an emotionally charged term used by Trump to describe Alvin Bragg, the Manhattan district attorney, suggesting a derogatory and biased portrayal.',
    '52',
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:31.730734] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Article_ArticleBias;
    ]
[2023-10-10 14:07:32.239127] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    INSERT INTO Politician_KeyTable(ID_Politician, ID_Article, InProduction, InsertedAt, InsertedBy)
    VALUES (
    5,
    52,
    0, 
    NOW(),
    'Manav Trivedi'
    );
    ]
[2023-10-10 14:07:32.742002] [Manav Trivedi] [SUCCESS] [Sucessfully transacted query: 
    SELECT MAX(ID) AS ID FROM Politician_KeyTable;
    ]
[2023-10-10 14:25:56.023078] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:25:56.523135] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    UPDATE Article
    SET Views = 2
    WHERE ID = 52 
    ]
[2023-10-10 14:33:24.572494] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:33:25.091309] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    UPDATE Article
    SET Views = 3
    WHERE ID = 52 
    ]
[2023-10-10 14:37:29.032337] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 14:37:29.563123] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    UPDATE Article
    SET Views = 4
    WHERE ID = 52 
    ]
[2023-10-10 15:02:08.911279] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Article
    WHERE URL = "https://www.theguardian.com/commentisfree/2023/oct/09/the-greater-the-fear-trump-feels-the-more-sinister-his-threats-become"
    ]
[2023-10-10 15:02:09.414864] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    UPDATE Article
    SET Views = 5
    WHERE ID = 52 
    ]
[2023-10-10 15:31:44.498132] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT * 
    FROM Politician
    WHERE (Fname LIKE '%John%' OR Lname LIKE '%John%') OR 
(Fname LIKE '%Doe%' OR Lname LIKE '%Doe%') OR 
0=1
    ]
[2023-10-10 15:31:44.989451] [Manav Trivedi] [SUCCESS] [Successfully attempted query: 
    SELECT A.*
    FROM Article A
    INNER JOIN Politician_KeyTable PK ON PK.ID_Article = A.ID
    WHERE ID_Politician = 1 
    ]
[2023-10-10 19:09:42.682370] [Manav Trivedi] [SUCCESS] [Established connection <pymysql.connections.Connection object at 0x0000020A478FED50>]
[2023-10-10 19:09:42.699317] [Manav Trivedi] [SUCCESS] [Established cursor <pymysql.cursors.DictCursor object at 0x0000020A4601E650>]
[2023-10-10 19:09:43.192427] [Manav Trivedi] [SUCCESS] [Established connection to database newscuration]
